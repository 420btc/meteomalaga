{"ast":null,"code":"import AsyncStorage from'@react-native-async-storage/async-storage';import{fetchCurrentTemperatureData,fetchCurrentRainData}from\"./weatherService\";const ALERTS_STORAGE_KEY='user_weather_alerts';export const createAlert=async alert=>{try{const id=Date.now().toString();const newAlert=Object.assign({},alert,{id,createdAt:new Date().toISOString()});const existingAlerts=await getAlerts();const updatedAlerts=[...existingAlerts,newAlert];await AsyncStorage.setItem(ALERTS_STORAGE_KEY,JSON.stringify(updatedAlerts));return newAlert;}catch(error){console.error('Error creating alert:',error);throw new Error('Failed to create alert');}};export const getAlerts=async()=>{try{const alertsJson=await AsyncStorage.getItem(ALERTS_STORAGE_KEY);if(!alertsJson){return[];}return JSON.parse(alertsJson);}catch(error){console.error('Error getting alerts:',error);return[];}};export const updateAlert=async updatedAlert=>{try{const alerts=await getAlerts();const updatedAlerts=alerts.map(alert=>alert.id===updatedAlert.id?updatedAlert:alert);await AsyncStorage.setItem(ALERTS_STORAGE_KEY,JSON.stringify(updatedAlerts));return updatedAlert;}catch(error){console.error('Error updating alert:',error);throw new Error('Failed to update alert');}};export const deleteAlert=async alertId=>{try{const alerts=await getAlerts();const filteredAlerts=alerts.filter(alert=>alert.id!==alertId);await AsyncStorage.setItem(ALERTS_STORAGE_KEY,JSON.stringify(filteredAlerts));}catch(error){console.error('Error deleting alert:',error);throw new Error('Failed to delete alert');}};export const toggleAlertActive=async alertId=>{try{const alerts=await getAlerts();const alert=alerts.find(a=>a.id===alertId);if(!alert){throw new Error('Alert not found');}const updatedAlert=Object.assign({},alert,{active:!alert.active});return await updateAlert(updatedAlert);}catch(error){console.error('Error toggling alert:',error);throw new Error('Failed to toggle alert');}};export const checkAlerts=async()=>{try{const alerts=await getAlerts();const activeAlerts=alerts.filter(alert=>alert.active);if(activeAlerts.length===0){return[];}const temperatureData=await fetchCurrentTemperatureData();const rainData=await fetchCurrentRainData();const results=[];for(const alert of activeAlerts){let triggered=false;let currentValue=0;if(alert.type==='temperature'){currentValue=temperatureData.current;if(alert.condition==='above'&&currentValue>alert.threshold){triggered=true;}else if(alert.condition==='below'&&currentValue<alert.threshold){triggered=true;}else if(alert.condition==='equals'&&Math.abs(currentValue-alert.threshold)<0.5){triggered=true;}}else if(alert.type==='rain'){currentValue=rainData;if(alert.condition==='above'&&currentValue>alert.threshold){triggered=true;}else if(alert.condition==='below'&&currentValue<alert.threshold){triggered=true;}else if(alert.condition==='equals'&&Math.abs(currentValue-alert.threshold)<0.5){triggered=true;}}results.push({triggered,alert,currentValue});}return results;}catch(error){console.error('Error checking alerts:',error);return[];}};","map":{"version":3,"names":["AsyncStorage","fetchCurrentTemperatureData","fetchCurrentRainData","ALERTS_STORAGE_KEY","createAlert","alert","id","Date","now","toString","newAlert","Object","assign","createdAt","toISOString","existingAlerts","getAlerts","updatedAlerts","setItem","JSON","stringify","error","console","Error","alertsJson","getItem","parse","updateAlert","updatedAlert","alerts","map","deleteAlert","alertId","filteredAlerts","filter","toggleAlertActive","find","a","active","checkAlerts","activeAlerts","length","temperatureData","rainData","results","triggered","currentValue","type","current","condition","threshold","Math","abs","push"],"sources":["/Users/atemjohnatem/Downloads/meteo-malaga/src/services/alertService.ts"],"sourcesContent":["import AsyncStorage from '@react-native-async-storage/async-storage';\nimport { UserAlert, AlertCheckResult } from '../types/alerts';\nimport { fetchCurrentTemperatureData, fetchCurrentRainData } from './weatherService';\n\nconst ALERTS_STORAGE_KEY = 'user_weather_alerts';\n\n// Create a new alert\nexport const createAlert = async (alert: Omit<UserAlert, 'id' | 'createdAt'>): Promise<UserAlert> => {\n  try {\n    // Generate a unique ID\n    const id = Date.now().toString();\n    \n    // Create the complete alert object\n    const newAlert: UserAlert = {\n      ...alert,\n      id,\n      createdAt: new Date().toISOString(),\n    };\n    \n    // Get existing alerts\n    const existingAlerts = await getAlerts();\n    \n    // Add the new alert\n    const updatedAlerts = [...existingAlerts, newAlert];\n    \n    // Save to storage\n    await AsyncStorage.setItem(ALERTS_STORAGE_KEY, JSON.stringify(updatedAlerts));\n    \n    return newAlert;\n  } catch (error) {\n    console.error('Error creating alert:', error);\n    throw new Error('Failed to create alert');\n  }\n};\n\n// Get all alerts\nexport const getAlerts = async (): Promise<UserAlert[]> => {\n  try {\n    const alertsJson = await AsyncStorage.getItem(ALERTS_STORAGE_KEY);\n    \n    if (!alertsJson) {\n      return [];\n    }\n    \n    return JSON.parse(alertsJson);\n  } catch (error) {\n    console.error('Error getting alerts:', error);\n    return [];\n  }\n};\n\n// Update an alert\nexport const updateAlert = async (updatedAlert: UserAlert): Promise<UserAlert> => {\n  try {\n    const alerts = await getAlerts();\n    \n    const updatedAlerts = alerts.map(alert => \n      alert.id === updatedAlert.id ? updatedAlert : alert\n    );\n    \n    await AsyncStorage.setItem(ALERTS_STORAGE_KEY, JSON.stringify(updatedAlerts));\n    \n    return updatedAlert;\n  } catch (error) {\n    console.error('Error updating alert:', error);\n    throw new Error('Failed to update alert');\n  }\n};\n\n// Delete an alert\nexport const deleteAlert = async (alertId: string): Promise<void> => {\n  try {\n    const alerts = await getAlerts();\n    \n    const filteredAlerts = alerts.filter(alert => alert.id !== alertId);\n    \n    await AsyncStorage.setItem(ALERTS_STORAGE_KEY, JSON.stringify(filteredAlerts));\n  } catch (error) {\n    console.error('Error deleting alert:', error);\n    throw new Error('Failed to delete alert');\n  }\n};\n\n// Toggle alert active status\nexport const toggleAlertActive = async (alertId: string): Promise<UserAlert> => {\n  try {\n    const alerts = await getAlerts();\n    \n    const alert = alerts.find(a => a.id === alertId);\n    \n    if (!alert) {\n      throw new Error('Alert not found');\n    }\n    \n    const updatedAlert = {\n      ...alert,\n      active: !alert.active\n    };\n    \n    return await updateAlert(updatedAlert);\n  } catch (error) {\n    console.error('Error toggling alert:', error);\n    throw new Error('Failed to toggle alert');\n  }\n};\n\n// Check if any alerts are triggered based on current weather data\nexport const checkAlerts = async (): Promise<AlertCheckResult[]> => {\n  try {\n    const alerts = await getAlerts();\n    const activeAlerts = alerts.filter(alert => alert.active);\n    \n    if (activeAlerts.length === 0) {\n      return [];\n    }\n    \n    // Fetch current weather data\n    const temperatureData = await fetchCurrentTemperatureData();\n    const rainData = await fetchCurrentRainData();\n    \n    // Check each alert\n    const results: AlertCheckResult[] = [];\n    \n    for (const alert of activeAlerts) {\n      let triggered = false;\n      let currentValue = 0;\n      \n      if (alert.type === 'temperature') {\n        currentValue = temperatureData.current;\n        \n        if (alert.condition === 'above' && currentValue > alert.threshold) {\n          triggered = true;\n        } else if (alert.condition === 'below' && currentValue < alert.threshold) {\n          triggered = true;\n        } else if (alert.condition === 'equals' && Math.abs(currentValue - alert.threshold) < 0.5) {\n          triggered = true;\n        }\n      } else if (alert.type === 'rain') {\n        currentValue = rainData;\n        \n        if (alert.condition === 'above' && currentValue > alert.threshold) {\n          triggered = true;\n        } else if (alert.condition === 'below' && currentValue < alert.threshold) {\n          triggered = true;\n        } else if (alert.condition === 'equals' && Math.abs(currentValue - alert.threshold) < 0.5) {\n          triggered = true;\n        }\n      }\n      \n      results.push({\n        triggered,\n        alert,\n        currentValue\n      });\n    }\n    \n    return results;\n  } catch (error) {\n    console.error('Error checking alerts:', error);\n    return [];\n  }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}