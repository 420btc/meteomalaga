{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";var _excluded=[\"passwordHash\"];function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable;})),t.push.apply(t,o);}return t;}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach(function(r){_defineProperty(e,r,t[r]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r));});}return e;}import AsyncStorage from'@react-native-async-storage/async-storage';import*as Crypto from\"expo-crypto\";var USERS_STORAGE_KEY='auth_users';var CURRENT_USER_KEY='auth_current_user';var SAVED_CREDENTIALS_KEY='auth_saved_credentials';var AUTH_STATE_KEY='auth_state';var USER_INDEX_KEY='auth_user_index';export var hashPassword=function(){var _ref=_asyncToGenerator(function*(password){var hash=yield Crypto.digestStringAsync(Crypto.CryptoDigestAlgorithm.SHA256,password);return hash;});return function hashPassword(_x){return _ref.apply(this,arguments);};}();var getUserIndex=function(){var _ref2=_asyncToGenerator(function*(){try{var indexJson=yield AsyncStorage.getItem(USER_INDEX_KEY);if(indexJson){return JSON.parse(indexJson);}var users=yield getUsers();var index={byUsername:{},byId:{}};for(var user of users){index.byUsername[user.username.toLowerCase()]=user.userId;index.byId[user.userId]=true;}yield AsyncStorage.setItem(USER_INDEX_KEY,JSON.stringify(index));return index;}catch(error){console.error('Error getting user index:',error);return{byUsername:{},byId:{}};}});return function getUserIndex(){return _ref2.apply(this,arguments);};}();var updateUserIndex=function(){var _ref3=_asyncToGenerator(function*(user){var isDelete=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;try{var index=yield getUserIndex();if(isDelete){delete index.byUsername[user.username.toLowerCase()];delete index.byId[user.userId];}else{index.byUsername[user.username.toLowerCase()]=user.userId;index.byId[user.userId]=true;}yield AsyncStorage.setItem(USER_INDEX_KEY,JSON.stringify(index));}catch(error){console.error('Error updating user index:',error);}});return function updateUserIndex(_x2){return _ref3.apply(this,arguments);};}();var usernameExists=function(){var _ref4=_asyncToGenerator(function*(username){var index=yield getUserIndex();return!!index.byUsername[username.toLowerCase()];});return function usernameExists(_x3){return _ref4.apply(this,arguments);};}();var userIdExists=function(){var _ref5=_asyncToGenerator(function*(userId){var index=yield getUserIndex();return!!index.byId[userId];});return function userIdExists(_x4){return _ref5.apply(this,arguments);};}();var getUserByUsername=function(){var _ref6=_asyncToGenerator(function*(username){try{var index=yield getUserIndex();var userId=index.byUsername[username.toLowerCase()];if(!userId){return null;}var users=yield getUsers();return users.find(function(user){return user.userId===userId;})||null;}catch(error){console.error('Error getting user by username:',error);return null;}});return function getUserByUsername(_x5){return _ref6.apply(this,arguments);};}();var getUserById=function(){var _ref7=_asyncToGenerator(function*(userId){try{var index=yield getUserIndex();if(!index.byId[userId]){return null;}var users=yield getUsers();return users.find(function(user){return user.userId===userId;})||null;}catch(error){console.error('Error getting user by ID:',error);return null;}});return function getUserById(_x6){return _ref7.apply(this,arguments);};}();export var registerUser=function(){var _ref8=_asyncToGenerator(function*(username,password){try{if(!username||!password){return{success:false,message:'El nombre de usuario y la contraseña son obligatorios.'};}if(username.length<3){return{success:false,message:'El nombre de usuario debe tener al menos 3 caracteres.'};}if(password.length<6){return{success:false,message:'La contraseña debe tener al menos 6 caracteres.'};}if(yield usernameExists(username)){return{success:false,message:'El nombre de usuario ya existe. Por favor, elige otro.'};}var passwordHash=yield hashPassword(password);var userId=\"user_\"+Date.now()+\"_\"+Math.random().toString(36).substring(2,15);var newUser={username:username,passwordHash:passwordHash,userId:userId,createdAt:new Date().toISOString(),displayName:username,coins:100,waterDrops:0,totalBets:0,wonBets:0,avatar:\"https://randomuser.me/api/portraits/lego/\"+(Math.floor(Math.random()*8)+1)+\".jpg\"};yield saveUser(newUser);yield updateUserIndex(newUser);yield saveCredentials({username:username,password:password,userId:userId,lastUsed:new Date().toISOString()});yield setCurrentUser(newUser);yield updateAuthState(true,userId);return{success:true,message:'¡Registro exitoso!',userId:newUser.userId,username:newUser.username};}catch(error){console.error('Error registering user:',error);return{success:false,message:'Error al registrar usuario. Por favor, inténtalo de nuevo.'};}});return function registerUser(_x7,_x8){return _ref8.apply(this,arguments);};}();export var loginUser=function(){var _ref9=_asyncToGenerator(function*(username,password){try{var user=yield getUserByUsername(username);if(!user){return{success:false,message:'Usuario no encontrado.'};}var passwordHash=yield hashPassword(password);if(passwordHash!==user.passwordHash){return{success:false,message:'Contraseña incorrecta.'};}yield saveCredentials({username:username,password:password,userId:user.userId,lastUsed:new Date().toISOString()});yield setCurrentUser(user);yield updateAuthState(true,user.userId);return{success:true,message:'¡Inicio de sesión exitoso!',userId:user.userId,username:user.username};}catch(error){console.error('Error logging in:',error);return{success:false,message:'Error al iniciar sesión. Por favor, inténtalo de nuevo.'};}});return function loginUser(_x9,_x10){return _ref9.apply(this,arguments);};}();export var logoutUser=function(){var _ref10=_asyncToGenerator(function*(){try{yield AsyncStorage.removeItem(CURRENT_USER_KEY);yield updateAuthState(false,null);}catch(error){console.error('Error logging out:',error);}});return function logoutUser(){return _ref10.apply(this,arguments);};}();export var getCurrentUser=function(){var _ref11=_asyncToGenerator(function*(){try{var userJson=yield AsyncStorage.getItem(CURRENT_USER_KEY);if(!userJson)return null;var user=JSON.parse(userJson);if(!(yield userIdExists(user.userId))){yield AsyncStorage.removeItem(CURRENT_USER_KEY);yield updateAuthState(false,null);return null;}return user;}catch(error){console.error('Error getting current user:',error);return null;}});return function getCurrentUser(){return _ref11.apply(this,arguments);};}();export var isLoggedIn=function(){var _ref12=_asyncToGenerator(function*(){try{var authState=yield getAuthState();if(authState){if(authState.isAuthenticated){var _user=yield getCurrentUser();return _user!==null;}return false;}var user=yield getCurrentUser();var isAuth=user!==null;yield updateAuthState(isAuth,(user==null?void 0:user.userId)||null);return isAuth;}catch(error){console.error('Error checking login status:',error);return false;}});return function isLoggedIn(){return _ref12.apply(this,arguments);};}();export var getUsers=function(){var _ref13=_asyncToGenerator(function*(){try{var usersJson=yield AsyncStorage.getItem(USERS_STORAGE_KEY);return usersJson?JSON.parse(usersJson):[];}catch(error){console.error('Error getting users:',error);return[];}});return function getUsers(){return _ref13.apply(this,arguments);};}();export var saveUser=function(){var _ref14=_asyncToGenerator(function*(user){try{var users=yield getUsers();var existingIndex=users.findIndex(function(u){return u.userId===user.userId;});if(existingIndex>=0){users[existingIndex]=_objectSpread(_objectSpread(_objectSpread({},users[existingIndex]),user),{},{passwordHash:user.passwordHash||users[existingIndex].passwordHash,createdAt:users[existingIndex].createdAt});}else{users.push(user);}yield AsyncStorage.setItem(USERS_STORAGE_KEY,JSON.stringify(users));yield updateUserIndex(user);}catch(error){console.error('Error saving user:',error);throw error;}});return function saveUser(_x11){return _ref14.apply(this,arguments);};}();export var updateUser=function(){var _ref15=_asyncToGenerator(function*(userId,updates){try{var user=yield getUserById(userId);if(!user){return false;}var updatedUser=_objectSpread(_objectSpread(_objectSpread({},user),updates),{},{userId:user.userId,createdAt:user.createdAt});yield saveUser(updatedUser);var currentUser=yield getCurrentUser();if(currentUser&&currentUser.userId===userId){yield setCurrentUser(updatedUser);}return true;}catch(error){console.error('Error updating user:',error);return false;}});return function updateUser(_x12,_x13){return _ref15.apply(this,arguments);};}();export var setCurrentUser=function(){var _ref16=_asyncToGenerator(function*(user){try{yield AsyncStorage.setItem(CURRENT_USER_KEY,JSON.stringify(user));}catch(error){console.error('Error setting current user:',error);throw error;}});return function setCurrentUser(_x14){return _ref16.apply(this,arguments);};}();export var saveCredentials=function(){var _ref17=_asyncToGenerator(function*(credentials){try{var savedCredentialsJson=yield AsyncStorage.getItem(SAVED_CREDENTIALS_KEY);var savedCredentials=savedCredentialsJson?JSON.parse(savedCredentialsJson):[];var existingIndex=savedCredentials.findIndex(function(cred){return cred.username.toLowerCase()===credentials.username.toLowerCase();});if(existingIndex>=0){savedCredentials[existingIndex]=credentials;}else{savedCredentials.push(credentials);}var sortedCredentials=savedCredentials.sort(function(a,b){return new Date(b.lastUsed).getTime()-new Date(a.lastUsed).getTime();});yield AsyncStorage.setItem(SAVED_CREDENTIALS_KEY,JSON.stringify(sortedCredentials));}catch(error){console.error('Error saving credentials:',error);}});return function saveCredentials(_x15){return _ref17.apply(this,arguments);};}();export var getSavedCredentials=function(){var _ref18=_asyncToGenerator(function*(){try{var savedCredentialsJson=yield AsyncStorage.getItem(SAVED_CREDENTIALS_KEY);var savedCredentials=savedCredentialsJson?JSON.parse(savedCredentialsJson):[];return savedCredentials.sort(function(a,b){return new Date(b.lastUsed).getTime()-new Date(a.lastUsed).getTime();});}catch(error){console.error('Error getting saved credentials:',error);return[];}});return function getSavedCredentials(){return _ref18.apply(this,arguments);};}();export var loginWithSavedCredentials=function(){var _ref19=_asyncToGenerator(function*(username){try{var savedCredentials=yield getSavedCredentials();var credentials=savedCredentials.find(function(cred){return cred.username.toLowerCase()===username.toLowerCase();});if(!credentials){return{success:false,message:'No se encontraron credenciales guardadas para este usuario.'};}return yield loginUser(credentials.username,credentials.password);}catch(error){console.error('Error logging in with saved credentials:',error);return{success:false,message:'Error al iniciar sesión con credenciales guardadas.'};}});return function loginWithSavedCredentials(_x16){return _ref19.apply(this,arguments);};}();export var removeSavedCredentials=function(){var _ref20=_asyncToGenerator(function*(username){try{var savedCredentials=yield getSavedCredentials();var filteredCredentials=savedCredentials.filter(function(cred){return cred.username.toLowerCase()!==username.toLowerCase();});yield AsyncStorage.setItem(SAVED_CREDENTIALS_KEY,JSON.stringify(filteredCredentials));}catch(error){console.error('Error removing saved credentials:',error);}});return function removeSavedCredentials(_x17){return _ref20.apply(this,arguments);};}();export var getAuthState=function(){var _ref21=_asyncToGenerator(function*(){try{var authStateJson=yield AsyncStorage.getItem(AUTH_STATE_KEY);return authStateJson?JSON.parse(authStateJson):null;}catch(error){console.error('Error getting auth state:',error);return null;}});return function getAuthState(){return _ref21.apply(this,arguments);};}();export var updateAuthState=function(){var _ref22=_asyncToGenerator(function*(isAuthenticated,currentUserId){try{var authState={isAuthenticated:isAuthenticated,currentUserId:currentUserId,lastUpdated:new Date().toISOString()};yield AsyncStorage.setItem(AUTH_STATE_KEY,JSON.stringify(authState));}catch(error){console.error('Error updating auth state:',error);}});return function updateAuthState(_x18,_x19){return _ref22.apply(this,arguments);};}();export var importUsers=function(){var _ref23=_asyncToGenerator(function*(users){var defaultPassword=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'password123';try{var existingUsers=yield getUsers();var passwordHash=yield hashPassword(defaultPassword);var importedCount=0;var updatedUsers=_toConsumableArray(existingUsers);for(var user of users){if((yield userIdExists(user.userId))||(yield usernameExists(user.username))){continue;}var newUser=_objectSpread(_objectSpread({},user),{},{passwordHash:passwordHash,createdAt:user.createdAt||new Date().toISOString()});updatedUsers.push(newUser);yield updateUserIndex(newUser);importedCount++;}yield AsyncStorage.setItem(USERS_STORAGE_KEY,JSON.stringify(updatedUsers));return importedCount;}catch(error){console.error('Error importing users:',error);return 0;}});return function importUsers(_x20){return _ref23.apply(this,arguments);};}();export var batchRegisterUsers=function(){var _ref24=_asyncToGenerator(function*(usernames){var defaultPassword=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'password123';try{var passwordHash=yield hashPassword(defaultPassword);var registeredCount=0;var newUsers=[];for(var username of usernames){if(!username.trim())continue;if(yield usernameExists(username)){continue;}var userId=\"user_\"+Date.now()+\"_\"+Math.random().toString(36).substring(2,15);var newUser={username:username,passwordHash:passwordHash,userId:userId,createdAt:new Date().toISOString(),displayName:username,coins:100,waterDrops:0,totalBets:0,wonBets:0,avatar:\"https://randomuser.me/api/portraits/lego/\"+(Math.floor(Math.random()*8)+1)+\".jpg\"};newUsers.push(newUser);registeredCount++;}if(newUsers.length>0){var existingUsers=yield getUsers();var updatedUsers=[].concat(_toConsumableArray(existingUsers),newUsers);yield AsyncStorage.setItem(USERS_STORAGE_KEY,JSON.stringify(updatedUsers));for(var user of newUsers){yield updateUserIndex(user);}}return registeredCount;}catch(error){console.error('Error batch registering users:',error);return 0;}});return function batchRegisterUsers(_x21){return _ref24.apply(this,arguments);};}();export var exportUsers=function(){var _ref25=_asyncToGenerator(function*(){try{var users=yield getUsers();return users.map(function(user){var passwordHash=user.passwordHash,safeUser=_objectWithoutProperties(user,_excluded);return safeUser;});}catch(error){console.error('Error exporting users:',error);return[];}});return function exportUsers(){return _ref25.apply(this,arguments);};}();export var updateUserCoins=function(){var _ref26=_asyncToGenerator(function*(userId,coins){try{var user=yield getUserById(userId);if(!user){return false;}var updatedUser=_objectSpread(_objectSpread({},user),{},{coins:coins});yield saveUser(updatedUser);var currentUser=yield getCurrentUser();if(currentUser&&currentUser.userId===userId){yield setCurrentUser(updatedUser);}return true;}catch(error){console.error('Error updating user coins:',error);return false;}});return function updateUserCoins(_x22,_x23){return _ref26.apply(this,arguments);};}();export var updateUserWaterDrops=function(){var _ref27=_asyncToGenerator(function*(userId,waterDrops){try{var user=yield getUserById(userId);if(!user){return false;}var updatedUser=_objectSpread(_objectSpread({},user),{},{waterDrops:(user.waterDrops||0)+waterDrops});yield saveUser(updatedUser);var currentUser=yield getCurrentUser();if(currentUser&&currentUser.userId===userId){yield setCurrentUser(updatedUser);}return true;}catch(error){console.error('Error updating user water drops:',error);return false;}});return function updateUserWaterDrops(_x24,_x25){return _ref27.apply(this,arguments);};}();export var updateUserAvatar=function(){var _ref28=_asyncToGenerator(function*(userId,avatarUrl){try{var user=yield getUserById(userId);if(!user){return false;}var updatedUser=_objectSpread(_objectSpread({},user),{},{avatar:avatarUrl});yield saveUser(updatedUser);var currentUser=yield getCurrentUser();if(currentUser&&currentUser.userId===userId){yield setCurrentUser(updatedUser);}return true;}catch(error){console.error('Error updating user avatar:',error);return false;}});return function updateUserAvatar(_x26,_x27){return _ref28.apply(this,arguments);};}();export var updateUserDailyReward=function(){var _ref29=_asyncToGenerator(function*(userId,lastRewardDate,streak){try{var user=yield getUserById(userId);if(!user){return false;}var updatedUser=_objectSpread(_objectSpread({},user),{},{lastDailyReward:lastRewardDate,dailyRewardStreak:streak});yield saveUser(updatedUser);var currentUser=yield getCurrentUser();if(currentUser&&currentUser.userId===userId){yield setCurrentUser(updatedUser);}return true;}catch(error){console.error('Error updating user daily reward:',error);return false;}});return function updateUserDailyReward(_x28,_x29,_x30){return _ref29.apply(this,arguments);};}();export var updateUserBetStats=function(){var _ref30=_asyncToGenerator(function*(userId,wonBet){try{var user=yield getUserById(userId);if(!user){return false;}var updatedUser=_objectSpread(_objectSpread({},user),{},{totalBets:(user.totalBets||0)+1,wonBets:wonBet?(user.wonBets||0)+1:user.wonBets||0});yield saveUser(updatedUser);var currentUser=yield getCurrentUser();if(currentUser&&currentUser.userId===userId){yield setCurrentUser(updatedUser);}return true;}catch(error){console.error('Error updating user bet stats:',error);return false;}});return function updateUserBetStats(_x31,_x32){return _ref30.apply(this,arguments);};}();","map":{"version":3,"names":["AsyncStorage","Crypto","USERS_STORAGE_KEY","CURRENT_USER_KEY","SAVED_CREDENTIALS_KEY","AUTH_STATE_KEY","USER_INDEX_KEY","hashPassword","_ref","_asyncToGenerator","password","hash","digestStringAsync","CryptoDigestAlgorithm","SHA256","_x","apply","arguments","getUserIndex","_ref2","indexJson","getItem","JSON","parse","users","getUsers","index","byUsername","byId","user","username","toLowerCase","userId","setItem","stringify","error","console","updateUserIndex","_ref3","isDelete","length","undefined","_x2","usernameExists","_ref4","_x3","userIdExists","_ref5","_x4","getUserByUsername","_ref6","find","_x5","getUserById","_ref7","_x6","registerUser","_ref8","success","message","passwordHash","Date","now","Math","random","toString","substring","newUser","createdAt","toISOString","displayName","coins","waterDrops","totalBets","wonBets","avatar","floor","saveUser","saveCredentials","lastUsed","setCurrentUser","updateAuthState","_x7","_x8","loginUser","_ref9","_x9","_x10","logoutUser","_ref10","removeItem","getCurrentUser","_ref11","userJson","isLoggedIn","_ref12","authState","getAuthState","isAuthenticated","isAuth","_ref13","usersJson","_ref14","existingIndex","findIndex","u","_objectSpread","push","_x11","updateUser","_ref15","updates","updatedUser","currentUser","_x12","_x13","_ref16","_x14","_ref17","credentials","savedCredentialsJson","savedCredentials","cred","sortedCredentials","sort","a","b","getTime","_x15","getSavedCredentials","_ref18","loginWithSavedCredentials","_ref19","_x16","removeSavedCredentials","_ref20","filteredCredentials","filter","_x17","_ref21","authStateJson","_ref22","currentUserId","lastUpdated","_x18","_x19","importUsers","_ref23","defaultPassword","existingUsers","importedCount","updatedUsers","_toConsumableArray","_x20","batchRegisterUsers","_ref24","usernames","registeredCount","newUsers","trim","concat","_x21","exportUsers","_ref25","map","safeUser","_objectWithoutProperties","_excluded","updateUserCoins","_ref26","_x22","_x23","updateUserWaterDrops","_ref27","_x24","_x25","updateUserAvatar","_ref28","avatarUrl","_x26","_x27","updateUserDailyReward","_ref29","lastRewardDate","streak","lastDailyReward","dailyRewardStreak","_x28","_x29","_x30","updateUserBetStats","_ref30","wonBet","_x31","_x32"],"sources":["/Users/atemjohnatem/Downloads/meteo-malaga/src/services/enhancedAuthService.ts"],"sourcesContent":["import AsyncStorage from '@react-native-async-storage/async-storage';\n// Fix import to work in Expo Snack\nimport * as Crypto from 'expo-crypto';\nimport { Platform } from 'react-native';\n\n// Constants\nconst USERS_STORAGE_KEY = 'auth_users';\nconst CURRENT_USER_KEY = 'auth_current_user';\nconst SAVED_CREDENTIALS_KEY = 'auth_saved_credentials';\nconst AUTH_STATE_KEY = 'auth_state';\nconst USER_INDEX_KEY = 'auth_user_index';\n\n// User interface\nexport interface User {\n  username: string;\n  passwordHash: string;\n  userId: string;\n  createdAt: string;\n  displayName?: string;\n  email?: string;\n  role?: string;\n  coins?: number;\n  waterDrops?: number;\n  totalBets?: number;\n  wonBets?: number;\n  avatar?: string;\n  lastDailyReward?: string;\n  dailyRewardStreak?: number;\n}\n\n// Login response interface\nexport interface LoginResponse {\n  success: boolean;\n  message: string;\n  userId?: string;\n  username?: string;\n}\n\n// Saved credentials interface\nexport interface SavedCredentials {\n  username: string;\n  password: string;\n  userId: string;\n  lastUsed: string;\n}\n\n// Auth state interface\nexport interface AuthState {\n  isAuthenticated: boolean;\n  currentUserId: string | null;\n  lastUpdated: string;\n}\n\n// User index interface for efficient lookups\ninterface UserIndex {\n  byUsername: { [username: string]: string }; // username -> userId\n  byId: { [userId: string]: boolean }; // userId -> exists\n}\n\n/**\n * Hashes a password using SHA-256\n */\nexport const hashPassword = async (password: string): Promise<string> => {\n  const hash = await Crypto.digestStringAsync(\n    Crypto.CryptoDigestAlgorithm.SHA256,\n    password\n  );\n  return hash;\n};\n\n/**\n * Gets or creates the user index for efficient lookups\n */\nconst getUserIndex = async (): Promise<UserIndex> => {\n  try {\n    const indexJson = await AsyncStorage.getItem(USER_INDEX_KEY);\n    if (indexJson) {\n      return JSON.parse(indexJson);\n    }\n    \n    // If no index exists, create one from the users\n    const users = await getUsers();\n    const index: UserIndex = { byUsername: {}, byId: {} };\n    \n    for (const user of users) {\n      index.byUsername[user.username.toLowerCase()] = user.userId;\n      index.byId[user.userId] = true;\n    }\n    \n    // Save the index\n    await AsyncStorage.setItem(USER_INDEX_KEY, JSON.stringify(index));\n    \n    return index;\n  } catch (error) {\n    console.error('Error getting user index:', error);\n    return { byUsername: {}, byId: {} };\n  }\n};\n\n/**\n * Updates the user index\n */\nconst updateUserIndex = async (user: User, isDelete: boolean = false): Promise<void> => {\n  try {\n    const index = await getUserIndex();\n    \n    if (isDelete) {\n      // Remove user from index\n      delete index.byUsername[user.username.toLowerCase()];\n      delete index.byId[user.userId];\n    } else {\n      // Add or update user in index\n      index.byUsername[user.username.toLowerCase()] = user.userId;\n      index.byId[user.userId] = true;\n    }\n    \n    await AsyncStorage.setItem(USER_INDEX_KEY, JSON.stringify(index));\n  } catch (error) {\n    console.error('Error updating user index:', error);\n  }\n};\n\n/**\n * Checks if a username exists using the index\n */\nconst usernameExists = async (username: string): Promise<boolean> => {\n  const index = await getUserIndex();\n  return !!index.byUsername[username.toLowerCase()];\n};\n\n/**\n * Checks if a user ID exists using the index\n */\nconst userIdExists = async (userId: string): Promise<boolean> => {\n  const index = await getUserIndex();\n  return !!index.byId[userId];\n};\n\n/**\n * Gets a user by username using the index\n */\nconst getUserByUsername = async (username: string): Promise<User | null> => {\n  try {\n    const index = await getUserIndex();\n    const userId = index.byUsername[username.toLowerCase()];\n    \n    if (!userId) {\n      return null;\n    }\n    \n    // Get all users and find the one with matching ID\n    const users = await getUsers();\n    return users.find(user => user.userId === userId) || null;\n  } catch (error) {\n    console.error('Error getting user by username:', error);\n    return null;\n  }\n};\n\n/**\n * Gets a user by ID\n */\nconst getUserById = async (userId: string): Promise<User | null> => {\n  try {\n    const index = await getUserIndex();\n    \n    if (!index.byId[userId]) {\n      return null;\n    }\n    \n    // Get all users and find the one with matching ID\n    const users = await getUsers();\n    return users.find(user => user.userId === userId) || null;\n  } catch (error) {\n    console.error('Error getting user by ID:', error);\n    return null;\n  }\n};\n\n/**\n * Registers a new user\n */\nexport const registerUser = async (username: string, password: string): Promise<LoginResponse> => {\n  try {\n    // Validate username and password\n    if (!username || !password) {\n      return {\n        success: false,\n        message: 'El nombre de usuario y la contraseña son obligatorios.'\n      };\n    }\n\n    if (username.length < 3) {\n      return {\n        success: false,\n        message: 'El nombre de usuario debe tener al menos 3 caracteres.'\n      };\n    }\n\n    if (password.length < 6) {\n      return {\n        success: false,\n        message: 'La contraseña debe tener al menos 6 caracteres.'\n      };\n    }\n\n    // Check if username already exists\n    if (await usernameExists(username)) {\n      return {\n        success: false,\n        message: 'El nombre de usuario ya existe. Por favor, elige otro.'\n      };\n    }\n\n    // Hash the password\n    const passwordHash = await hashPassword(password);\n    \n    // Generate a unique user ID\n    const userId = `user_${Date.now()}_${Math.random().toString(36).substring(2, 15)}`;\n    \n    // Create new user\n    const newUser: User = {\n      username,\n      passwordHash,\n      userId,\n      createdAt: new Date().toISOString(),\n      displayName: username, // Set displayName same as username initially\n      coins: 100, // Default coins\n      waterDrops: 0, // Default water drops\n      totalBets: 0,\n      wonBets: 0,\n      avatar: `https://randomuser.me/api/portraits/lego/${Math.floor(Math.random() * 8) + 1}.jpg`\n    };\n    \n    // Add user to storage\n    await saveUser(newUser);\n    \n    // Update user index\n    await updateUserIndex(newUser);\n    \n    // Save credentials for offline login\n    await saveCredentials({\n      username,\n      password,\n      userId,\n      lastUsed: new Date().toISOString()\n    });\n    \n    // Set as current user\n    await setCurrentUser(newUser);\n    \n    // Update auth state\n    await updateAuthState(true, userId);\n    \n    return {\n      success: true,\n      message: '¡Registro exitoso!',\n      userId: newUser.userId,\n      username: newUser.username\n    };\n  } catch (error) {\n    console.error('Error registering user:', error);\n    return {\n      success: false,\n      message: 'Error al registrar usuario. Por favor, inténtalo de nuevo.'\n    };\n  }\n};\n\n/**\n * Logs in a user\n */\nexport const loginUser = async (username: string, password: string): Promise<LoginResponse> => {\n  try {\n    // Find user by username\n    const user = await getUserByUsername(username);\n    \n    if (!user) {\n      return {\n        success: false,\n        message: 'Usuario no encontrado.'\n      };\n    }\n    \n    // Hash the provided password and compare\n    const passwordHash = await hashPassword(password);\n    \n    if (passwordHash !== user.passwordHash) {\n      return {\n        success: false,\n        message: 'Contraseña incorrecta.'\n      };\n    }\n    \n    // Save credentials for offline login\n    await saveCredentials({\n      username,\n      password,\n      userId: user.userId,\n      lastUsed: new Date().toISOString()\n    });\n    \n    // Set as current user\n    await setCurrentUser(user);\n    \n    // Update auth state\n    await updateAuthState(true, user.userId);\n    \n    return {\n      success: true,\n      message: '¡Inicio de sesión exitoso!',\n      userId: user.userId,\n      username: user.username\n    };\n  } catch (error) {\n    console.error('Error logging in:', error);\n    return {\n      success: false,\n      message: 'Error al iniciar sesión. Por favor, inténtalo de nuevo.'\n    };\n  }\n};\n\n/**\n * Logs out the current user\n */\nexport const logoutUser = async (): Promise<void> => {\n  try {\n    await AsyncStorage.removeItem(CURRENT_USER_KEY);\n    await updateAuthState(false, null);\n  } catch (error) {\n    console.error('Error logging out:', error);\n  }\n};\n\n/**\n * Gets the current logged in user\n */\nexport const getCurrentUser = async (): Promise<User | null> => {\n  try {\n    const userJson = await AsyncStorage.getItem(CURRENT_USER_KEY);\n    if (!userJson) return null;\n    \n    const user = JSON.parse(userJson);\n    \n    // Verify user exists\n    if (!(await userIdExists(user.userId))) {\n      // User no longer exists in the database\n      await AsyncStorage.removeItem(CURRENT_USER_KEY);\n      await updateAuthState(false, null);\n      return null;\n    }\n    \n    return user;\n  } catch (error) {\n    console.error('Error getting current user:', error);\n    return null;\n  }\n};\n\n/**\n * Checks if a user is logged in\n */\nexport const isLoggedIn = async (): Promise<boolean> => {\n  try {\n    // First check the auth state for a quick response\n    const authState = await getAuthState();\n    if (authState) {\n      // Verify the auth state is still valid by checking the current user\n      if (authState.isAuthenticated) {\n        const user = await getCurrentUser();\n        return user !== null;\n      }\n      return false;\n    }\n    \n    // Fallback to checking current user directly\n    const user = await getCurrentUser();\n    const isAuth = user !== null;\n    \n    // Update auth state to match\n    await updateAuthState(isAuth, user?.userId || null);\n    \n    return isAuth;\n  } catch (error) {\n    console.error('Error checking login status:', error);\n    return false;\n  }\n};\n\n/**\n * Gets all registered users\n */\nexport const getUsers = async (): Promise<User[]> => {\n  try {\n    const usersJson = await AsyncStorage.getItem(USERS_STORAGE_KEY);\n    return usersJson ? JSON.parse(usersJson) : [];\n  } catch (error) {\n    console.error('Error getting users:', error);\n    return [];\n  }\n};\n\n/**\n * Saves a user to storage\n */\nexport const saveUser = async (user: User): Promise<void> => {\n  try {\n    const users = await getUsers();\n    \n    // Check if user already exists\n    const existingIndex = users.findIndex(u => u.userId === user.userId);\n    \n    if (existingIndex >= 0) {\n      // Update existing user\n      users[existingIndex] = {\n        ...users[existingIndex],\n        ...user,\n        // Don't override these fields if they exist\n        passwordHash: user.passwordHash || users[existingIndex].passwordHash,\n        createdAt: users[existingIndex].createdAt\n      };\n    } else {\n      // Add new user\n      users.push(user);\n    }\n    \n    await AsyncStorage.setItem(USERS_STORAGE_KEY, JSON.stringify(users));\n    \n    // Update user index\n    await updateUserIndex(user);\n  } catch (error) {\n    console.error('Error saving user:', error);\n    throw error;\n  }\n};\n\n/**\n * Updates an existing user\n */\nexport const updateUser = async (userId: string, updates: Partial<User>): Promise<boolean> => {\n  try {\n    // Get user directly\n    const user = await getUserById(userId);\n    \n    if (!user) {\n      return false;\n    }\n    \n    // Update user\n    const updatedUser: User = {\n      ...user,\n      ...updates,\n      // Don't allow these to be updated\n      userId: user.userId,\n      createdAt: user.createdAt\n    };\n    \n    // Save updated user\n    await saveUser(updatedUser);\n    \n    // If this is the current user, update current user as well\n    const currentUser = await getCurrentUser();\n    if (currentUser && currentUser.userId === userId) {\n      await setCurrentUser(updatedUser);\n    }\n    \n    return true;\n  } catch (error) {\n    console.error('Error updating user:', error);\n    return false;\n  }\n};\n\n/**\n * Sets the current logged in user\n */\nexport const setCurrentUser = async (user: User): Promise<void> => {\n  try {\n    await AsyncStorage.setItem(CURRENT_USER_KEY, JSON.stringify(user));\n  } catch (error) {\n    console.error('Error setting current user:', error);\n    throw error;\n  }\n};\n\n/**\n * Saves user credentials for offline login\n */\nexport const saveCredentials = async (credentials: SavedCredentials): Promise<void> => {\n  try {\n    // Get existing saved credentials\n    const savedCredentialsJson = await AsyncStorage.getItem(SAVED_CREDENTIALS_KEY);\n    const savedCredentials: SavedCredentials[] = savedCredentialsJson \n      ? JSON.parse(savedCredentialsJson) \n      : [];\n    \n    // Check if credentials for this username already exist\n    const existingIndex = savedCredentials.findIndex(\n      cred => cred.username.toLowerCase() === credentials.username.toLowerCase()\n    );\n    \n    if (existingIndex >= 0) {\n      // Update existing credentials\n      savedCredentials[existingIndex] = credentials;\n    } else {\n      // Add new credentials\n      savedCredentials.push(credentials);\n    }\n    \n    // Sort by last used (most recent first)\n    const sortedCredentials = savedCredentials.sort(\n      (a, b) => new Date(b.lastUsed).getTime() - new Date(a.lastUsed).getTime()\n    );\n    \n    // Save to storage (no limit on number of saved credentials)\n    await AsyncStorage.setItem(SAVED_CREDENTIALS_KEY, JSON.stringify(sortedCredentials));\n  } catch (error) {\n    console.error('Error saving credentials:', error);\n  }\n};\n\n/**\n * Gets saved credentials for offline login\n */\nexport const getSavedCredentials = async (): Promise<SavedCredentials[]> => {\n  try {\n    const savedCredentialsJson = await AsyncStorage.getItem(SAVED_CREDENTIALS_KEY);\n    const savedCredentials: SavedCredentials[] = savedCredentialsJson \n      ? JSON.parse(savedCredentialsJson) \n      : [];\n    \n    // Sort by last used (most recent first)\n    return savedCredentials.sort(\n      (a, b) => new Date(b.lastUsed).getTime() - new Date(a.lastUsed).getTime()\n    );\n  } catch (error) {\n    console.error('Error getting saved credentials:', error);\n    return [];\n  }\n};\n\n/**\n * Attempts to login with saved credentials\n */\nexport const loginWithSavedCredentials = async (username: string): Promise<LoginResponse> => {\n  try {\n    const savedCredentials = await getSavedCredentials();\n    const credentials = savedCredentials.find(\n      cred => cred.username.toLowerCase() === username.toLowerCase()\n    );\n    \n    if (!credentials) {\n      return {\n        success: false,\n        message: 'No se encontraron credenciales guardadas para este usuario.'\n      };\n    }\n    \n    // Login with saved credentials\n    return await loginUser(credentials.username, credentials.password);\n  } catch (error) {\n    console.error('Error logging in with saved credentials:', error);\n    return {\n      success: false,\n      message: 'Error al iniciar sesión con credenciales guardadas.'\n    };\n  }\n};\n\n/**\n * Removes saved credentials for a user\n */\nexport const removeSavedCredentials = async (username: string): Promise<void> => {\n  try {\n    const savedCredentials = await getSavedCredentials();\n    const filteredCredentials = savedCredentials.filter(\n      cred => cred.username.toLowerCase() !== username.toLowerCase()\n    );\n    \n    await AsyncStorage.setItem(SAVED_CREDENTIALS_KEY, JSON.stringify(filteredCredentials));\n  } catch (error) {\n    console.error('Error removing saved credentials:', error);\n  }\n};\n\n/**\n * Gets the current authentication state\n */\nexport const getAuthState = async (): Promise<AuthState | null> => {\n  try {\n    const authStateJson = await AsyncStorage.getItem(AUTH_STATE_KEY);\n    return authStateJson ? JSON.parse(authStateJson) : null;\n  } catch (error) {\n    console.error('Error getting auth state:', error);\n    return null;\n  }\n};\n\n/**\n * Updates the authentication state\n */\nexport const updateAuthState = async (isAuthenticated: boolean, currentUserId: string | null): Promise<void> => {\n  try {\n    const authState: AuthState = {\n      isAuthenticated,\n      currentUserId,\n      lastUpdated: new Date().toISOString()\n    };\n    \n    await AsyncStorage.setItem(AUTH_STATE_KEY, JSON.stringify(authState));\n  } catch (error) {\n    console.error('Error updating auth state:', error);\n  }\n};\n\n/**\n * Imports users in bulk (for scalability)\n * @param users Array of users to import\n * @returns Number of users successfully imported\n */\nexport const importUsers = async (users: Omit<User, 'passwordHash'>[], defaultPassword: string = 'password123'): Promise<number> => {\n  try {\n    const existingUsers = await getUsers();\n    const passwordHash = await hashPassword(defaultPassword);\n    \n    let importedCount = 0;\n    const updatedUsers = [...existingUsers];\n    \n    for (const user of users) {\n      // Check if user already exists using the index\n      if (await userIdExists(user.userId) || await usernameExists(user.username)) {\n        continue;\n      }\n      \n      // Add new user\n      const newUser: User = {\n        ...user,\n        passwordHash,\n        createdAt: user.createdAt || new Date().toISOString()\n      };\n      \n      updatedUsers.push(newUser);\n      \n      // Update user index\n      await updateUserIndex(newUser);\n      \n      importedCount++;\n    }\n    \n    // Save all users\n    await AsyncStorage.setItem(USERS_STORAGE_KEY, JSON.stringify(updatedUsers));\n    \n    return importedCount;\n  } catch (error) {\n    console.error('Error importing users:', error);\n    return 0;\n  }\n};\n\n/**\n * Batch register users (for scalability)\n */\nexport const batchRegisterUsers = async (usernames: string[], defaultPassword: string = 'password123'): Promise<number> => {\n  try {\n    const passwordHash = await hashPassword(defaultPassword);\n    \n    let registeredCount = 0;\n    const newUsers: User[] = [];\n    \n    for (const username of usernames) {\n      // Skip empty usernames\n      if (!username.trim()) continue;\n      \n      // Check if username already exists\n      if (await usernameExists(username)) {\n        continue;\n      }\n      \n      // Generate a unique user ID\n      const userId = `user_${Date.now()}_${Math.random().toString(36).substring(2, 15)}`;\n      \n      // Create new user\n      const newUser: User = {\n        username,\n        passwordHash,\n        userId,\n        createdAt: new Date().toISOString(),\n        displayName: username,\n        coins: 100,\n        waterDrops: 0,\n        totalBets: 0,\n        wonBets: 0,\n        avatar: `https://randomuser.me/api/portraits/lego/${Math.floor(Math.random() * 8) + 1}.jpg`\n      };\n      \n      newUsers.push(newUser);\n      registeredCount++;\n    }\n    \n    // Save all new users\n    if (newUsers.length > 0) {\n      const existingUsers = await getUsers();\n      const updatedUsers = [...existingUsers, ...newUsers];\n      await AsyncStorage.setItem(USERS_STORAGE_KEY, JSON.stringify(updatedUsers));\n      \n      // Update user index for each new user\n      for (const user of newUsers) {\n        await updateUserIndex(user);\n      }\n    }\n    \n    return registeredCount;\n  } catch (error) {\n    console.error('Error batch registering users:', error);\n    return 0;\n  }\n};\n\n/**\n * Exports all users (for backup/migration)\n */\nexport const exportUsers = async (): Promise<Omit<User, 'passwordHash'>[]> => {\n  try {\n    const users = await getUsers();\n    \n    // Remove sensitive data\n    return users.map(user => {\n      const { passwordHash, ...safeUser } = user;\n      return safeUser;\n    });\n  } catch (error) {\n    console.error('Error exporting users:', error);\n    return [];\n  }\n};\n\n/**\n * Updates user coins\n */\nexport const updateUserCoins = async (userId: string, coins: number): Promise<boolean> => {\n  try {\n    const user = await getUserById(userId);\n    \n    if (!user) {\n      return false;\n    }\n    \n    // Update user coins\n    const updatedUser: User = {\n      ...user,\n      coins\n    };\n    \n    // Save updated user\n    await saveUser(updatedUser);\n    \n    // If this is the current user, update current user as well\n    const currentUser = await getCurrentUser();\n    if (currentUser && currentUser.userId === userId) {\n      await setCurrentUser(updatedUser);\n    }\n    \n    return true;\n  } catch (error) {\n    console.error('Error updating user coins:', error);\n    return false;\n  }\n};\n\n/**\n * Updates user water drops\n */\nexport const updateUserWaterDrops = async (userId: string, waterDrops: number): Promise<boolean> => {\n  try {\n    const user = await getUserById(userId);\n    \n    if (!user) {\n      return false;\n    }\n    \n    // Update user water drops\n    const updatedUser: User = {\n      ...user,\n      waterDrops: (user.waterDrops || 0) + waterDrops\n    };\n    \n    // Save updated user\n    await saveUser(updatedUser);\n    \n    // If this is the current user, update current user as well\n    const currentUser = await getCurrentUser();\n    if (currentUser && currentUser.userId === userId) {\n      await setCurrentUser(updatedUser);\n    }\n    \n    return true;\n  } catch (error) {\n    console.error('Error updating user water drops:', error);\n    return false;\n  }\n};\n\n/**\n * Updates user avatar\n */\nexport const updateUserAvatar = async (userId: string, avatarUrl: string): Promise<boolean> => {\n  try {\n    const user = await getUserById(userId);\n    \n    if (!user) {\n      return false;\n    }\n    \n    // Update user avatar\n    const updatedUser: User = {\n      ...user,\n      avatar: avatarUrl\n    };\n    \n    // Save updated user\n    await saveUser(updatedUser);\n    \n    // If this is the current user, update current user as well\n    const currentUser = await getCurrentUser();\n    if (currentUser && currentUser.userId === userId) {\n      await setCurrentUser(updatedUser);\n    }\n    \n    return true;\n  } catch (error) {\n    console.error('Error updating user avatar:', error);\n    return false;\n  }\n};\n\n/**\n * Updates user daily reward info\n */\nexport const updateUserDailyReward = async (\n  userId: string, \n  lastRewardDate: string, \n  streak: number\n): Promise<boolean> => {\n  try {\n    const user = await getUserById(userId);\n    \n    if (!user) {\n      return false;\n    }\n    \n    // Update user daily reward info\n    const updatedUser: User = {\n      ...user,\n      lastDailyReward: lastRewardDate,\n      dailyRewardStreak: streak\n    };\n    \n    // Save updated user\n    await saveUser(updatedUser);\n    \n    // If this is the current user, update current user as well\n    const currentUser = await getCurrentUser();\n    if (currentUser && currentUser.userId === userId) {\n      await setCurrentUser(updatedUser);\n    }\n    \n    return true;\n  } catch (error) {\n    console.error('Error updating user daily reward:', error);\n    return false;\n  }\n};\n\n/**\n * Updates user bet statistics\n */\nexport const updateUserBetStats = async (userId: string, wonBet: boolean): Promise<boolean> => {\n  try {\n    const user = await getUserById(userId);\n    \n    if (!user) {\n      return false;\n    }\n    \n    // Update user bet stats\n    const updatedUser: User = {\n      ...user,\n      totalBets: (user.totalBets || 0) + 1,\n      wonBets: wonBet ? (user.wonBets || 0) + 1 : (user.wonBets || 0)\n    };\n    \n    // Save updated user\n    await saveUser(updatedUser);\n    \n    // If this is the current user, update current user as well\n    const currentUser = await getCurrentUser();\n    if (currentUser && currentUser.userId === userId) {\n      await setCurrentUser(updatedUser);\n    }\n    \n    return true;\n  } catch (error) {\n    console.error('Error updating user bet stats:', error);\n    return false;\n  }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}