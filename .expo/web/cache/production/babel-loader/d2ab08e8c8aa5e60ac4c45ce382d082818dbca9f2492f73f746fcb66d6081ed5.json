{"ast":null,"code":"import React,{useState,useEffect}from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import Text from\"react-native-web/dist/exports/Text\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import ScrollView from\"react-native-web/dist/exports/ScrollView\";import{fetchCurrentTemperatureData}from\"../services/weatherService\";import{getTemperatureOdds}from\"../services/localBetService\";import{jsxs as _jsxs,jsx as _jsx,Fragment as _Fragment}from\"react/jsx-runtime\";const TemperatureSelector=({isMin,onSelect,selectedValue})=>{const[currentTemp,setCurrentTemp]=useState(null);const[loading,setLoading]=useState(true);const generateTemperatureRange=()=>{const range=[];const start=isMin?-5:5;const end=isMin?30:45;for(let temp=start;temp<=end;temp++){range.push(temp);}return range;};const temperatureRange=generateTemperatureRange();useEffect(()=>{const loadCurrentTemperature=async()=>{try{setLoading(true);const tempData=await fetchCurrentTemperatureData();setCurrentTemp(isMin?tempData.min:tempData.max);}catch(error){console.error('Error loading temperature data:',error);}finally{setLoading(false);}};loadCurrentTemperature();},[isMin]);return _jsxs(View,{style:styles.container,children:[_jsxs(Text,{style:styles.title,children:[\"Selecciona la temperatura \",isMin?'mínima':'máxima',\" (\\xB0C)\"]}),loading?_jsx(View,{style:styles.loadingContainer,children:_jsx(Text,{style:styles.loadingText,children:\"Cargando datos de temperatura...\"})}):_jsxs(_Fragment,{children:[_jsxs(Text,{style:styles.currentTemp,children:[\"Temperatura \",isMin?'mínima':'máxima',\" actual: \",currentTemp!==null?`${currentTemp}°C`:'N/A']}),_jsx(ScrollView,{horizontal:true,showsHorizontalScrollIndicator:false,style:styles.scrollView,children:_jsx(View,{style:styles.temperatureContainer,children:temperatureRange.map(temp=>{const odds=getTemperatureOdds(temp,isMin);return _jsxs(TouchableOpacity,{style:[styles.temperatureButton,selectedValue===temp&&styles.selectedButton,temp===Math.round(currentTemp||0)&&styles.currentTempButton],onPress:()=>onSelect(temp),children:[_jsxs(Text,{style:[styles.temperatureText,selectedValue===temp&&styles.selectedText],children:[temp,\"\\xB0C\"]}),_jsxs(Text,{style:[styles.oddsText,selectedValue===temp&&styles.selectedText],children:[odds,\"x\"]})]},temp);})})}),_jsxs(View,{style:styles.legend,children:[_jsxs(View,{style:styles.legendItem,children:[_jsx(View,{style:[styles.legendColor,styles.selectedButton]}),_jsx(Text,{style:styles.legendText,children:\"Seleccionado\"})]}),_jsxs(View,{style:styles.legendItem,children:[_jsx(View,{style:[styles.legendColor,styles.currentTempButton]}),_jsx(Text,{style:styles.legendText,children:\"Temperatura actual\"})]})]})]})]});};const styles=StyleSheet.create({container:{padding:15,backgroundColor:'rgba(255, 255, 255, 0.1)',borderRadius:10,marginVertical:10},title:{fontSize:18,fontWeight:'bold',color:'#333',marginBottom:15},currentTemp:{fontSize:16,color:'#555',marginBottom:15},scrollView:{marginBottom:15},temperatureContainer:{flexDirection:'row',flexWrap:'nowrap'},temperatureButton:{backgroundColor:'rgba(59, 130, 246, 0.1)',borderRadius:8,padding:10,marginRight:8,minWidth:70,alignItems:'center'},selectedButton:{backgroundColor:'#3B82F6',borderColor:'#FFD700',borderWidth:2},currentTempButton:{backgroundColor:'rgba(255, 193, 7, 0.2)',borderColor:'#FFC107',borderWidth:1},temperatureText:{fontSize:16,fontWeight:'bold',color:'#333'},selectedText:{color:'#FFFFFF'},oddsText:{fontSize:12,color:'#666',marginTop:4},loadingContainer:{alignItems:'center',justifyContent:'center',padding:20},loadingText:{fontSize:16,color:'#666'},legend:{flexDirection:'row',justifyContent:'space-around',marginTop:10},legendItem:{flexDirection:'row',alignItems:'center'},legendColor:{width:16,height:16,borderRadius:4,marginRight:6},legendText:{fontSize:12,color:'#666'}});export default TemperatureSelector;","map":{"version":3,"names":["React","useState","useEffect","StyleSheet","View","Text","TouchableOpacity","ScrollView","fetchCurrentTemperatureData","getTemperatureOdds","jsxs","_jsxs","jsx","_jsx","Fragment","_Fragment","TemperatureSelector","isMin","onSelect","selectedValue","currentTemp","setCurrentTemp","loading","setLoading","generateTemperatureRange","range","start","end","temp","push","temperatureRange","loadCurrentTemperature","tempData","min","max","error","console","style","styles","container","children","title","loadingContainer","loadingText","horizontal","showsHorizontalScrollIndicator","scrollView","temperatureContainer","map","odds","temperatureButton","selectedButton","Math","round","currentTempButton","onPress","temperatureText","selectedText","oddsText","legend","legendItem","legendColor","legendText","create","padding","backgroundColor","borderRadius","marginVertical","fontSize","fontWeight","color","marginBottom","flexDirection","flexWrap","marginRight","minWidth","alignItems","borderColor","borderWidth","marginTop","justifyContent","width","height"],"sources":["/Users/atemjohnatem/Downloads/meteo-malaga/src/components/TemperatureSelector.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { StyleSheet, View, Text, TouchableOpacity, ScrollView } from 'react-native';\nimport { Feather } from '@expo/vector-icons';\nimport { fetchCurrentTemperatureData } from '../services/weatherService';\nimport { getTemperatureOdds } from '../services/localBetService';\n\ninterface TemperatureSelectorProps {\n  isMin: boolean;\n  onSelect: (value: number) => void;\n  selectedValue: number | null;\n}\n\nconst TemperatureSelector: React.FC<TemperatureSelectorProps> = ({ \n  isMin, \n  onSelect, \n  selectedValue \n}) => {\n  const [currentTemp, setCurrentTemp] = useState<number | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  // Generate temperature range based on whether it's min or max\n  const generateTemperatureRange = () => {\n    const range = [];\n    const start = isMin ? -5 : 5;\n    const end = isMin ? 30 : 45;\n    \n    for (let temp = start; temp <= end; temp++) {\n      range.push(temp);\n    }\n    return range;\n  };\n\n  const temperatureRange = generateTemperatureRange();\n\n  useEffect(() => {\n    const loadCurrentTemperature = async () => {\n      try {\n        setLoading(true);\n        const tempData = await fetchCurrentTemperatureData();\n        setCurrentTemp(isMin ? tempData.min : tempData.max);\n      } catch (error) {\n        console.error('Error loading temperature data:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    loadCurrentTemperature();\n  }, [isMin]);\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>\n        Selecciona la temperatura {isMin ? 'mínima' : 'máxima'} (°C)\n      </Text>\n      \n      {loading ? (\n        <View style={styles.loadingContainer}>\n          <Text style={styles.loadingText}>Cargando datos de temperatura...</Text>\n        </View>\n      ) : (\n        <>\n          <Text style={styles.currentTemp}>\n            Temperatura {isMin ? 'mínima' : 'máxima'} actual: {currentTemp !== null ? `${currentTemp}°C` : 'N/A'}\n          </Text>\n          \n          <ScrollView horizontal showsHorizontalScrollIndicator={false} style={styles.scrollView}>\n            <View style={styles.temperatureContainer}>\n              {temperatureRange.map((temp) => {\n                const odds = getTemperatureOdds(temp, isMin);\n                return (\n                  <TouchableOpacity\n                    key={temp}\n                    style={[\n                      styles.temperatureButton,\n                      selectedValue === temp && styles.selectedButton,\n                      temp === Math.round(currentTemp || 0) && styles.currentTempButton\n                    ]}\n                    onPress={() => onSelect(temp)}\n                  >\n                    <Text style={[\n                      styles.temperatureText,\n                      selectedValue === temp && styles.selectedText\n                    ]}>\n                      {temp}°C\n                    </Text>\n                    <Text style={[\n                      styles.oddsText,\n                      selectedValue === temp && styles.selectedText\n                    ]}>\n                      {odds}x\n                    </Text>\n                  </TouchableOpacity>\n                );\n              })}\n            </View>\n          </ScrollView>\n          \n          <View style={styles.legend}>\n            <View style={styles.legendItem}>\n              <View style={[styles.legendColor, styles.selectedButton]} />\n              <Text style={styles.legendText}>Seleccionado</Text>\n            </View>\n            <View style={styles.legendItem}>\n              <View style={[styles.legendColor, styles.currentTempButton]} />\n              <Text style={styles.legendText}>Temperatura actual</Text>\n            </View>\n          </View>\n        </>\n      )}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 15,\n    backgroundColor: 'rgba(255, 255, 255, 0.1)',\n    borderRadius: 10,\n    marginVertical: 10,\n  },\n  title: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#333',\n    marginBottom: 15,\n  },\n  currentTemp: {\n    fontSize: 16,\n    color: '#555',\n    marginBottom: 15,\n  },\n  scrollView: {\n    marginBottom: 15,\n  },\n  temperatureContainer: {\n    flexDirection: 'row',\n    flexWrap: 'nowrap',\n  },\n  temperatureButton: {\n    backgroundColor: 'rgba(59, 130, 246, 0.1)',\n    borderRadius: 8,\n    padding: 10,\n    marginRight: 8,\n    minWidth: 70,\n    alignItems: 'center',\n  },\n  selectedButton: {\n    backgroundColor: '#3B82F6',\n    borderColor: '#FFD700',\n    borderWidth: 2,\n  },\n  currentTempButton: {\n    backgroundColor: 'rgba(255, 193, 7, 0.2)',\n    borderColor: '#FFC107',\n    borderWidth: 1,\n  },\n  temperatureText: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: '#333',\n  },\n  selectedText: {\n    color: '#FFFFFF',\n  },\n  oddsText: {\n    fontSize: 12,\n    color: '#666',\n    marginTop: 4,\n  },\n  loadingContainer: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 20,\n  },\n  loadingText: {\n    fontSize: 16,\n    color: '#666',\n  },\n  legend: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    marginTop: 10,\n  },\n  legendItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  legendColor: {\n    width: 16,\n    height: 16,\n    borderRadius: 4,\n    marginRight: 6,\n  },\n  legendText: {\n    fontSize: 12,\n    color: '#666',\n  },\n});\n\nexport default TemperatureSelector;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}