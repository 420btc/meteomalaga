{"ast":null,"code":"import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";import AsyncStorage from'@react-native-async-storage/async-storage';var RAIN_DATA_CACHE_KEY='rain_data_cache';var TEMP_DATA_CACHE_KEY='temp_data_cache';var WIND_DATA_CACHE_KEY='wind_data_cache';var HISTORICAL_DATA_CACHE_KEY='historical_data_cache';var CACHE_EXPIRY_KEY='weather_cache_expiry';var CACHE_DURATION=5*60*1000;var OPENWEATHER_API_KEY='5ae0c9a3137234e18e032e3d6024629e';var MALAGA_LAT=36.7213;var MALAGA_LON=-4.4213;export var isWithinBettingWindow=function isWithinBettingWindow(){return true;};export var getTimeUntilNextBettingWindow=function getTimeUntilNextBettingWindow(){try{var now=new Date();var currentHour=now.getHours();var currentMinute=now.getMinutes();var currentSecond=now.getSeconds();if(currentHour===23||currentHour===0){if(currentHour===23){var minutesLeft=59-currentMinute;var secondsLeft=59-currentSecond;return{hours:0,minutes:minutesLeft,seconds:secondsLeft};}else{var _minutesLeft=59-currentMinute;var _secondsLeft=59-currentSecond;return{hours:0,minutes:_minutesLeft,seconds:_secondsLeft};}}else{var hoursLeft;if(currentHour<23){hoursLeft=23-currentHour-1;}else{hoursLeft=23+(24-currentHour)-1;}var _minutesLeft2=59-currentMinute;var _secondsLeft2=59-currentSecond;return{hours:hoursLeft,minutes:_minutesLeft2,seconds:_secondsLeft2};}}catch(error){console.error('Error calculating time until next betting window:',error);return{hours:0,minutes:0,seconds:0};}};export var isWithinBettingWindowSync=function isWithinBettingWindowSync(){return isWithinBettingWindow();};export var getTimeUntilNextBettingWindowSync=function getTimeUntilNextBettingWindowSync(){try{return getTimeUntilNextBettingWindow();}catch(error){console.error('Error in getTimeUntilNextBettingWindowSync:',error);return{hours:0,minutes:0,seconds:0};}};export var getCurrentSpainHour=function getCurrentSpainHour(){try{var now=new Date();return now.getHours();}catch(error){console.error('Error getting current Spain hour:',error);return 0;}};export var isDaylightSavingTime=function isDaylightSavingTime(){try{var now=new Date();var jan=new Date(now.getFullYear(),0,1);var jul=new Date(now.getFullYear(),6,1);return jan.getTimezoneOffset()!==jul.getTimezoneOffset();}catch(error){console.error('Error checking daylight saving time:',error);return false;}};export var getWeatherForDate=function(){var _ref=_asyncToGenerator(function*(date){try{var cachedData=yield getCachedWeatherData();if(cachedData){return cachedData;}var response=yield fetch(\"https://api.openweathermap.org/data/2.5/weather?lat=\"+MALAGA_LAT+\"&lon=\"+MALAGA_LON+\"&units=metric&appid=\"+OPENWEATHER_API_KEY);if(!response.ok){throw new Error('Error fetching weather data');}var data=yield response.json();var weatherData={temperature:data.main.temp,tempMin:data.main.temp_min,tempMax:data.main.temp_max,humidity:data.main.humidity,windSpeed:data.wind.speed*3.6,windDirection:data.wind.deg,description:data.weather[0].description,icon:data.weather[0].icon,rainAmount:data.rain&&data.rain['1h']?data.rain['1h']:0,date:date,timestamp:new Date().toISOString()};yield cacheWeatherData(weatherData);return weatherData;}catch(error){console.error('Error fetching weather data:',error);var expiredCache=yield getCachedWeatherData(true);if(expiredCache){return expiredCache;}return getSimulatedWeatherData(date);}});return function getWeatherForDate(_x){return _ref.apply(this,arguments);};}();export var fetchWeatherData=getWeatherForDate;export var fetchCurrentRainData=function(){var _ref2=_asyncToGenerator(function*(){try{var response=yield fetch(\"https://api.openweathermap.org/data/2.5/weather?lat=\"+MALAGA_LAT+\"&lon=\"+MALAGA_LON+\"&units=metric&appid=\"+OPENWEATHER_API_KEY);if(!response.ok){throw new Error('Error fetching rain data');}var data=yield response.json();var rainAmount=0;if(data.rain&&data.rain['1h']){rainAmount=data.rain['1h'];}var rainData={amount:rainAmount,timestamp:new Date().toISOString()};yield AsyncStorage.setItem(RAIN_DATA_CACHE_KEY,JSON.stringify(rainData));yield AsyncStorage.setItem(CACHE_EXPIRY_KEY,(new Date().getTime()+CACHE_DURATION).toString());return rainAmount;}catch(error){console.error('Error fetching rain data:',error);var cachedData=yield AsyncStorage.getItem(RAIN_DATA_CACHE_KEY);if(cachedData){var _rainData=JSON.parse(cachedData);return _rainData.amount;}return Math.random()>0.7?Math.random()*5:0;}});return function fetchCurrentRainData(){return _ref2.apply(this,arguments);};}();export var fetchCurrentTemperatureData=function(){var _ref3=_asyncToGenerator(function*(){try{var response=yield fetch(\"https://api.openweathermap.org/data/2.5/weather?lat=\"+MALAGA_LAT+\"&lon=\"+MALAGA_LON+\"&units=metric&appid=\"+OPENWEATHER_API_KEY);if(!response.ok){throw new Error('Error fetching temperature data');}var data=yield response.json();var tempData={current:data.main.temp,min:data.main.temp_min,max:data.main.temp_max,timestamp:new Date().toISOString()};yield AsyncStorage.setItem(TEMP_DATA_CACHE_KEY,JSON.stringify(tempData));yield AsyncStorage.setItem(CACHE_EXPIRY_KEY,(new Date().getTime()+CACHE_DURATION).toString());return tempData;}catch(error){console.error('Error fetching temperature data:',error);var cachedData=yield AsyncStorage.getItem(TEMP_DATA_CACHE_KEY);if(cachedData){return JSON.parse(cachedData);}var currentTemp=15+Math.random()*15;return{current:currentTemp,min:currentTemp-(2+Math.random()*3),max:currentTemp+(2+Math.random()*3),timestamp:new Date().toISOString()};}});return function fetchCurrentTemperatureData(){return _ref3.apply(this,arguments);};}();export var fetchCurrentWindData=function(){var _ref4=_asyncToGenerator(function*(){try{var response=yield fetch(\"https://api.openweathermap.org/data/2.5/weather?lat=\"+MALAGA_LAT+\"&lon=\"+MALAGA_LON+\"&units=metric&appid=\"+OPENWEATHER_API_KEY);if(!response.ok){throw new Error('Error fetching wind data');}var data=yield response.json();var windSpeedMps=data.wind.speed;var windSpeedKmh=windSpeedMps*3.6;var maxWindSpeedKmh=windSpeedKmh*(1+Math.random()*0.3);var windData={current:Math.round(windSpeedKmh*10)/10,max:Math.round(maxWindSpeedKmh*10)/10,direction:data.wind.deg,timestamp:new Date().toISOString()};yield AsyncStorage.setItem(WIND_DATA_CACHE_KEY,JSON.stringify(windData));yield AsyncStorage.setItem(CACHE_EXPIRY_KEY,(new Date().getTime()+CACHE_DURATION).toString());return windData;}catch(error){console.error('Error fetching wind data:',error);var cachedData=yield AsyncStorage.getItem(WIND_DATA_CACHE_KEY);if(cachedData){return JSON.parse(cachedData);}var currentWind=5+Math.random()*20;return{current:Math.round(currentWind*10)/10,max:Math.round(currentWind*(1+Math.random()*0.3)*10)/10,direction:Math.floor(Math.random()*360),timestamp:new Date().toISOString()};}});return function fetchCurrentWindData(){return _ref4.apply(this,arguments);};}();export var fetchForecastData=function(){var _ref5=_asyncToGenerator(function*(){try{var response=yield fetch(\"https://api.openweathermap.org/data/2.5/forecast?lat=\"+MALAGA_LAT+\"&lon=\"+MALAGA_LON+\"&units=metric&appid=\"+OPENWEATHER_API_KEY);if(!response.ok){throw new Error('Error fetching forecast data');}var data=yield response.json();return data.list.map(function(item){return{date:new Date(item.dt*1000).toISOString(),temperature:item.main.temp,tempMin:item.main.temp_min,tempMax:item.main.temp_max,humidity:item.main.humidity,windSpeed:item.wind.speed*3.6,windDirection:item.wind.deg,description:item.weather[0].description,icon:item.weather[0].icon,rainAmount:item.rain&&item.rain['3h']?item.rain['3h']:0};});}catch(error){console.error('Error fetching forecast data:',error);return[];}});return function fetchForecastData(){return _ref5.apply(this,arguments);};}();export var fetchHourlyHistoricalData=function(){var _ref6=_asyncToGenerator(function*(){var hours=arguments.length>0&&arguments[0]!==undefined?arguments[0]:24;try{var cachedData=yield AsyncStorage.getItem(HISTORICAL_DATA_CACHE_KEY);var cacheExpiry=yield AsyncStorage.getItem(CACHE_EXPIRY_KEY);if(cachedData&&cacheExpiry&&new Date().getTime()<parseInt(cacheExpiry)){var parsedData=JSON.parse(cachedData);if(parsedData.rainData.length>=hours&&parsedData.tempData.length>=hours&&parsedData.windData.length>=hours&&parsedData.labels.length>=hours){return{rainData:parsedData.rainData.slice(0,hours),tempData:parsedData.tempData.slice(0,hours),windData:parsedData.windData.slice(0,hours),labels:parsedData.labels.slice(0,hours)};}}var currentResponse=yield fetch(\"https://api.openweathermap.org/data/2.5/weather?lat=\"+MALAGA_LAT+\"&lon=\"+MALAGA_LON+\"&units=metric&appid=\"+OPENWEATHER_API_KEY);if(!currentResponse.ok){throw new Error('Error fetching current weather data');}var currentData=yield currentResponse.json();var forecastResponse=yield fetch(\"https://api.openweathermap.org/data/2.5/forecast?lat=\"+MALAGA_LAT+\"&lon=\"+MALAGA_LON+\"&units=metric&appid=\"+OPENWEATHER_API_KEY);if(!forecastResponse.ok){throw new Error('Error fetching forecast data');}var forecastData=yield forecastResponse.json();var rainData=[];var tempData=[];var windData=[];var labels=[];var timestamps=[];var now=new Date();rainData.push(currentData.rain&&currentData.rain['1h']?currentData.rain['1h']:0);tempData.push(currentData.main.temp);windData.push(currentData.wind.speed*3.6);labels.push(now.getHours().toString()+'h');timestamps.push(now.getTime());var forecastList=forecastData.list;forecastList.sort(function(a,b){return b.dt-a.dt;});for(var item of forecastList){var itemDate=new Date(item.dt*1000);var hoursDiff=(now.getTime()-itemDate.getTime())/(1000*60*60);if(hoursDiff>0&&hoursDiff<=hours){var itemHour=itemDate.getHours();if(!labels.includes(itemHour.toString()+'h')){rainData.push(item.rain&&item.rain['3h']?item.rain['3h']/3:0);tempData.push(item.main.temp);windData.push(item.wind.speed*3.6);labels.push(itemHour.toString()+'h');timestamps.push(itemDate.getTime());}}}if(rainData.length<hours){try{var airPollutionResponse=yield fetch(\"https://api.openweathermap.org/data/2.5/air_pollution/history?lat=\"+MALAGA_LAT+\"&lon=\"+MALAGA_LON+\"&start=\"+Math.floor(now.getTime()/1000-hours*3600)+\"&end=\"+Math.floor(now.getTime()/1000)+\"&appid=\"+OPENWEATHER_API_KEY);if(airPollutionResponse.ok){var airPollutionData=yield airPollutionResponse.json();airPollutionData.list.sort(function(a,b){return b.dt-a.dt;});for(var _item of airPollutionData.list){var _itemDate=new Date(_item.dt*1000);var _itemHour=_itemDate.getHours();if(!labels.includes(_itemHour.toString()+'h')){var tempVariation=0;if(_itemHour>=0&&_itemHour<6){tempVariation=-2;}else if(_itemHour>=6&&_itemHour<12){tempVariation=0;}else if(_itemHour>=12&&_itemHour<18){tempVariation=2;}else{tempVariation=0;}rainData.push(0);tempData.push(currentData.main.temp+tempVariation);windData.push(currentData.wind.speed*3.6*(0.7+Math.random()*0.6));labels.push(_itemHour.toString()+'h');timestamps.push(_itemDate.getTime());}}}}catch(error){console.error('Error fetching air pollution data:',error);}}while(rainData.length<hours){var missingHour=(now.getHours()-rainData.length+24)%24;var _tempVariation=0;if(missingHour>=0&&missingHour<6){_tempVariation=-2-Math.random();}else if(missingHour>=6&&missingHour<12){_tempVariation=-1+missingHour*0.2;}else if(missingHour>=12&&missingHour<18){_tempVariation=2-(missingHour-12)*0.2;}else{_tempVariation=0-(missingHour-18)*0.3;}var windVariation=1.0;if(missingHour>=10&&missingHour<16){windVariation=1.2+Math.random()*0.3;}else if(missingHour>=16&&missingHour<22){windVariation=1.0+Math.random()*0.2;}else{windVariation=0.7+Math.random()*0.3;}var rainAmount=0;if(currentData.rain&&currentData.rain['1h']){if(missingHour>=6&&missingHour<10||missingHour>=16&&missingHour<20){rainAmount=currentData.rain['1h']*(0.5+Math.random());}else{rainAmount=currentData.rain['1h']*(0.2+Math.random()*0.5);}}rainData.push(Math.round(rainAmount*10)/10);tempData.push(Math.round((currentData.main.temp+_tempVariation)*10)/10);windData.push(Math.round(currentData.wind.speed*3.6*windVariation*10)/10);labels.push(missingHour.toString()+'h');var missingDate=new Date(now);missingDate.setHours(missingHour);timestamps.push(missingDate.getTime());}var sortedIndices=timestamps.map(function(timestamp,index){return{timestamp:timestamp,index:index};}).sort(function(a,b){return a.timestamp-b.timestamp;}).map(function(item){return item.index;});var sortedRainData=sortedIndices.map(function(index){return rainData[index];});var sortedTempData=sortedIndices.map(function(index){return tempData[index];});var sortedWindData=sortedIndices.map(function(index){return windData[index];});var sortedLabels=sortedIndices.map(function(index){return labels[index];});var result={rainData:sortedRainData.slice(-hours),tempData:sortedTempData.slice(-hours),windData:sortedWindData.slice(-hours),labels:sortedLabels.slice(-hours)};yield AsyncStorage.setItem(HISTORICAL_DATA_CACHE_KEY,JSON.stringify(result));yield AsyncStorage.setItem(CACHE_EXPIRY_KEY,(new Date().getTime()+CACHE_DURATION).toString());return result;}catch(error){console.error('Error fetching hourly historical data:',error);var _cachedData=yield AsyncStorage.getItem(HISTORICAL_DATA_CACHE_KEY);if(_cachedData){var _parsedData=JSON.parse(_cachedData);return{rainData:_parsedData.rainData.slice(0,hours),tempData:_parsedData.tempData.slice(0,hours),windData:_parsedData.windData.slice(0,hours),labels:_parsedData.labels.slice(0,hours)};}var _rainData2=[];var _tempData=[];var _windData=[];var _labels=[];var _now=new Date();var currentHour=_now.getHours();var currentTemp=20;var currentWind=10;var isRaining=false;try{var _currentResponse=yield fetch(\"https://api.openweathermap.org/data/2.5/weather?lat=\"+MALAGA_LAT+\"&lon=\"+MALAGA_LON+\"&units=metric&appid=\"+OPENWEATHER_API_KEY);if(_currentResponse.ok){var _currentData=yield _currentResponse.json();currentTemp=_currentData.main.temp;currentWind=_currentData.wind.speed*3.6;isRaining=_currentData.rain&&_currentData.rain['1h']>0;}}catch(e){}for(var i=hours-1;i>=0;i--){var hourOfDay=(currentHour-i+24)%24;var _tempVariation2=0;if(hourOfDay>=0&&hourOfDay<6){_tempVariation2=-2-Math.random();}else if(hourOfDay>=6&&hourOfDay<12){_tempVariation2=-1+hourOfDay*0.2;}else if(hourOfDay>=12&&hourOfDay<18){_tempVariation2=2-(hourOfDay-12)*0.2;}else{_tempVariation2=0-(hourOfDay-18)*0.3;}var _windVariation=1.0;if(hourOfDay>=10&&hourOfDay<16){_windVariation=1.2+Math.random()*0.3;}else if(hourOfDay>=16&&hourOfDay<22){_windVariation=1.0+Math.random()*0.2;}else{_windVariation=0.7+Math.random()*0.3;}var _rainAmount=0;if(isRaining){if(hourOfDay>=6&&hourOfDay<10||hourOfDay>=16&&hourOfDay<20){_rainAmount=1+Math.random()*2;}else{_rainAmount=Math.random()*1.5;}}else if(Math.random()>0.8){_rainAmount=Math.random()*0.5;}_tempData.push(Math.round((currentTemp+_tempVariation2)*10)/10);_windData.push(Math.round(currentWind*_windVariation*10)/10);_rainData2.push(Math.round(_rainAmount*10)/10);_labels.push(hourOfDay.toString()+'h');}return{rainData:_rainData2,tempData:_tempData,windData:_windData,labels:_labels};}});return function fetchHourlyHistoricalData(){return _ref6.apply(this,arguments);};}();var cacheWeatherData=function(){var _ref7=_asyncToGenerator(function*(data){try{yield AsyncStorage.setItem('weather_data_cache',JSON.stringify(data));yield AsyncStorage.setItem(CACHE_EXPIRY_KEY,(new Date().getTime()+CACHE_DURATION).toString());}catch(error){console.error('Error caching weather data:',error);}});return function cacheWeatherData(_x2){return _ref7.apply(this,arguments);};}();var getCachedWeatherData=function(){var _ref8=_asyncToGenerator(function*(){var ignoreExpiry=arguments.length>0&&arguments[0]!==undefined?arguments[0]:false;try{var cachedData=yield AsyncStorage.getItem('weather_data_cache');var cacheExpiry=yield AsyncStorage.getItem(CACHE_EXPIRY_KEY);if(!cachedData){return null;}if(!ignoreExpiry&&cacheExpiry&&new Date().getTime()>parseInt(cacheExpiry)){return null;}return JSON.parse(cachedData);}catch(error){console.error('Error getting cached weather data:',error);return null;}});return function getCachedWeatherData(){return _ref8.apply(this,arguments);};}();var getSimulatedWeatherData=function getSimulatedWeatherData(date){var dateObj=new Date(date);var month=dateObj.getMonth();var baseTemp=15;if(month>=5&&month<=8){baseTemp=25;}else if(month>=9||month<=2){baseTemp=12;}var temp=baseTemp+(Math.random()*10-5);var tempMin=temp-(2+Math.random()*3);var tempMax=temp+(2+Math.random()*3);var rainProbability=0.2;if(month>=9&&month<=11){rainProbability=0.4;}else if(month>=0&&month<=2){rainProbability=0.5;}else if(month>=3&&month<=5){rainProbability=0.3;}var isRaining=Math.random()<rainProbability;var rainAmount=isRaining?Math.random()*10:0;var windSpeed=5+Math.random()*20;return{temperature:Math.round(temp*10)/10,tempMin:Math.round(tempMin*10)/10,tempMax:Math.round(tempMax*10)/10,humidity:Math.floor(40+Math.random()*40),windSpeed:Math.round(windSpeed*10)/10,windDirection:Math.floor(Math.random()*360),description:isRaining?'lluvia':Math.random()>0.7?'parcialmente nublado':'despejado',icon:isRaining?'10d':Math.random()>0.7?'03d':'01d',rainAmount:Math.round(rainAmount*100)/100,date:date,timestamp:new Date().toISOString(),simulated:true};};export var clearWeatherCache=function(){var _ref9=_asyncToGenerator(function*(){try{yield AsyncStorage.removeItem('weather_data_cache');yield AsyncStorage.removeItem(RAIN_DATA_CACHE_KEY);yield AsyncStorage.removeItem(TEMP_DATA_CACHE_KEY);yield AsyncStorage.removeItem(WIND_DATA_CACHE_KEY);yield AsyncStorage.removeItem(HISTORICAL_DATA_CACHE_KEY);yield AsyncStorage.removeItem(CACHE_EXPIRY_KEY);}catch(error){console.error('Error clearing weather cache:',error);}});return function clearWeatherCache(){return _ref9.apply(this,arguments);};}();","map":{"version":3,"names":["AsyncStorage","RAIN_DATA_CACHE_KEY","TEMP_DATA_CACHE_KEY","WIND_DATA_CACHE_KEY","HISTORICAL_DATA_CACHE_KEY","CACHE_EXPIRY_KEY","CACHE_DURATION","OPENWEATHER_API_KEY","MALAGA_LAT","MALAGA_LON","isWithinBettingWindow","getTimeUntilNextBettingWindow","now","Date","currentHour","getHours","currentMinute","getMinutes","currentSecond","getSeconds","minutesLeft","secondsLeft","hours","minutes","seconds","hoursLeft","error","console","isWithinBettingWindowSync","getTimeUntilNextBettingWindowSync","getCurrentSpainHour","isDaylightSavingTime","jan","getFullYear","jul","getTimezoneOffset","getWeatherForDate","_ref","_asyncToGenerator","date","cachedData","getCachedWeatherData","response","fetch","ok","Error","data","json","weatherData","temperature","main","temp","tempMin","temp_min","tempMax","temp_max","humidity","windSpeed","wind","speed","windDirection","deg","description","weather","icon","rainAmount","rain","timestamp","toISOString","cacheWeatherData","expiredCache","getSimulatedWeatherData","_x","apply","arguments","fetchWeatherData","fetchCurrentRainData","_ref2","rainData","amount","setItem","JSON","stringify","getTime","toString","getItem","parse","Math","random","fetchCurrentTemperatureData","_ref3","tempData","current","min","max","currentTemp","fetchCurrentWindData","_ref4","windSpeedMps","windSpeedKmh","maxWindSpeedKmh","windData","round","direction","currentWind","floor","fetchForecastData","_ref5","list","map","item","dt","fetchHourlyHistoricalData","_ref6","length","undefined","cacheExpiry","parseInt","parsedData","labels","slice","currentResponse","currentData","forecastResponse","forecastData","timestamps","push","forecastList","sort","a","b","itemDate","hoursDiff","itemHour","includes","airPollutionResponse","airPollutionData","tempVariation","missingHour","windVariation","missingDate","setHours","sortedIndices","index","sortedRainData","sortedTempData","sortedWindData","sortedLabels","result","isRaining","e","i","hourOfDay","_ref7","_x2","_ref8","ignoreExpiry","dateObj","month","getMonth","baseTemp","rainProbability","simulated","clearWeatherCache","_ref9","removeItem"],"sources":["/Users/atemjohnatem/Downloads/meteo-malaga/src/services/weatherService.ts"],"sourcesContent":["import AsyncStorage from '@react-native-async-storage/async-storage';\n\n// Claves para almacenamiento en caché\nconst RAIN_DATA_CACHE_KEY = 'rain_data_cache';\nconst TEMP_DATA_CACHE_KEY = 'temp_data_cache';\nconst WIND_DATA_CACHE_KEY = 'wind_data_cache';\nconst HISTORICAL_DATA_CACHE_KEY = 'historical_data_cache';\nconst CACHE_EXPIRY_KEY = 'weather_cache_expiry';\nconst CACHE_DURATION = 5 * 60 * 1000; // 5 minutos en milisegundos (reducido de 30 minutos)\n\n// API key para OpenWeatherMap\nconst OPENWEATHER_API_KEY = '5ae0c9a3137234e18e032e3d6024629e';\n\n// Coordenadas de Málaga\nconst MALAGA_LAT = 36.7213;\nconst MALAGA_LON = -4.4213;\n\n// Función para verificar si estamos dentro de la ventana de apuestas (23:00-00:00 CET/CEST)\nexport const isWithinBettingWindow = (): boolean => {\n  // Permitir apuestas en cualquier momento\n  return true;\n};\n\n// Función para calcular el tiempo hasta la próxima ventana de apuestas o hasta que se cierre la ventana actual\nexport const getTimeUntilNextBettingWindow = (): { hours: number; minutes: number; seconds: number } => {\n  try {\n    const now = new Date();\n    const currentHour = now.getHours();\n    const currentMinute = now.getMinutes();\n    const currentSecond = now.getSeconds();\n    \n    // Si estamos dentro de la ventana de apuestas (23:00-00:00)\n    if (currentHour === 23 || currentHour === 0) {\n      // Si estamos a las 23, calcular tiempo hasta las 00:00\n      if (currentHour === 23) {\n        const minutesLeft = 59 - currentMinute;\n        const secondsLeft = 59 - currentSecond;\n        \n        return {\n          hours: 0,\n          minutes: minutesLeft,\n          seconds: secondsLeft\n        };\n      } \n      // Si estamos a las 00, calcular tiempo hasta las 01:00 (fin de la ventana)\n      else {\n        const minutesLeft = 59 - currentMinute;\n        const secondsLeft = 59 - currentSecond;\n        \n        return {\n          hours: 0,\n          minutes: minutesLeft,\n          seconds: secondsLeft\n        };\n      }\n    } else {\n      // Calcular tiempo hasta las 23:00 (apertura de la ventana)\n      let hoursLeft;\n      if (currentHour < 23) {\n        // Hoy, antes de las 23:00\n        hoursLeft = 23 - currentHour - 1; // -1 porque contamos minutos restantes\n      } else {\n        // Después de medianoche, esperar hasta las 23:00 del día siguiente\n        hoursLeft = 23 + (24 - currentHour) - 1; // -1 porque contamos minutos restantes\n      }\n      \n      const minutesLeft = 59 - currentMinute;\n      const secondsLeft = 59 - currentSecond;\n      \n      return {\n        hours: hoursLeft,\n        minutes: minutesLeft,\n        seconds: secondsLeft\n      };\n    }\n  } catch (error) {\n    console.error('Error calculating time until next betting window:', error);\n    return { hours: 0, minutes: 0, seconds: 0 };\n  }\n};\n\n// Versión sincrónica para componentes de UI (mantenida por compatibilidad)\nexport const isWithinBettingWindowSync = (): boolean => {\n  return isWithinBettingWindow();\n};\n\n// Versión sincrónica para componentes de UI\nexport const getTimeUntilNextBettingWindowSync = (): { hours?: number; minutes?: number; seconds?: number } => {\n  try {\n    return getTimeUntilNextBettingWindow();\n  } catch (error) {\n    console.error('Error in getTimeUntilNextBettingWindowSync:', error);\n    return { hours: 0, minutes: 0, seconds: 0 };\n  }\n};\n\n// Función para obtener la hora actual en España (CET/CEST)\nexport const getCurrentSpainHour = (): number => {\n  try {\n    const now = new Date();\n    return now.getHours();\n  } catch (error) {\n    console.error('Error getting current Spain hour:', error);\n    return 0;\n  }\n};\n\n// Función para verificar si estamos en horario de verano\nexport const isDaylightSavingTime = (): boolean => {\n  try {\n    const now = new Date();\n    const jan = new Date(now.getFullYear(), 0, 1);\n    const jul = new Date(now.getFullYear(), 6, 1);\n    \n    // Si la diferencia de offset entre enero y julio es 0, no hay cambio de horario\n    return jan.getTimezoneOffset() !== jul.getTimezoneOffset();\n  } catch (error) {\n    console.error('Error checking daylight saving time:', error);\n    return false;\n  }\n};\n\n// Función para obtener datos meteorológicos para una fecha específica\nexport const getWeatherForDate = async (date: string): Promise<any> => {\n  try {\n    // Verificar si tenemos datos en caché\n    const cachedData = await getCachedWeatherData();\n    if (cachedData) {\n      return cachedData;\n    }\n    \n    // Si no hay caché o está expirada, obtener datos nuevos\n    const response = await fetch(\n      `https://api.openweathermap.org/data/2.5/weather?lat=${MALAGA_LAT}&lon=${MALAGA_LON}&units=metric&appid=${OPENWEATHER_API_KEY}`\n    );\n    \n    if (!response.ok) {\n      throw new Error('Error fetching weather data');\n    }\n    \n    const data = await response.json();\n    \n    // Procesar y almacenar los datos\n    const weatherData = {\n      temperature: data.main.temp,\n      tempMin: data.main.temp_min,\n      tempMax: data.main.temp_max,\n      humidity: data.main.humidity,\n      windSpeed: data.wind.speed * 3.6, // Convertir de m/s a km/h\n      windDirection: data.wind.deg,\n      description: data.weather[0].description,\n      icon: data.weather[0].icon,\n      rainAmount: data.rain && data.rain['1h'] ? data.rain['1h'] : 0,\n      date: date,\n      timestamp: new Date().toISOString()\n    };\n    \n    // Guardar en caché\n    await cacheWeatherData(weatherData);\n    \n    return weatherData;\n  } catch (error) {\n    console.error('Error fetching weather data:', error);\n    \n    // Si hay un error, intentar usar datos en caché aunque estén expirados\n    const expiredCache = await getCachedWeatherData(true);\n    if (expiredCache) {\n      return expiredCache;\n    }\n    \n    // Si no hay caché, devolver datos simulados\n    return getSimulatedWeatherData(date);\n  }\n};\n\n// Exportar getWeatherForDate como fetchWeatherData para compatibilidad con AppContext\nexport const fetchWeatherData = getWeatherForDate;\n\n// Función para obtener datos actuales de lluvia\nexport const fetchCurrentRainData = async (): Promise<number> => {\n  try {\n    // Forzar actualización de datos en tiempo real\n    const response = await fetch(\n      `https://api.openweathermap.org/data/2.5/weather?lat=${MALAGA_LAT}&lon=${MALAGA_LON}&units=metric&appid=${OPENWEATHER_API_KEY}`\n    );\n    \n    if (!response.ok) {\n      throw new Error('Error fetching rain data');\n    }\n    \n    const data = await response.json();\n    \n    // Extraer datos de lluvia (mm en la última hora)\n    let rainAmount = 0;\n    if (data.rain && data.rain['1h']) {\n      rainAmount = data.rain['1h'];\n    }\n    \n    // Guardar en caché\n    const rainData = { amount: rainAmount, timestamp: new Date().toISOString() };\n    await AsyncStorage.setItem(RAIN_DATA_CACHE_KEY, JSON.stringify(rainData));\n    await AsyncStorage.setItem(CACHE_EXPIRY_KEY, (new Date().getTime() + CACHE_DURATION).toString());\n    \n    return rainAmount;\n  } catch (error) {\n    console.error('Error fetching rain data:', error);\n    \n    // Si hay un error, intentar usar datos en caché aunque estén expirados\n    const cachedData = await AsyncStorage.getItem(RAIN_DATA_CACHE_KEY);\n    if (cachedData) {\n      const rainData = JSON.parse(cachedData);\n      return rainData.amount;\n    }\n    \n    // Si no hay caché, devolver datos simulados\n    return Math.random() > 0.7 ? Math.random() * 5 : 0;\n  }\n};\n\n// Función para obtener datos actuales de temperatura\nexport const fetchCurrentTemperatureData = async (): Promise<{ current: number, min: number, max: number }> => {\n  try {\n    // Forzar actualización de datos en tiempo real\n    const response = await fetch(\n      `https://api.openweathermap.org/data/2.5/weather?lat=${MALAGA_LAT}&lon=${MALAGA_LON}&units=metric&appid=${OPENWEATHER_API_KEY}`\n    );\n    \n    if (!response.ok) {\n      throw new Error('Error fetching temperature data');\n    }\n    \n    const data = await response.json();\n    \n    // Extraer datos de temperatura\n    const tempData = {\n      current: data.main.temp,\n      min: data.main.temp_min,\n      max: data.main.temp_max,\n      timestamp: new Date().toISOString()\n    };\n    \n    // Guardar en caché\n    await AsyncStorage.setItem(TEMP_DATA_CACHE_KEY, JSON.stringify(tempData));\n    await AsyncStorage.setItem(CACHE_EXPIRY_KEY, (new Date().getTime() + CACHE_DURATION).toString());\n    \n    return tempData;\n  } catch (error) {\n    console.error('Error fetching temperature data:', error);\n    \n    // Si hay un error, intentar usar datos en caché aunque estén expirados\n    const cachedData = await AsyncStorage.getItem(TEMP_DATA_CACHE_KEY);\n    if (cachedData) {\n      return JSON.parse(cachedData);\n    }\n    \n    // Si no hay caché, devolver datos simulados\n    const currentTemp = 15 + Math.random() * 15; // Entre 15 y 30 grados\n    return {\n      current: currentTemp,\n      min: currentTemp - (2 + Math.random() * 3),\n      max: currentTemp + (2 + Math.random() * 3),\n      timestamp: new Date().toISOString()\n    };\n  }\n};\n\n// Función para obtener datos actuales de viento\nexport const fetchCurrentWindData = async (): Promise<{ current: number, max: number, direction: number }> => {\n  try {\n    // Forzar actualización de datos en tiempo real\n    const response = await fetch(\n      `https://api.openweathermap.org/data/2.5/weather?lat=${MALAGA_LAT}&lon=${MALAGA_LON}&units=metric&appid=${OPENWEATHER_API_KEY}`\n    );\n    \n    if (!response.ok) {\n      throw new Error('Error fetching wind data');\n    }\n    \n    const data = await response.json();\n    \n    // Extraer datos de viento (convertir de m/s a km/h)\n    const windSpeedMps = data.wind.speed;\n    const windSpeedKmh = windSpeedMps * 3.6;\n    \n    // Para la velocidad máxima, usamos un valor ligeramente mayor\n    // En datos reales, esto vendría de una API que proporcione máximos históricos\n    const maxWindSpeedKmh = windSpeedKmh * (1 + Math.random() * 0.3);\n    \n    const windData = {\n      current: Math.round(windSpeedKmh * 10) / 10,\n      max: Math.round(maxWindSpeedKmh * 10) / 10,\n      direction: data.wind.deg,\n      timestamp: new Date().toISOString()\n    };\n    \n    // Guardar en caché\n    await AsyncStorage.setItem(WIND_DATA_CACHE_KEY, JSON.stringify(windData));\n    await AsyncStorage.setItem(CACHE_EXPIRY_KEY, (new Date().getTime() + CACHE_DURATION).toString());\n    \n    return windData;\n  } catch (error) {\n    console.error('Error fetching wind data:', error);\n    \n    // Si hay un error, intentar usar datos en caché aunque estén expirados\n    const cachedData = await AsyncStorage.getItem(WIND_DATA_CACHE_KEY);\n    if (cachedData) {\n      return JSON.parse(cachedData);\n    }\n    \n    // Si no hay caché, devolver datos simulados\n    const currentWind = 5 + Math.random() * 20; // Entre 5 y 25 km/h\n    return {\n      current: Math.round(currentWind * 10) / 10,\n      max: Math.round((currentWind * (1 + Math.random() * 0.3)) * 10) / 10,\n      direction: Math.floor(Math.random() * 360),\n      timestamp: new Date().toISOString()\n    };\n  }\n};\n\n// Función para obtener datos de pronóstico\nexport const fetchForecastData = async (): Promise<any[]> => {\n  try {\n    // Obtener datos de pronóstico para 5 días\n    const response = await fetch(\n      `https://api.openweathermap.org/data/2.5/forecast?lat=${MALAGA_LAT}&lon=${MALAGA_LON}&units=metric&appid=${OPENWEATHER_API_KEY}`\n    );\n    \n    if (!response.ok) {\n      throw new Error('Error fetching forecast data');\n    }\n    \n    const data = await response.json();\n    \n    // Procesar datos de pronóstico\n    return data.list.map((item: any) => ({\n      date: new Date(item.dt * 1000).toISOString(),\n      temperature: item.main.temp,\n      tempMin: item.main.temp_min,\n      tempMax: item.main.temp_max,\n      humidity: item.main.humidity,\n      windSpeed: item.wind.speed * 3.6, // Convertir de m/s a km/h\n      windDirection: item.wind.deg,\n      description: item.weather[0].description,\n      icon: item.weather[0].icon,\n      rainAmount: item.rain && item.rain['3h'] ? item.rain['3h'] : 0,\n    }));\n  } catch (error) {\n    console.error('Error fetching forecast data:', error);\n    return [];\n  }\n};\n\n// Función para obtener datos históricos por hora (lluvia, temperatura, viento)\nexport const fetchHourlyHistoricalData = async (hours: number = 24): Promise<{\n  rainData: number[];\n  tempData: number[];\n  windData: number[];\n  labels: string[];\n}> => {\n  try {\n    // Verificar si tenemos datos en caché\n    const cachedData = await AsyncStorage.getItem(HISTORICAL_DATA_CACHE_KEY);\n    const cacheExpiry = await AsyncStorage.getItem(CACHE_EXPIRY_KEY);\n    \n    if (cachedData && cacheExpiry && new Date().getTime() < parseInt(cacheExpiry)) {\n      const parsedData = JSON.parse(cachedData);\n      \n      // Asegurarse de que tenemos suficientes datos para el período solicitado\n      if (parsedData.rainData.length >= hours && \n          parsedData.tempData.length >= hours && \n          parsedData.windData.length >= hours && \n          parsedData.labels.length >= hours) {\n        \n        // Devolver solo la cantidad de horas solicitadas\n        return {\n          rainData: parsedData.rainData.slice(0, hours),\n          tempData: parsedData.tempData.slice(0, hours),\n          windData: parsedData.windData.slice(0, hours),\n          labels: parsedData.labels.slice(0, hours)\n        };\n      }\n    }\n    \n    // Si no hay caché o está expirada, obtener datos nuevos\n    \n    // 1. Obtener datos actuales\n    const currentResponse = await fetch(\n      `https://api.openweathermap.org/data/2.5/weather?lat=${MALAGA_LAT}&lon=${MALAGA_LON}&units=metric&appid=${OPENWEATHER_API_KEY}`\n    );\n    \n    if (!currentResponse.ok) {\n      throw new Error('Error fetching current weather data');\n    }\n    \n    const currentData = await currentResponse.json();\n    \n    // 2. Obtener datos de pronóstico (que incluyen datos de las últimas horas)\n    const forecastResponse = await fetch(\n      `https://api.openweathermap.org/data/2.5/forecast?lat=${MALAGA_LAT}&lon=${MALAGA_LON}&units=metric&appid=${OPENWEATHER_API_KEY}`\n    );\n    \n    if (!forecastResponse.ok) {\n      throw new Error('Error fetching forecast data');\n    }\n    \n    const forecastData = await forecastResponse.json();\n    \n    // 3. Crear arrays para almacenar los datos\n    const rainData: number[] = [];\n    const tempData: number[] = [];\n    const windData: number[] = [];\n    const labels: string[] = [];\n    const timestamps: number[] = [];\n    \n    // 4. Obtener hora actual\n    const now = new Date();\n    \n    // 5. Añadir datos actuales\n    rainData.push(currentData.rain && currentData.rain['1h'] ? currentData.rain['1h'] : 0);\n    tempData.push(currentData.main.temp);\n    windData.push(currentData.wind.speed * 3.6); // Convertir de m/s a km/h\n    labels.push(now.getHours().toString() + 'h');\n    timestamps.push(now.getTime());\n    \n    // 6. Añadir datos de pronóstico (que incluyen datos recientes)\n    const forecastList = forecastData.list;\n    \n    // Ordenar por timestamp (más reciente primero)\n    forecastList.sort((a: any, b: any) => b.dt - a.dt);\n    \n    // Filtrar para obtener solo datos de las últimas 'hours' horas\n    for (const item of forecastList) {\n      const itemDate = new Date(item.dt * 1000);\n      const hoursDiff = (now.getTime() - itemDate.getTime()) / (1000 * 60 * 60);\n      \n      // Solo incluir datos que estén dentro del rango de horas solicitado\n      // y que no sean duplicados (basados en la hora)\n      if (hoursDiff > 0 && hoursDiff <= hours) {\n        const itemHour = itemDate.getHours();\n        \n        // Verificar si ya tenemos datos para esta hora\n        if (!labels.includes(itemHour.toString() + 'h')) {\n          rainData.push(item.rain && item.rain['3h'] ? item.rain['3h'] / 3 : 0); // Convertir de 3h a 1h\n          tempData.push(item.main.temp);\n          windData.push(item.wind.speed * 3.6); // Convertir de m/s a km/h\n          labels.push(itemHour.toString() + 'h');\n          timestamps.push(itemDate.getTime());\n        }\n      }\n    }\n    \n    // 7. Si no tenemos suficientes datos, completar con datos de la API de contaminación del aire\n    // que proporciona datos históricos de las últimas 24 horas\n    if (rainData.length < hours) {\n      try {\n        const airPollutionResponse = await fetch(\n          `https://api.openweathermap.org/data/2.5/air_pollution/history?lat=${MALAGA_LAT}&lon=${MALAGA_LON}&start=${Math.floor(now.getTime()/1000 - hours*3600)}&end=${Math.floor(now.getTime()/1000)}&appid=${OPENWEATHER_API_KEY}`\n        );\n        \n        if (airPollutionResponse.ok) {\n          const airPollutionData = await airPollutionResponse.json();\n          \n          // Ordenar por timestamp (más reciente primero)\n          airPollutionData.list.sort((a: any, b: any) => b.dt - a.dt);\n          \n          for (const item of airPollutionData.list) {\n            const itemDate = new Date(item.dt * 1000);\n            const itemHour = itemDate.getHours();\n            \n            // Verificar si ya tenemos datos para esta hora\n            if (!labels.includes(itemHour.toString() + 'h')) {\n              // La API de contaminación no proporciona datos de lluvia, temperatura o viento\n              // pero podemos usar los datos actuales con pequeñas variaciones\n              \n              // Variación de temperatura basada en la hora del día\n              let tempVariation = 0;\n              if (itemHour >= 0 && itemHour < 6) {\n                tempVariation = -2;\n              } else if (itemHour >= 6 && itemHour < 12) {\n                tempVariation = 0;\n              } else if (itemHour >= 12 && itemHour < 18) {\n                tempVariation = 2;\n              } else {\n                tempVariation = 0;\n              }\n              \n              // Usar datos actuales con variaciones basadas en la hora\n              rainData.push(0); // No tenemos datos históricos de lluvia\n              tempData.push(currentData.main.temp + tempVariation);\n              windData.push(currentData.wind.speed * 3.6 * (0.7 + Math.random() * 0.6)); // Variación del 70-130%\n              labels.push(itemHour.toString() + 'h');\n              timestamps.push(itemDate.getTime());\n            }\n          }\n        }\n      } catch (error) {\n        console.error('Error fetching air pollution data:', error);\n      }\n    }\n    \n    // 8. Si aún no tenemos suficientes datos, completar con datos generados\n    // basados en los datos actuales y patrones realistas\n    while (rainData.length < hours) {\n      const missingHour = (now.getHours() - rainData.length + 24) % 24;\n      \n      // Variación de temperatura basada en la hora del día\n      let tempVariation = 0;\n      if (missingHour >= 0 && missingHour < 6) {\n        tempVariation = -2 - Math.random();\n      } else if (missingHour >= 6 && missingHour < 12) {\n        tempVariation = -1 + missingHour * 0.2;\n      } else if (missingHour >= 12 && missingHour < 18) {\n        tempVariation = 2 - (missingHour - 12) * 0.2;\n      } else {\n        tempVariation = 0 - (missingHour - 18) * 0.3;\n      }\n      \n      // Variación de viento basada en la hora del día\n      let windVariation = 1.0; // Factor multiplicador\n      if (missingHour >= 10 && missingHour < 16) {\n        windVariation = 1.2 + Math.random() * 0.3; // 120-150%\n      } else if (missingHour >= 16 && missingHour < 22) {\n        windVariation = 1.0 + Math.random() * 0.2; // 100-120%\n      } else {\n        windVariation = 0.7 + Math.random() * 0.3; // 70-100%\n      }\n      \n      // Probabilidad de lluvia basada en la hora del día\n      let rainAmount = 0;\n      if (currentData.rain && currentData.rain['1h']) {\n        // Si está lloviendo ahora, generar datos históricos con lluvia\n        if (missingHour >= 6 && missingHour < 10 || missingHour >= 16 && missingHour < 20) {\n          rainAmount = currentData.rain['1h'] * (0.5 + Math.random());\n        } else {\n          rainAmount = currentData.rain['1h'] * (0.2 + Math.random() * 0.5);\n        }\n      }\n      \n      rainData.push(Math.round(rainAmount * 10) / 10);\n      tempData.push(Math.round((currentData.main.temp + tempVariation) * 10) / 10);\n      windData.push(Math.round((currentData.wind.speed * 3.6 * windVariation) * 10) / 10);\n      labels.push(missingHour.toString() + 'h');\n      \n      const missingDate = new Date(now);\n      missingDate.setHours(missingHour);\n      timestamps.push(missingDate.getTime());\n    }\n    \n    // 9. Ordenar todos los datos por timestamp (más antiguo primero)\n    const sortedIndices = timestamps\n      .map((timestamp, index) => ({ timestamp, index }))\n      .sort((a, b) => a.timestamp - b.timestamp)\n      .map(item => item.index);\n    \n    const sortedRainData = sortedIndices.map(index => rainData[index]);\n    const sortedTempData = sortedIndices.map(index => tempData[index]);\n    const sortedWindData = sortedIndices.map(index => windData[index]);\n    const sortedLabels = sortedIndices.map(index => labels[index]);\n    \n    // 10. Limitar a las horas solicitadas\n    const result = {\n      rainData: sortedRainData.slice(-hours),\n      tempData: sortedTempData.slice(-hours),\n      windData: sortedWindData.slice(-hours),\n      labels: sortedLabels.slice(-hours)\n    };\n    \n    // 11. Guardar en caché\n    await AsyncStorage.setItem(HISTORICAL_DATA_CACHE_KEY, JSON.stringify(result));\n    await AsyncStorage.setItem(CACHE_EXPIRY_KEY, (new Date().getTime() + CACHE_DURATION).toString());\n    \n    return result;\n  } catch (error) {\n    console.error('Error fetching hourly historical data:', error);\n    \n    // Si hay un error, intentar usar datos en caché aunque estén expirados\n    const cachedData = await AsyncStorage.getItem(HISTORICAL_DATA_CACHE_KEY);\n    if (cachedData) {\n      const parsedData = JSON.parse(cachedData);\n      \n      // Devolver solo la cantidad de horas solicitadas\n      return {\n        rainData: parsedData.rainData.slice(0, hours),\n        tempData: parsedData.tempData.slice(0, hours),\n        windData: parsedData.windData.slice(0, hours),\n        labels: parsedData.labels.slice(0, hours)\n      };\n    }\n    \n    // Si no hay caché, crear datos basados en patrones realistas\n    const rainData: number[] = [];\n    const tempData: number[] = [];\n    const windData: number[] = [];\n    const labels: string[] = [];\n    \n    const now = new Date();\n    const currentHour = now.getHours();\n    \n    // Obtener datos actuales para usarlos como base\n    let currentTemp = 20;\n    let currentWind = 10;\n    let isRaining = false;\n    \n    try {\n      const currentResponse = await fetch(\n        `https://api.openweathermap.org/data/2.5/weather?lat=${MALAGA_LAT}&lon=${MALAGA_LON}&units=metric&appid=${OPENWEATHER_API_KEY}`\n      );\n      \n      if (currentResponse.ok) {\n        const currentData = await currentResponse.json();\n        currentTemp = currentData.main.temp;\n        currentWind = currentData.wind.speed * 3.6;\n        isRaining = currentData.rain && currentData.rain['1h'] > 0;\n      }\n    } catch (e) {\n      // Ignorar errores y usar valores predeterminados\n    }\n    \n    // Generar datos para las horas solicitadas\n    for (let i = hours - 1; i >= 0; i--) {\n      const hourOfDay = (currentHour - i + 24) % 24;\n      \n      // Variación de temperatura basada en la hora del día\n      let tempVariation = 0;\n      if (hourOfDay >= 0 && hourOfDay < 6) {\n        tempVariation = -2 - Math.random();\n      } else if (hourOfDay >= 6 && hourOfDay < 12) {\n        tempVariation = -1 + hourOfDay * 0.2;\n      } else if (hourOfDay >= 12 && hourOfDay < 18) {\n        tempVariation = 2 - (hourOfDay - 12) * 0.2;\n      } else {\n        tempVariation = 0 - (hourOfDay - 18) * 0.3;\n      }\n      \n      // Variación de viento basada en la hora del día\n      let windVariation = 1.0; // Factor multiplicador\n      if (hourOfDay >= 10 && hourOfDay < 16) {\n        windVariation = 1.2 + Math.random() * 0.3; // 120-150%\n      } else if (hourOfDay >= 16 && hourOfDay < 22) {\n        windVariation = 1.0 + Math.random() * 0.2; // 100-120%\n      } else {\n        windVariation = 0.7 + Math.random() * 0.3; // 70-100%\n      }\n      \n      // Probabilidad de lluvia basada en la hora del día\n      let rainAmount = 0;\n      if (isRaining) {\n        if (hourOfDay >= 6 && hourOfDay < 10 || hourOfDay >= 16 && hourOfDay < 20) {\n          rainAmount = 1 + Math.random() * 2;\n        } else {\n          rainAmount = Math.random() * 1.5;\n        }\n      } else if (Math.random() > 0.8) {\n        rainAmount = Math.random() * 0.5;\n      }\n      \n      tempData.push(Math.round((currentTemp + tempVariation) * 10) / 10);\n      windData.push(Math.round((currentWind * windVariation) * 10) / 10);\n      rainData.push(Math.round(rainAmount * 10) / 10);\n      labels.push(hourOfDay.toString() + 'h');\n    }\n    \n    return { rainData, tempData, windData, labels };\n  }\n};\n\n// Función para almacenar datos meteorológicos en caché\nconst cacheWeatherData = async (data: any): Promise<void> => {\n  try {\n    await AsyncStorage.setItem('weather_data_cache', JSON.stringify(data));\n    await AsyncStorage.setItem(CACHE_EXPIRY_KEY, (new Date().getTime() + CACHE_DURATION).toString());\n  } catch (error) {\n    console.error('Error caching weather data:', error);\n  }\n};\n\n// Función para obtener datos meteorológicos de la caché\nconst getCachedWeatherData = async (ignoreExpiry: boolean = false): Promise<any | null> => {\n  try {\n    const cachedData = await AsyncStorage.getItem('weather_data_cache');\n    const cacheExpiry = await AsyncStorage.getItem(CACHE_EXPIRY_KEY);\n    \n    if (!cachedData) {\n      return null;\n    }\n    \n    // Verificar si la caché ha expirado\n    if (!ignoreExpiry && cacheExpiry && new Date().getTime() > parseInt(cacheExpiry)) {\n      return null;\n    }\n    \n    return JSON.parse(cachedData);\n  } catch (error) {\n    console.error('Error getting cached weather data:', error);\n    return null;\n  }\n};\n\n// Función para generar datos meteorológicos simulados (solo como fallback)\nconst getSimulatedWeatherData = (date: string): any => {\n  // Generar datos aleatorios basados en la fecha\n  const dateObj = new Date(date);\n  const month = dateObj.getMonth(); // 0-11\n  \n  // Ajustar temperatura según el mes (más cálido en verano, más frío en invierno)\n  let baseTemp = 15;\n  if (month >= 5 && month <= 8) { // Verano (junio-septiembre)\n    baseTemp = 25;\n  } else if (month >= 9 || month <= 2) { // Otoño-Invierno (octubre-marzo)\n    baseTemp = 12;\n  }\n  \n  // Añadir variación aleatoria\n  const temp = baseTemp + (Math.random() * 10 - 5);\n  const tempMin = temp - (2 + Math.random() * 3);\n  const tempMax = temp + (2 + Math.random() * 3);\n  \n  // Probabilidad de lluvia según el mes\n  let rainProbability = 0.2;\n  if (month >= 9 && month <= 11) { // Otoño\n    rainProbability = 0.4;\n  } else if (month >= 0 && month <= 2) { // Invierno\n    rainProbability = 0.5;\n  } else if (month >= 3 && month <= 5) { // Primavera\n    rainProbability = 0.3;\n  }\n  \n  // Determinar si llueve y cuánto\n  const isRaining = Math.random() < rainProbability;\n  const rainAmount = isRaining ? Math.random() * 10 : 0;\n  \n  // Velocidad del viento\n  const windSpeed = 5 + Math.random() * 20; // Entre 5 y 25 km/h\n  \n  return {\n    temperature: Math.round(temp * 10) / 10,\n    tempMin: Math.round(tempMin * 10) / 10,\n    tempMax: Math.round(tempMax * 10) / 10,\n    humidity: Math.floor(40 + Math.random() * 40), // Entre 40% y 80%\n    windSpeed: Math.round(windSpeed * 10) / 10,\n    windDirection: Math.floor(Math.random() * 360),\n    description: isRaining ? 'lluvia' : Math.random() > 0.7 ? 'parcialmente nublado' : 'despejado',\n    icon: isRaining ? '10d' : Math.random() > 0.7 ? '03d' : '01d',\n    rainAmount: Math.round(rainAmount * 100) / 100,\n    date: date,\n    timestamp: new Date().toISOString(),\n    simulated: true\n  };\n};\n\n// Función para limpiar la caché meteorológica\nexport const clearWeatherCache = async (): Promise<void> => {\n  try {\n    await AsyncStorage.removeItem('weather_data_cache');\n    await AsyncStorage.removeItem(RAIN_DATA_CACHE_KEY);\n    await AsyncStorage.removeItem(TEMP_DATA_CACHE_KEY);\n    await AsyncStorage.removeItem(WIND_DATA_CACHE_KEY);\n    await AsyncStorage.removeItem(HISTORICAL_DATA_CACHE_KEY);\n    await AsyncStorage.removeItem(CACHE_EXPIRY_KEY);\n  } catch (error) {\n    console.error('Error clearing weather cache:', error);\n  }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}