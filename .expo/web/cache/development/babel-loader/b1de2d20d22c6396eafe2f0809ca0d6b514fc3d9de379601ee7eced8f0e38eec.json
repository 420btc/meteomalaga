{"ast":null,"code":"var _jsxFileName = \"/Users/atemjohnatem/Downloads/meteo-malaga/src/components/PlantButton.tsx\";\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PlantButton = ({\n  style\n}) => {\n  const navigation = useNavigation();\n  const scaleAnim = React.useRef(new Animated.Value(1)).current;\n  React.useEffect(() => {\n    Animated.loop(Animated.sequence([Animated.timing(scaleAnim, {\n      toValue: 1.05,\n      duration: 1500,\n      easing: Easing.inOut(Easing.quad),\n      useNativeDriver: true\n    }), Animated.timing(scaleAnim, {\n      toValue: 1,\n      duration: 1500,\n      easing: Easing.inOut(Easing.quad),\n      useNativeDriver: true\n    })])).start();\n  }, []);\n  const handlePress = () => {\n    navigation.navigate('MeteoPlant');\n  };\n  return _jsxDEV(Animated.View, {\n    style: [styles.animatedContainer, {\n      transform: [{\n        scale: scaleAnim\n      }]\n    }, style],\n    children: _jsxDEV(TouchableOpacity, {\n      style: styles.container,\n      onPress: handlePress,\n      activeOpacity: 0.7,\n      accessibilityLabel: \"Mi Planta\",\n      accessibilityRole: \"button\",\n      children: _jsxDEV(View, {\n        style: styles.buttonContent,\n        children: [_jsxDEV(Text, {\n          style: styles.plantEmoji,\n          children: \"\\uD83E\\uDEB4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: styles.buttonText,\n          children: \"Mi planta\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\nconst styles = StyleSheet.create({\n  animatedContainer: {\n    height: 30,\n    alignSelf: 'flex-start'\n  },\n  container: {\n    height: 30,\n    paddingHorizontal: 10,\n    borderRadius: 15,\n    borderWidth: 1.5,\n    borderColor: '#32CD32',\n    backgroundColor: '#4682B4',\n    overflow: 'hidden',\n    elevation: 3,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.2,\n    shadowRadius: 3\n  },\n  buttonContent: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '100%'\n  },\n  plantEmoji: {\n    fontSize: 16,\n    marginRight: 4\n  },\n  buttonText: {\n    color: '#FFFFFF',\n    fontWeight: 'bold',\n    fontSize: 12\n  }\n});\nexport default PlantButton;","map":{"version":3,"names":["React","StyleSheet","TouchableOpacity","View","Text","Animated","Easing","useNavigation","jsxDEV","_jsxDEV","PlantButton","style","navigation","scaleAnim","useRef","Value","current","useEffect","loop","sequence","timing","toValue","duration","easing","inOut","quad","useNativeDriver","start","handlePress","navigate","styles","animatedContainer","transform","scale","children","container","onPress","activeOpacity","accessibilityLabel","accessibilityRole","buttonContent","plantEmoji","fileName","_jsxFileName","lineNumber","columnNumber","buttonText","create","height","alignSelf","paddingHorizontal","borderRadius","borderWidth","borderColor","backgroundColor","overflow","elevation","shadowColor","shadowOffset","width","shadowOpacity","shadowRadius","flexDirection","alignItems","justifyContent","fontSize","marginRight","color","fontWeight"],"sources":["/Users/atemjohnatem/Downloads/meteo-malaga/src/components/PlantButton.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  StyleSheet,\n  TouchableOpacity,\n  View,\n  Text,\n  Animated,\n  Easing\n} from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\nimport { NativeStackNavigationProp } from '@react-navigation/native-stack';\nimport { RootStackParamList } from '../types/navigation';\n\ntype PlantButtonNavigationProp = NativeStackNavigationProp<RootStackParamList, 'Main'>;\n\ninterface PlantButtonProps {\n  style?: object;\n}\n\nconst PlantButton: React.FC<PlantButtonProps> = ({ style }) => {\n  const navigation = useNavigation<PlantButtonNavigationProp>();\n  const scaleAnim = React.useRef(new Animated.Value(1)).current;\n  \n  React.useEffect(() => {\n    // Create a subtle pulsing animation\n    Animated.loop(\n      Animated.sequence([\n        Animated.timing(scaleAnim, {\n          toValue: 1.05,\n          duration: 1500,\n          easing: Easing.inOut(Easing.quad),\n          useNativeDriver: true\n        }),\n        Animated.timing(scaleAnim, {\n          toValue: 1,\n          duration: 1500,\n          easing: Easing.inOut(Easing.quad),\n          useNativeDriver: true\n        })\n      ])\n    ).start();\n  }, []);\n  \n  const handlePress = () => {\n    navigation.navigate('MeteoPlant');\n  };\n  \n  return (\n    <Animated.View\n      style={[\n        styles.animatedContainer,\n        {\n          transform: [{ scale: scaleAnim }]\n        },\n        style\n      ]}\n    >\n      <TouchableOpacity\n        style={styles.container}\n        onPress={handlePress}\n        activeOpacity={0.7}\n        accessibilityLabel=\"Mi Planta\"\n        accessibilityRole=\"button\"\n      >\n        <View style={styles.buttonContent}>\n          <Text style={styles.plantEmoji}>ðŸª´</Text>\n          <Text style={styles.buttonText}>Mi planta</Text>\n        </View>\n      </TouchableOpacity>\n    </Animated.View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  animatedContainer: {\n    height: 30,\n    alignSelf: 'flex-start',\n  },\n  container: {\n    height: 30,\n    paddingHorizontal: 10,\n    borderRadius: 15,\n    borderWidth: 1.5,\n    borderColor: '#32CD32',\n    backgroundColor: '#4682B4',\n    overflow: 'hidden',\n    elevation: 3,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.2,\n    shadowRadius: 3,\n  },\n  buttonContent: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '100%',\n  },\n  plantEmoji: {\n    fontSize: 16,\n    marginRight: 4,\n  },\n  buttonText: {\n    color: '#FFFFFF',\n    fontWeight: 'bold',\n    fontSize: 12,\n  }\n});\n\nexport default PlantButton;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}