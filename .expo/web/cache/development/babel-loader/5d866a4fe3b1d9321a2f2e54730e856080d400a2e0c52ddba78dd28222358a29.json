{"ast":null,"code":"var _jsxFileName = \"/Users/atemjohnatem/Downloads/meteo-malaga/src/components/YouTubePlayer.tsx\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst YouTubePlayer = ({\n  videoId,\n  height = 200,\n  width = '100%',\n  thumbnailUrl\n}) => {\n  if (Platform.OS === 'web') {\n    return _jsxDEV(View, {\n      style: [styles.container, {\n        height,\n        width\n      }],\n      children: _jsxDEV(\"iframe\", {\n        width: \"100%\",\n        height: \"100%\",\n        src: `https://www.youtube.com/embed/${videoId}`,\n        frameBorder: \"0\",\n        allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n        allowFullScreen: true,\n        title: \"YouTube video player\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this);\n  }\n  const thumbnail = thumbnailUrl || `https://i.ytimg.com/vi/${videoId}/maxresdefault_live.jpg`;\n  return _jsxDEV(View, {\n    style: [styles.container, {\n      height,\n      width\n    }],\n    children: [_jsxDEV(Image, {\n      source: {\n        uri: thumbnail\n      },\n      style: styles.thumbnail,\n      resizeMode: \"cover\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), _jsxDEV(View, {\n      style: styles.overlay,\n      children: [_jsxDEV(Text, {\n        style: styles.text,\n        children: \"Para ver este video en directo:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), _jsxDEV(TouchableOpacity, {\n        style: styles.button,\n        onPress: () => Linking.openURL(`https://www.youtube.com/watch?v=${videoId}`),\n        children: _jsxDEV(Text, {\n          style: styles.buttonText,\n          children: \"Ver en YouTube\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#000',\n    overflow: 'hidden',\n    position: 'relative'\n  },\n  thumbnail: {\n    width: '100%',\n    height: '100%',\n    position: 'absolute'\n  },\n  overlay: Object.assign({}, StyleSheet.absoluteFillObject, {\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20\n  }),\n  text: {\n    color: '#FFFFFF',\n    marginBottom: 15,\n    textAlign: 'center',\n    fontSize: 16\n  },\n  button: {\n    backgroundColor: '#FF0000',\n    paddingVertical: 10,\n    paddingHorizontal: 15,\n    borderRadius: 5\n  },\n  buttonText: {\n    color: '#FFFFFF',\n    fontWeight: 'bold'\n  }\n});\nexport default YouTubePlayer;","map":{"version":3,"names":["React","View","StyleSheet","Text","TouchableOpacity","Linking","Image","Platform","jsxDEV","_jsxDEV","YouTubePlayer","videoId","height","width","thumbnailUrl","OS","style","styles","container","children","src","frameBorder","allow","allowFullScreen","title","fileName","_jsxFileName","lineNumber","columnNumber","thumbnail","source","uri","resizeMode","overlay","text","button","onPress","openURL","buttonText","create","backgroundColor","overflow","position","Object","assign","absoluteFillObject","justifyContent","alignItems","padding","color","marginBottom","textAlign","fontSize","paddingVertical","paddingHorizontal","borderRadius","fontWeight"],"sources":["/Users/atemjohnatem/Downloads/meteo-malaga/src/components/YouTubePlayer.tsx"],"sourcesContent":["import React from 'react';\nimport { View, StyleSheet, Text, TouchableOpacity, Linking, Image, Platform } from 'react-native';\n\ninterface YouTubePlayerProps {\n  videoId: string;\n  height?: number;\n  width?: number;\n  thumbnailUrl?: string;\n}\n\nconst YouTubePlayer: React.FC<YouTubePlayerProps> = ({\n  videoId,\n  height = 200,\n  width = '100%',\n  thumbnailUrl\n}) => {\n  // For web platform, use a simple iframe\n  if (Platform.OS === 'web') {\n    return (\n      <View style={[styles.container, { height, width }]}>\n        <iframe\n          width=\"100%\"\n          height=\"100%\"\n          src={`https://www.youtube.com/embed/${videoId}`}\n          frameBorder=\"0\"\n          allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n          allowFullScreen\n          title=\"YouTube video player\"\n        />\n      </View>\n    );\n  }\n  \n  // For mobile platforms, show a static image with a button to open YouTube externally\n  const thumbnail = thumbnailUrl || `https://i.ytimg.com/vi/${videoId}/maxresdefault_live.jpg`;\n  \n  return (\n    <View style={[styles.container, { height, width }]}>\n      <Image \n        source={{ uri: thumbnail }}\n        style={styles.thumbnail}\n        resizeMode=\"cover\"\n      />\n      <View style={styles.overlay}>\n        <Text style={styles.text}>\n          Para ver este video en directo:\n        </Text>\n        <TouchableOpacity \n          style={styles.button}\n          onPress={() => Linking.openURL(`https://www.youtube.com/watch?v=${videoId}`)}\n        >\n          <Text style={styles.buttonText}>Ver en YouTube</Text>\n        </TouchableOpacity>\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#000',\n    overflow: 'hidden',\n    position: 'relative',\n  },\n  thumbnail: {\n    width: '100%',\n    height: '100%',\n    position: 'absolute',\n  },\n  overlay: {\n    ...StyleSheet.absoluteFillObject,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20,\n  },\n  text: {\n    color: '#FFFFFF',\n    marginBottom: 15,\n    textAlign: 'center',\n    fontSize: 16,\n  },\n  button: {\n    backgroundColor: '#FF0000',\n    paddingVertical: 10,\n    paddingHorizontal: 15,\n    borderRadius: 5,\n  },\n  buttonText: {\n    color: '#FFFFFF',\n    fontWeight: 'bold',\n  }\n});\n\nexport default YouTubePlayer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}