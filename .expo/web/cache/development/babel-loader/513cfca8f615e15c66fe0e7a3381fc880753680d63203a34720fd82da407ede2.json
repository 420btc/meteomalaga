{"ast":null,"code":"var _jsxFileName = \"/Users/atemjohnatem/Downloads/meteo-malaga/src/screens/MeteoPlantScreen.tsx\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { useApp } from \"../context/AppContext\";\nimport { getPlant, initializePlant, updatePlantHealth, waterPlant, getPlantProgressPercentage, getPlantEvolutionPercentage, getPendingRewards, claimPendingRewards, savePlant, collectDailyFreeWater, getTimeUntilNextFreeWater } from \"../services/plantService\";\nimport GradientBackground from \"../components/GradientBackground\";\nimport { Feather } from '@expo/vector-icons';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  width,\n  height\n} = Dimensions.get('window');\nconst MeteoPlantScreen = () => {\n  const navigation = useNavigation();\n  const {\n    language,\n    trackActivity\n  } = useApp();\n  const [plant, setPlant] = useState(null);\n  const [currentTime, setCurrentTime] = useState(new Date());\n  const [isLoading, setIsLoading] = useState(true);\n  const [showProgressModal, setShowProgressModal] = useState(false);\n  const [pendingRewards, setPendingRewards] = useState(0);\n  const [isWatering, setIsWatering] = useState(false);\n  const [potColor, setPotColor] = useState('default');\n  const [showTip, setShowTip] = useState(true);\n  const [currentTip, setCurrentTip] = useState(0);\n  const [wateringError, setWateringError] = useState('');\n  const [showWateringError, setShowWateringError] = useState(false);\n  const [freeWaterCollected, setFreeWaterCollected] = useState(false);\n  const plantAnimation = useRef(new Animated.Value(1)).current;\n  const waterAnimation = useRef(new Animated.Value(0)).current;\n  const waterOpacity = useRef(new Animated.Value(0)).current;\n  const plantTips = [language === 'es' ? \"Gana apuestas de temperatura para obtener más agua para tu planta.\" : \"Win temperature bets to get more water for your plant.\", language === 'es' ? \"Las plantas evolucionan más rápido cuando las riegas regularmente.\" : \"Plants evolve faster when you water them regularly.\", language === 'es' ? \"Cada tipo de planta tiene diferentes necesidades de agua.\" : \"Each plant type has different water requirements.\", language === 'es' ? \"Recoge 1 unidad de agua gratis cada día para mantener tu planta viva.\" : \"Collect 1 free water unit each day to keep your plant alive.\", language === 'es' ? \"Si no riegas tu planta durante 72 horas, morirá.\" : \"If you don't water your plant for 72 hours, it will die.\", language === 'es' ? \"La salud de tu planta disminuye con el tiempo de inactividad.\" : \"Your plant's health decreases with inactivity time.\"];\n  const getHealthColor = health => {\n    if (health > 70) return '#32CD32';\n    if (health > 40) return '#FFA500';\n    return '#FF6347';\n  };\n  const getNextThreshold = plant => {\n    const {\n      type,\n      stage\n    } = plant;\n    const plantConfigs = {\n      'Cactus': {\n        Brote: 11,\n        Joven: 26,\n        Adulta: 41,\n        Florecida: 60\n      },\n      'Suculenta': {\n        Brote: 11,\n        Joven: 26,\n        Adulta: 41,\n        Florecida: 60\n      },\n      'Aloe': {\n        Brote: 11,\n        Joven: 26,\n        Adulta: 41,\n        Florecida: 60\n      },\n      'Lavanda': {\n        Brote: 11,\n        Joven: 26,\n        Adulta: 41,\n        Florecida: 60\n      },\n      'Jade': {\n        Brote: 11,\n        Joven: 26,\n        Adulta: 41,\n        Florecida: 60\n      },\n      'Girasol': {\n        Brote: 21,\n        Joven: 51,\n        Adulta: 81,\n        Florecida: 120\n      },\n      'Rosa': {\n        Brote: 21,\n        Joven: 51,\n        Adulta: 81,\n        Florecida: 120\n      },\n      'Orquídea': {\n        Brote: 21,\n        Joven: 51,\n        Adulta: 81,\n        Florecida: 120\n      },\n      'Monstera': {\n        Brote: 21,\n        Joven: 51,\n        Adulta: 81,\n        Florecida: 120\n      },\n      'Hibisco': {\n        Brote: 21,\n        Joven: 51,\n        Adulta: 81,\n        Florecida: 120\n      },\n      'Bambú': {\n        Brote: 31,\n        Joven: 81,\n        Adulta: 151,\n        Florecida: 250\n      },\n      'Helecho': {\n        Brote: 31,\n        Joven: 81,\n        Adulta: 151,\n        Florecida: 250\n      }\n    };\n    if (stage === 'Brote') {\n      return plantConfigs[type].Brote;\n    } else if (stage === 'Joven') {\n      return plantConfigs[type].Joven;\n    } else if (stage === 'Adulta') {\n      return plantConfigs[type].Adulta;\n    } else {\n      return plantConfigs[type].Florecida;\n    }\n  };\n  const getNextPlantType = currentType => {\n    const evolutionOrder = ['Cactus', 'Suculenta', 'Aloe', 'Lavanda', 'Jade', 'Girasol', 'Rosa', 'Orquídea', 'Monstera', 'Hibisco', 'Bambú', 'Helecho'];\n    const currentIndex = evolutionOrder.indexOf(currentType);\n    if (currentIndex === -1 || currentIndex === evolutionOrder.length - 1) {\n      return null;\n    }\n    return evolutionOrder[currentIndex + 1];\n  };\n  const translateStage = stage => {\n    const translations = {\n      'Brote': 'Sprout',\n      'Joven': 'Young',\n      'Adulta': 'Adult',\n      'Florecida': 'Flowering'\n    };\n    return translations[stage] || stage;\n  };\n  useEffect(() => {\n    const loadPlant = async () => {\n      setIsLoading(true);\n      try {\n        await trackActivity();\n        let plantData = await getPlant();\n        if (!plantData) {\n          plantData = await initializePlant();\n        }\n        plantData = (await updatePlantHealth()) || plantData;\n        const rewards = await getPendingRewards();\n        setPendingRewards(rewards);\n        setPlant(plantData);\n      } catch (error) {\n        console.error('Error loading plant:', error);\n        Alert.alert(language === 'es' ? 'Error' : 'Error', language === 'es' ? 'Hubo un problema al cargar tu planta. Por favor, inténtalo de nuevo.' : 'There was a problem loading your plant. Please try again.');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    loadPlant();\n    const timeInterval = setInterval(() => {\n      setCurrentTime(new Date());\n    }, 60000);\n    startPlantAnimation();\n    return () => {\n      clearInterval(timeInterval);\n    };\n  }, []);\n  const startPlantAnimation = () => {\n    Animated.loop(Animated.sequence([Animated.timing(plantAnimation, {\n      toValue: 1.1,\n      duration: 2000,\n      useNativeDriver: true\n    }), Animated.timing(plantAnimation, {\n      toValue: 0.9,\n      duration: 2000,\n      useNativeDriver: true\n    }), Animated.timing(plantAnimation, {\n      toValue: 1,\n      duration: 2000,\n      useNativeDriver: true\n    })])).start();\n  };\n  const handleWater = async () => {\n    if (isWatering || !plant) return;\n    await trackActivity();\n    if (plant.waterAvailable < 1) {\n      setWateringError(language === 'es' ? 'No tienes suficiente agua disponible. Gana apuestas o recoge agua gratis diaria.' : 'You don\\'t have enough water available. Win bets or collect daily free water.');\n      setShowWateringError(true);\n      setTimeout(() => setShowWateringError(false), 3000);\n      return;\n    }\n    setIsWatering(true);\n    Animated.sequence([Animated.parallel([Animated.timing(waterOpacity, {\n      toValue: 1,\n      duration: 300,\n      useNativeDriver: true\n    }), Animated.timing(waterAnimation, {\n      toValue: 1,\n      duration: 1500,\n      useNativeDriver: true\n    })]), Animated.timing(waterOpacity, {\n      toValue: 0,\n      duration: 500,\n      useNativeDriver: true\n    })]).start(async () => {\n      waterAnimation.setValue(0);\n      const {\n        plant: updatedPlant,\n        success\n      } = await waterPlant(1);\n      if (updatedPlant && success) {\n        setPlant(updatedPlant);\n      } else if (updatedPlant && !success) {\n        setWateringError(language === 'es' ? 'No tienes suficiente agua disponible. Gana apuestas o recoge agua gratis diaria.' : 'You don\\'t have enough water available. Win bets or collect daily free water.');\n        setShowWateringError(true);\n        setTimeout(() => setShowWateringError(false), 3000);\n      }\n      setIsWatering(false);\n    });\n  };\n  const handleClaimRewards = async () => {\n    if (pendingRewards <= 0) return;\n    await trackActivity();\n    try {\n      const updatedPlant = await claimPendingRewards();\n      if (updatedPlant) {\n        setPlant(updatedPlant);\n        setPendingRewards(0);\n      }\n    } catch (error) {\n      console.error('Error claiming rewards:', error);\n    }\n  };\n  const handleCollectFreeWater = async () => {\n    await trackActivity();\n    try {\n      const {\n        plant: updatedPlant,\n        collected\n      } = await collectDailyFreeWater();\n      if (updatedPlant) {\n        setPlant(updatedPlant);\n        if (collected) {\n          setFreeWaterCollected(true);\n          setTimeout(() => setFreeWaterCollected(false), 3000);\n        } else {\n          const hoursLeft = getTimeUntilNextFreeWater(updatedPlant);\n          Alert.alert(language === 'es' ? 'Agua Gratis No Disponible' : 'Free Water Not Available', language === 'es' ? `Ya has recogido tu agua gratis hoy. Vuelve en ${hoursLeft} horas.` : `You've already collected your free water today. Come back in ${hoursLeft} hours.`);\n        }\n      }\n    } catch (error) {\n      console.error('Error collecting free water:', error);\n    }\n  };\n  const formatTime = date => {\n    return date.toLocaleTimeString([], {\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n  const getBackgroundColors = () => {\n    const hour = currentTime.getHours();\n    if (hour >= 6 && hour < 10) {\n      return ['#FFB347', '#FFD700', '#87CEFA'];\n    } else if (hour >= 10 && hour < 17) {\n      return ['#87CEFA', '#4682B4', '#1E3A8A'];\n    } else if (hour >= 17 && hour < 20) {\n      return ['#FF7F50', '#FF6347', '#4B0082'];\n    } else {\n      return ['#191970', '#483D8B', '#000033'];\n    }\n  };\n  const getSoilColor = () => {\n    if (!plant) return '#8B4513';\n    return plant.health > 50 ? '#5C4033' : '#D2B48C';\n  };\n  const getPlantEmoji = plant => {\n    if (plant.stage === 'Brote') {\n      return '🌱';\n    }\n    const plantEmojis = {\n      'Cactus': {\n        'Joven': '🌵',\n        'Adulta': '🌵',\n        'Florecida': '🌵'\n      },\n      'Suculenta': {\n        'Joven': '🪴',\n        'Adulta': '🪴',\n        'Florecida': '🪴'\n      },\n      'Aloe': {\n        'Joven': '🌿',\n        'Adulta': '🌿',\n        'Florecida': '🌿'\n      },\n      'Lavanda': {\n        'Joven': '🌱',\n        'Adulta': '💐',\n        'Florecida': '💐'\n      },\n      'Jade': {\n        'Joven': '🌱',\n        'Adulta': '🌿',\n        'Florecida': '🌿'\n      },\n      'Girasol': {\n        'Joven': '🌱',\n        'Adulta': '🌻',\n        'Florecida': '🌻'\n      },\n      'Rosa': {\n        'Joven': '🌱',\n        'Adulta': '🌹',\n        'Florecida': '🌹'\n      },\n      'Orquídea': {\n        'Joven': '🌱',\n        'Adulta': '🌸',\n        'Florecida': '🌸'\n      },\n      'Monstera': {\n        'Joven': '🌱',\n        'Adulta': '🌿',\n        'Florecida': '🌿'\n      },\n      'Hibisco': {\n        'Joven': '🌱',\n        'Adulta': '🌺',\n        'Florecida': '🌺'\n      },\n      'Bambú': {\n        'Joven': '🌱',\n        'Adulta': '🎋',\n        'Florecida': '🎋'\n      },\n      'Helecho': {\n        'Joven': '🌱',\n        'Adulta': '🌿',\n        'Florecida': '🌿'\n      }\n    };\n    return plantEmojis[plant.type]?.[plant.stage] || '🌱';\n  };\n  const getWeatherEmoji = () => {\n    const hour = currentTime.getHours();\n    if (hour >= 6 && hour < 10) {\n      return '🌅';\n    } else if (hour >= 10 && hour < 17) {\n      return '☀️';\n    } else if (hour >= 17 && hour < 20) {\n      return '🌇';\n    } else {\n      return '🌙';\n    }\n  };\n  const getPlantStatusText = () => {\n    if (!plant) return '';\n    if (plant.health < 30) {\n      return language === 'es' ? '¡Necesita agua urgentemente!' : 'Needs water urgently!';\n    } else if (plant.health < 60) {\n      return language === 'es' ? 'Podría usar más agua' : 'Could use more water';\n    } else {\n      return language === 'es' ? 'Saludable y feliz' : 'Healthy and happy';\n    }\n  };\n  const changeTip = () => {\n    trackActivity();\n    setCurrentTip(prev => (prev + 1) % plantTips.length);\n  };\n  if (isLoading) {\n    return _jsxDEV(GradientBackground, {\n      colors: getBackgroundColors(),\n      children: _jsxDEV(View, {\n        style: styles.loadingContainer,\n        children: [_jsxDEV(ActivityIndicator, {\n          size: \"large\",\n          color: \"#FFFFFF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: styles.loadingText,\n          children: language === 'es' ? 'Cargando tu planta...' : 'Loading your plant...'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 7\n    }, this);\n  }\n  return _jsxDEV(GradientBackground, {\n    colors: getBackgroundColors(),\n    children: [_jsxDEV(StatusBar, {\n      barStyle: \"light-content\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 7\n    }, this), _jsxDEV(SafeAreaView, {\n      style: styles.safeArea,\n      children: _jsxDEV(View, {\n        style: styles.container,\n        children: [_jsxDEV(View, {\n          style: styles.header,\n          children: [_jsxDEV(TouchableOpacity, {\n            style: styles.backButton,\n            onPress: () => {\n              trackActivity();\n              navigation.goBack();\n            },\n            children: [_jsxDEV(Feather, {\n              name: \"arrow-left\",\n              size: 24,\n              color: \"#FFFFFF\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 450,\n              columnNumber: 15\n            }, this), _jsxDEV(Text, {\n              style: styles.backButtonText,\n              children: language === 'es' ? 'Volver' : 'Back'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 451,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 443,\n            columnNumber: 13\n          }, this), _jsxDEV(View, {\n            style: styles.clockContainer,\n            children: _jsxDEV(Text, {\n              style: styles.clockText,\n              children: [getWeatherEmoji(), \" \", formatTime(currentTime)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 456,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 455,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: styles.plantContainer,\n          children: [_jsxDEV(View, {\n            style: [styles.soil, {\n              backgroundColor: getSoilColor()\n            }]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 462,\n            columnNumber: 13\n          }, this), plant && _jsxDEV(View, {\n            style: styles.plantWrapper,\n            children: _jsxDEV(Animated.Text, {\n              style: [styles.plantEmoji, {\n                transform: [{\n                  scale: plantAnimation\n                }, {\n                  translateY: plantAnimation.interpolate({\n                    inputRange: [0.9, 1, 1.1],\n                    outputRange: [5, 0, -5]\n                  })\n                }]\n              }],\n              children: getPlantEmoji(plant)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 465,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 464,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 11\n        }, this), plant && _jsxDEV(View, {\n          style: styles.infoContainer,\n          children: [_jsxDEV(View, {\n            style: styles.infoRow,\n            children: [_jsxDEV(Text, {\n              style: styles.plantName,\n              children: plant.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 489,\n              columnNumber: 17\n            }, this), _jsxDEV(TouchableOpacity, {\n              style: styles.editButton,\n              onPress: async () => {\n                await trackActivity();\n                const newName = prompt(language === 'es' ? 'Introduce un nuevo nombre para tu planta:' : 'Enter a new name for your plant:', plant.name);\n                if (newName) {\n                  const updatedPlant = Object.assign({}, plant, {\n                    name: newName\n                  });\n                  setPlant(updatedPlant);\n                  savePlant(updatedPlant);\n                }\n              },\n              children: _jsxDEV(Feather, {\n                name: \"edit-2\",\n                size: 16,\n                color: \"#FFFFFF\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 509,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 490,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 488,\n            columnNumber: 15\n          }, this), _jsxDEV(Text, {\n            style: styles.plantType,\n            children: [plant.type, \" - \", language === 'es' ? plant.stage : translateStage(plant.stage)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 512,\n            columnNumber: 15\n          }, this), _jsxDEV(Text, {\n            style: styles.plantStatus,\n            children: getPlantStatusText()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 515,\n            columnNumber: 15\n          }, this), _jsxDEV(View, {\n            style: styles.barContainer,\n            children: [_jsxDEV(Text, {\n              style: styles.barLabel,\n              children: language === 'es' ? '❤️ Salud:' : '❤️ Health:'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 517,\n              columnNumber: 17\n            }, this), _jsxDEV(View, {\n              style: styles.progressBarBackground,\n              children: _jsxDEV(View, {\n                style: [styles.progressBar, {\n                  width: `${plant.health}%`,\n                  backgroundColor: getHealthColor(plant.health)\n                }]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 521,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 520,\n              columnNumber: 17\n            }, this), _jsxDEV(Text, {\n              style: styles.barValue,\n              children: [plant.health, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 528,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 516,\n            columnNumber: 15\n          }, this), _jsxDEV(View, {\n            style: styles.barContainer,\n            children: [_jsxDEV(Text, {\n              style: styles.barLabel,\n              children: language === 'es' ? '💧 Agua:' : '💧 Water:'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 531,\n              columnNumber: 17\n            }, this), _jsxDEV(View, {\n              style: styles.progressBarBackground,\n              children: _jsxDEV(View, {\n                style: [styles.progressBar, {\n                  width: `${getPlantProgressPercentage(plant)}%`,\n                  backgroundColor: '#ADD8E6'\n                }]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 535,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 534,\n              columnNumber: 17\n            }, this), _jsxDEV(Text, {\n              style: styles.barValue,\n              children: [plant.waterAccumulated, \"/\", getNextThreshold(plant)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 542,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 530,\n            columnNumber: 15\n          }, this), _jsxDEV(View, {\n            style: styles.barContainer,\n            children: [_jsxDEV(Text, {\n              style: styles.barLabel,\n              children: language === 'es' ? '🚿 Disponible:' : '🚿 Available:'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 547,\n              columnNumber: 17\n            }, this), _jsxDEV(View, {\n              style: styles.progressBarBackground,\n              children: _jsxDEV(View, {\n                style: [styles.progressBar, {\n                  width: `${Math.min(100, plant.waterAvailable / 20 * 100)}%`,\n                  backgroundColor: '#87CEEB'\n                }]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 551,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 550,\n              columnNumber: 17\n            }, this), _jsxDEV(Text, {\n              style: styles.barValue,\n              children: plant.waterAvailable\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 561,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 546,\n            columnNumber: 15\n          }, this), _jsxDEV(Text, {\n            style: styles.requirementText,\n            children: language === 'es' ? `📅 Necesidad diaria: ${plant.waterRequirement} unidades de agua` : `📅 Daily requirement: ${plant.waterRequirement} water units`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 565,\n            columnNumber: 15\n          }, this), pendingRewards > 0 && _jsxDEV(TouchableOpacity, {\n            style: styles.rewardsButton,\n            onPress: handleClaimRewards,\n            children: _jsxDEV(Text, {\n              style: styles.rewardsButtonText,\n              children: language === 'es' ? `🎁 ¡Reclama ${pendingRewards} unidades de agua!` : `🎁 Claim ${pendingRewards} water units!`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 575,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 571,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 487,\n          columnNumber: 13\n        }, this), _jsxDEV(TouchableOpacity, {\n          style: styles.tipContainer,\n          onPress: changeTip,\n          children: [_jsxDEV(Text, {\n            style: styles.tipIcon,\n            children: \"\\uD83D\\uDCA1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 590,\n            columnNumber: 13\n          }, this), _jsxDEV(Text, {\n            style: styles.tipText,\n            children: plantTips[currentTip]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 591,\n            columnNumber: 13\n          }, this), _jsxDEV(Text, {\n            style: styles.tipChangeText,\n            children: language === 'es' ? 'Toca para cambiar' : 'Tap to change'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 592,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 586,\n          columnNumber: 11\n        }, this), showWateringError && _jsxDEV(View, {\n          style: styles.errorContainer,\n          children: _jsxDEV(Text, {\n            style: styles.errorText,\n            children: wateringError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 600,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 599,\n          columnNumber: 13\n        }, this), freeWaterCollected && _jsxDEV(View, {\n          style: styles.successContainer,\n          children: _jsxDEV(Text, {\n            style: styles.successText,\n            children: language === 'es' ? '¡Has recogido 1 unidad de agua gratis!' : 'You collected 1 free water unit!'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 607,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 606,\n          columnNumber: 13\n        }, this), _jsxDEV(View, {\n          style: styles.buttonsContainer,\n          children: [_jsxDEV(TouchableOpacity, {\n            style: styles.actionButton,\n            onPress: handleCollectFreeWater,\n            children: [_jsxDEV(Feather, {\n              name: \"droplet\",\n              size: 24,\n              color: \"#FFFFFF\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 621,\n              columnNumber: 15\n            }, this), _jsxDEV(Text, {\n              style: styles.actionButtonText,\n              children: language === 'es' ? 'Agua Gratis' : 'Free Water'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 622,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 617,\n            columnNumber: 13\n          }, this), _jsxDEV(TouchableOpacity, {\n            style: [styles.actionButton, styles.waterButton],\n            onPress: handleWater,\n            disabled: isWatering,\n            children: [_jsxDEV(Feather, {\n              name: \"cloud-rain\",\n              size: 24,\n              color: \"#FFFFFF\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 632,\n              columnNumber: 15\n            }, this), _jsxDEV(Text, {\n              style: styles.actionButtonText,\n              children: language === 'es' ? 'Regar (1 💧)' : 'Water (1 💧)'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 633,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 627,\n            columnNumber: 13\n          }, this), _jsxDEV(TouchableOpacity, {\n            style: styles.actionButton,\n            onPress: () => {\n              trackActivity();\n              setShowProgressModal(true);\n            },\n            children: [_jsxDEV(Feather, {\n              name: \"bar-chart-2\",\n              size: 24,\n              color: \"#FFFFFF\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 645,\n              columnNumber: 15\n            }, this), _jsxDEV(Text, {\n              style: styles.actionButtonText,\n              children: language === 'es' ? 'Progreso' : 'Progress'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 646,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 638,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 616,\n          columnNumber: 11\n        }, this), isWatering && _jsxDEV(Animated.View, {\n          style: [styles.waterDrop, {\n            opacity: waterOpacity,\n            transform: [{\n              translateY: waterAnimation.interpolate({\n                inputRange: [0, 1],\n                outputRange: [0, 200]\n              })\n            }]\n          }],\n          children: _jsxDEV(Text, {\n            style: styles.waterDropText,\n            children: \"\\uD83D\\uDCA7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 670,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 654,\n          columnNumber: 13\n        }, this), _jsxDEV(Modal, {\n          visible: showProgressModal,\n          transparent: true,\n          animationType: \"fade\",\n          onRequestClose: () => setShowProgressModal(false),\n          children: _jsxDEV(View, {\n            style: styles.modalOverlay,\n            children: _jsxDEV(View, {\n              style: styles.modalContent,\n              children: [_jsxDEV(View, {\n                style: styles.modalHeader,\n                children: [_jsxDEV(Text, {\n                  style: styles.modalTitle,\n                  children: language === 'es' ? 'Progreso de la Planta' : 'Plant Progress'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 684,\n                  columnNumber: 19\n                }, this), _jsxDEV(TouchableOpacity, {\n                  style: styles.closeButton,\n                  onPress: () => {\n                    trackActivity();\n                    setShowProgressModal(false);\n                  },\n                  children: _jsxDEV(Feather, {\n                    name: \"x\",\n                    size: 24,\n                    color: \"#333333\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 694,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 687,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 683,\n                columnNumber: 17\n              }, this), _jsxDEV(ScrollView, {\n                style: styles.modalScrollView,\n                children: plant && _jsxDEV(_Fragment, {\n                  children: [_jsxDEV(View, {\n                    style: styles.progressSection,\n                    children: [_jsxDEV(Text, {\n                      style: styles.progressTitle,\n                      children: language === 'es' ? 'Etapa Actual' : 'Current Stage'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 702,\n                      columnNumber: 25\n                    }, this), _jsxDEV(View, {\n                      style: styles.stageContainer,\n                      children: [_jsxDEV(Text, {\n                        style: styles.stageEmoji,\n                        children: getPlantEmoji(plant)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 706,\n                        columnNumber: 27\n                      }, this), _jsxDEV(Text, {\n                        style: styles.stageName,\n                        children: language === 'es' ? plant.stage : translateStage(plant.stage)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 707,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 705,\n                      columnNumber: 25\n                    }, this), _jsxDEV(View, {\n                      style: styles.progressBarContainer,\n                      children: [_jsxDEV(Text, {\n                        style: styles.progressLabel,\n                        children: language === 'es' ? 'Progreso de etapa:' : 'Stage progress:'\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 712,\n                        columnNumber: 27\n                      }, this), _jsxDEV(View, {\n                        style: styles.modalProgressBar,\n                        children: _jsxDEV(View, {\n                          style: [styles.modalProgressFill, {\n                            width: `${getPlantProgressPercentage(plant)}%`\n                          }]\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 716,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 715,\n                        columnNumber: 27\n                      }, this), _jsxDEV(Text, {\n                        style: styles.progressValue,\n                        children: [plant.waterAccumulated, \"/\", getNextThreshold(plant), \" \\uD83D\\uDCA7\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 723,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 711,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 701,\n                    columnNumber: 23\n                  }, this), _jsxDEV(View, {\n                    style: styles.progressSection,\n                    children: [_jsxDEV(Text, {\n                      style: styles.progressTitle,\n                      children: language === 'es' ? 'Evolución' : 'Evolution'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 730,\n                      columnNumber: 25\n                    }, this), _jsxDEV(View, {\n                      style: styles.evolutionContainer,\n                      children: [_jsxDEV(View, {\n                        style: styles.evolutionItem,\n                        children: [_jsxDEV(Text, {\n                          style: styles.evolutionEmoji,\n                          children: getPlantEmoji(plant)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 735,\n                          columnNumber: 29\n                        }, this), _jsxDEV(Text, {\n                          style: styles.evolutionName,\n                          children: plant.type\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 736,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 734,\n                        columnNumber: 27\n                      }, this), _jsxDEV(Feather, {\n                        name: \"arrow-right\",\n                        size: 24,\n                        color: \"#666666\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 738,\n                        columnNumber: 27\n                      }, this), _jsxDEV(View, {\n                        style: styles.evolutionItem,\n                        children: [_jsxDEV(Text, {\n                          style: styles.evolutionEmoji,\n                          children: getNextPlantType(plant.type) ? '❓' : '🏆'\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 740,\n                          columnNumber: 29\n                        }, this), _jsxDEV(Text, {\n                          style: styles.evolutionName,\n                          children: getNextPlantType(plant.type) || (language === 'es' ? 'Planta Final' : 'Final Plant')\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 743,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 739,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 733,\n                      columnNumber: 25\n                    }, this), _jsxDEV(View, {\n                      style: styles.progressBarContainer,\n                      children: [_jsxDEV(Text, {\n                        style: styles.progressLabel,\n                        children: language === 'es' ? 'Progreso de evolución:' : 'Evolution progress:'\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 750,\n                        columnNumber: 27\n                      }, this), _jsxDEV(View, {\n                        style: styles.modalProgressBar,\n                        children: _jsxDEV(View, {\n                          style: [styles.modalProgressFill, {\n                            width: `${getPlantEvolutionPercentage(plant)}%`\n                          }]\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 754,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 753,\n                        columnNumber: 27\n                      }, this), _jsxDEV(Text, {\n                        style: styles.progressValue,\n                        children: [plant.waterAccumulated, \"/\", plant.evolutionThreshold, \" \\uD83D\\uDCA7\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 761,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 749,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 729,\n                    columnNumber: 23\n                  }, this), _jsxDEV(View, {\n                    style: styles.progressSection,\n                    children: [_jsxDEV(Text, {\n                      style: styles.progressTitle,\n                      children: language === 'es' ? 'Estadísticas' : 'Statistics'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 768,\n                      columnNumber: 25\n                    }, this), _jsxDEV(View, {\n                      style: styles.statsRow,\n                      children: [_jsxDEV(View, {\n                        style: styles.statItem,\n                        children: [_jsxDEV(Text, {\n                          style: styles.statValue,\n                          children: plant.waterRequirement\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 773,\n                          columnNumber: 29\n                        }, this), _jsxDEV(Text, {\n                          style: styles.statLabel,\n                          children: language === 'es' ? 'Necesidad Diaria' : 'Daily Need'\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 774,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 772,\n                        columnNumber: 27\n                      }, this), _jsxDEV(View, {\n                        style: styles.statItem,\n                        children: [_jsxDEV(Text, {\n                          style: styles.statValue,\n                          children: plant.waterAvailable\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 779,\n                          columnNumber: 29\n                        }, this), _jsxDEV(Text, {\n                          style: styles.statLabel,\n                          children: language === 'es' ? 'Agua Disponible' : 'Available Water'\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 780,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 778,\n                        columnNumber: 27\n                      }, this), _jsxDEV(View, {\n                        style: styles.statItem,\n                        children: [_jsxDEV(Text, {\n                          style: styles.statValue,\n                          children: [plant.health, \"%\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 785,\n                          columnNumber: 29\n                        }, this), _jsxDEV(Text, {\n                          style: styles.statLabel,\n                          children: language === 'es' ? 'Salud' : 'Health'\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 786,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 784,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 771,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 767,\n                    columnNumber: 23\n                  }, this), _jsxDEV(View, {\n                    style: styles.progressSection,\n                    children: [_jsxDEV(Text, {\n                      style: styles.progressTitle,\n                      children: language === 'es' ? 'Consejos de Cuidado' : 'Care Tips'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 794,\n                      columnNumber: 25\n                    }, this), _jsxDEV(View, {\n                      style: styles.tipsList,\n                      children: [_jsxDEV(View, {\n                        style: styles.tipItem,\n                        children: [_jsxDEV(Feather, {\n                          name: \"droplet\",\n                          size: 18,\n                          color: \"#4682B4\",\n                          style: styles.tipIcon\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 799,\n                          columnNumber: 29\n                        }, this), _jsxDEV(Text, {\n                          style: styles.tipItemText,\n                          children: language === 'es' ? `Riega tu ${plant.type} regularmente para mantenerla saludable.` : `Water your ${plant.type} regularly to keep it healthy.`\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 800,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 798,\n                        columnNumber: 27\n                      }, this), _jsxDEV(View, {\n                        style: styles.tipItem,\n                        children: [_jsxDEV(Feather, {\n                          name: \"sun\",\n                          size: 18,\n                          color: \"#FFA500\",\n                          style: styles.tipIcon\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 807,\n                          columnNumber: 29\n                        }, this), _jsxDEV(Text, {\n                          style: styles.tipItemText,\n                          children: language === 'es' ? 'Gana apuestas para obtener más agua para tu planta.' : 'Win bets to get more water for your plant.'\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 808,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 806,\n                        columnNumber: 27\n                      }, this), _jsxDEV(View, {\n                        style: styles.tipItem,\n                        children: [_jsxDEV(Feather, {\n                          name: \"clock\",\n                          size: 18,\n                          color: \"#9370DB\",\n                          style: styles.tipIcon\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 815,\n                          columnNumber: 29\n                        }, this), _jsxDEV(Text, {\n                          style: styles.tipItemText,\n                          children: language === 'es' ? 'Recoge agua gratis cada 24 horas.' : 'Collect free water every 24 hours.'\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 816,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 814,\n                        columnNumber: 27\n                      }, this), _jsxDEV(View, {\n                        style: styles.tipItem,\n                        children: [_jsxDEV(Feather, {\n                          name: \"alert-triangle\",\n                          size: 18,\n                          color: \"#FF6347\",\n                          style: styles.tipIcon\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 823,\n                          columnNumber: 29\n                        }, this), _jsxDEV(Text, {\n                          style: styles.tipItemText,\n                          children: language === 'es' ? 'Tu planta morirá si no la riegas durante 72 horas.' : 'Your plant will die if you don\\'t water it for 72 hours.'\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 824,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 822,\n                        columnNumber: 27\n                      }, this), _jsxDEV(View, {\n                        style: styles.tipItem,\n                        children: [_jsxDEV(Feather, {\n                          name: \"activity\",\n                          size: 18,\n                          color: \"#32CD32\",\n                          style: styles.tipIcon\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 831,\n                          columnNumber: 29\n                        }, this), _jsxDEV(Text, {\n                          style: styles.tipItemText,\n                          children: language === 'es' ? 'La salud de tu planta disminuye con el tiempo de inactividad.' : 'Your plant\\'s health decreases with inactivity time.'\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 832,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 830,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 797,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 793,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 698,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 682,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 681,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 675,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 437,\n    columnNumber: 5\n  }, this);\n};\nconst styles = StyleSheet.create({\n  safeArea: {\n    flex: 1\n  },\n  container: {\n    flex: 1,\n    padding: 16\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  loadingText: {\n    color: '#FFFFFF',\n    fontSize: 18,\n    marginTop: 16\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginTop: Platform.OS === 'ios' ? 0 : StatusBar.currentHeight\n  },\n  backButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: 8\n  },\n  backButtonText: {\n    color: '#FFFFFF',\n    marginLeft: 4,\n    fontSize: 16\n  },\n  clockContainer: {\n    backgroundColor: 'rgba(0, 0, 0, 0.3)',\n    paddingHorizontal: 12,\n    paddingVertical: 6,\n    borderRadius: 16\n  },\n  clockText: {\n    color: '#FFFFFF',\n    fontSize: 16\n  },\n  plantContainer: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: height * 0.3,\n    marginVertical: 20,\n    position: 'relative'\n  },\n  soil: {\n    position: 'absolute',\n    bottom: 0,\n    width: '100%',\n    height: 40,\n    borderTopLeftRadius: 100,\n    borderTopRightRadius: 100\n  },\n  plantWrapper: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    position: 'absolute',\n    bottom: 20\n  },\n  plantEmoji: {\n    fontSize: 100,\n    textAlign: 'center'\n  },\n  infoContainer: {\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    borderRadius: 16,\n    padding: 16,\n    marginBottom: 16\n  },\n  infoRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  plantName: {\n    color: '#FFFFFF',\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 4\n  },\n  editButton: {\n    padding: 8\n  },\n  plantType: {\n    color: '#FFFFFF',\n    fontSize: 18,\n    marginBottom: 8\n  },\n  plantStatus: {\n    color: '#FFFFFF',\n    fontSize: 16,\n    marginBottom: 12,\n    fontStyle: 'italic'\n  },\n  barContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 8\n  },\n  barLabel: {\n    color: '#FFFFFF',\n    width: 100,\n    fontSize: 16\n  },\n  progressBarBackground: {\n    flex: 1,\n    height: 12,\n    backgroundColor: 'rgba(255, 255, 255, 0.3)',\n    borderRadius: 6,\n    overflow: 'hidden'\n  },\n  progressBar: {\n    height: '100%',\n    borderRadius: 6\n  },\n  barValue: {\n    color: '#FFFFFF',\n    width: 60,\n    textAlign: 'right',\n    fontSize: 14\n  },\n  requirementText: {\n    color: '#FFFFFF',\n    fontSize: 14,\n    marginTop: 8\n  },\n  rewardsButton: {\n    backgroundColor: '#FFD700',\n    borderRadius: 8,\n    padding: 12,\n    alignItems: 'center',\n    marginTop: 12\n  },\n  rewardsButtonText: {\n    color: '#333333',\n    fontWeight: 'bold',\n    fontSize: 16\n  },\n  tipContainer: {\n    backgroundColor: 'rgba(255, 255, 255, 0.9)',\n    borderRadius: 12,\n    padding: 12,\n    marginBottom: 16,\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  tipIcon: {\n    fontSize: 24,\n    marginRight: 8\n  },\n  tipText: {\n    flex: 1,\n    color: '#333333',\n    fontSize: 14\n  },\n  tipChangeText: {\n    color: '#666666',\n    fontSize: 12,\n    fontStyle: 'italic'\n  },\n  errorContainer: {\n    backgroundColor: 'rgba(255, 0, 0, 0.8)',\n    borderRadius: 8,\n    padding: 12,\n    marginBottom: 16\n  },\n  errorText: {\n    color: '#FFFFFF',\n    textAlign: 'center'\n  },\n  successContainer: {\n    backgroundColor: 'rgba(50, 205, 50, 0.8)',\n    borderRadius: 8,\n    padding: 12,\n    marginBottom: 16\n  },\n  successText: {\n    color: '#FFFFFF',\n    textAlign: 'center'\n  },\n  buttonsContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginTop: 'auto'\n  },\n  actionButton: {\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    borderRadius: 12,\n    padding: 12,\n    alignItems: 'center',\n    flex: 1,\n    marginHorizontal: 4\n  },\n  waterButton: {\n    backgroundColor: 'rgba(70, 130, 180, 0.8)'\n  },\n  actionButtonText: {\n    color: '#FFFFFF',\n    marginTop: 4,\n    fontSize: 14\n  },\n  waterDrop: {\n    position: 'absolute',\n    top: height * 0.25,\n    alignSelf: 'center'\n  },\n  waterDropText: {\n    fontSize: 40\n  },\n  modalOverlay: {\n    flex: 1,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 16\n  },\n  modalContent: {\n    backgroundColor: '#FFFFFF',\n    borderRadius: 16,\n    width: '100%',\n    maxHeight: '80%',\n    padding: 16\n  },\n  modalHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 16\n  },\n  modalTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: '#333333'\n  },\n  closeButton: {\n    padding: 4\n  },\n  modalScrollView: {\n    maxHeight: '90%'\n  },\n  progressSection: {\n    marginBottom: 24\n  },\n  progressTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#333333',\n    marginBottom: 12\n  },\n  stageContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 12\n  },\n  stageEmoji: {\n    fontSize: 40,\n    marginRight: 12\n  },\n  stageName: {\n    fontSize: 18,\n    color: '#333333'\n  },\n  progressBarContainer: {\n    marginTop: 8\n  },\n  progressLabel: {\n    fontSize: 14,\n    color: '#666666',\n    marginBottom: 4\n  },\n  modalProgressBar: {\n    height: 16,\n    backgroundColor: '#E0E0E0',\n    borderRadius: 8,\n    overflow: 'hidden'\n  },\n  modalProgressFill: {\n    height: '100%',\n    backgroundColor: '#4682B4',\n    borderRadius: 8\n  },\n  progressValue: {\n    fontSize: 14,\n    color: '#666666',\n    marginTop: 4,\n    textAlign: 'right'\n  },\n  evolutionContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    marginBottom: 12\n  },\n  evolutionItem: {\n    alignItems: 'center',\n    flex: 1\n  },\n  evolutionEmoji: {\n    fontSize: 40,\n    marginBottom: 4\n  },\n  evolutionName: {\n    fontSize: 16,\n    color: '#333333',\n    textAlign: 'center'\n  },\n  statsRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  statItem: {\n    alignItems: 'center',\n    flex: 1\n  },\n  statValue: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#4682B4'\n  },\n  statLabel: {\n    fontSize: 14,\n    color: '#666666',\n    textAlign: 'center'\n  },\n  tipsList: {\n    marginTop: 8\n  },\n  tipItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 12\n  },\n  tipItemText: {\n    flex: 1,\n    fontSize: 14,\n    color: '#333333',\n    marginLeft: 8\n  }\n});\nexport default MeteoPlantScreen;","map":{"version":3,"names":["React","useState","useEffect","useRef","StyleSheet","View","Text","TouchableOpacity","Animated","Dimensions","Modal","ScrollView","SafeAreaView","Platform","StatusBar","ActivityIndicator","Alert","useNavigation","useApp","getPlant","initializePlant","updatePlantHealth","waterPlant","getPlantProgressPercentage","getPlantEvolutionPercentage","getPendingRewards","claimPendingRewards","savePlant","collectDailyFreeWater","getTimeUntilNextFreeWater","GradientBackground","Feather","jsxDEV","_jsxDEV","Fragment","_Fragment","width","height","get","MeteoPlantScreen","navigation","language","trackActivity","plant","setPlant","currentTime","setCurrentTime","Date","isLoading","setIsLoading","showProgressModal","setShowProgressModal","pendingRewards","setPendingRewards","isWatering","setIsWatering","potColor","setPotColor","showTip","setShowTip","currentTip","setCurrentTip","wateringError","setWateringError","showWateringError","setShowWateringError","freeWaterCollected","setFreeWaterCollected","plantAnimation","Value","current","waterAnimation","waterOpacity","plantTips","getHealthColor","health","getNextThreshold","type","stage","plantConfigs","Brote","Joven","Adulta","Florecida","getNextPlantType","currentType","evolutionOrder","currentIndex","indexOf","length","translateStage","translations","loadPlant","plantData","rewards","error","console","alert","timeInterval","setInterval","startPlantAnimation","clearInterval","loop","sequence","timing","toValue","duration","useNativeDriver","start","handleWater","waterAvailable","setTimeout","parallel","setValue","updatedPlant","success","handleClaimRewards","handleCollectFreeWater","collected","hoursLeft","formatTime","date","toLocaleTimeString","hour","minute","getBackgroundColors","getHours","getSoilColor","getPlantEmoji","plantEmojis","getWeatherEmoji","getPlantStatusText","changeTip","prev","colors","children","style","styles","loadingContainer","size","color","fileName","_jsxFileName","lineNumber","columnNumber","loadingText","barStyle","safeArea","container","header","backButton","onPress","goBack","name","backButtonText","clockContainer","clockText","plantContainer","soil","backgroundColor","plantWrapper","plantEmoji","transform","scale","translateY","interpolate","inputRange","outputRange","infoContainer","infoRow","plantName","editButton","newName","prompt","Object","assign","plantType","plantStatus","barContainer","barLabel","progressBarBackground","progressBar","barValue","waterAccumulated","Math","min","requirementText","waterRequirement","rewardsButton","rewardsButtonText","tipContainer","tipIcon","tipText","tipChangeText","errorContainer","errorText","successContainer","successText","buttonsContainer","actionButton","actionButtonText","waterButton","disabled","waterDrop","opacity","waterDropText","visible","transparent","animationType","onRequestClose","modalOverlay","modalContent","modalHeader","modalTitle","closeButton","modalScrollView","progressSection","progressTitle","stageContainer","stageEmoji","stageName","progressBarContainer","progressLabel","modalProgressBar","modalProgressFill","progressValue","evolutionContainer","evolutionItem","evolutionEmoji","evolutionName","evolutionThreshold","statsRow","statItem","statValue","statLabel","tipsList","tipItem","tipItemText","create","flex","padding","justifyContent","alignItems","fontSize","marginTop","flexDirection","OS","currentHeight","marginLeft","paddingHorizontal","paddingVertical","borderRadius","marginVertical","position","bottom","borderTopLeftRadius","borderTopRightRadius","textAlign","marginBottom","fontWeight","fontStyle","overflow","marginRight","marginHorizontal","top","alignSelf","maxHeight"],"sources":["/Users/atemjohnatem/Downloads/meteo-malaga/src/screens/MeteoPlantScreen.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport {\n  StyleSheet,\n  View,\n  Text,\n  TouchableOpacity,\n  Animated,\n  Dimensions,\n  Modal,\n  ScrollView,\n  SafeAreaView,\n  Platform,\n  StatusBar,\n  ActivityIndicator,\n  Alert\n} from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\nimport { NativeStackNavigationProp } from '@react-navigation/native-stack';\nimport { RootStackParamList } from '../types/navigation';\nimport { useApp } from '../context/AppContext';\nimport { Plant } from '../types/plant';\nimport {\n  getPlant,\n  initializePlant,\n  updatePlantHealth,\n  waterPlant,\n  getPlantProgressPercentage,\n  getPlantEvolutionPercentage,\n  getPendingRewards,\n  claimPendingRewards,\n  savePlant,\n  collectDailyFreeWater,\n  getTimeUntilNextFreeWater\n} from '../services/plantService';\nimport GradientBackground from '../components/GradientBackground';\nimport { Feather } from '@expo/vector-icons';\n\ntype MeteoPlantScreenNavigationProp = NativeStackNavigationProp<RootStackParamList, 'MeteoPlant'>;\nconst { width, height } = Dimensions.get('window');\n\nconst MeteoPlantScreen: React.FC = () => {\n  const navigation = useNavigation<MeteoPlantScreenNavigationProp>();\n  const { language, trackActivity } = useApp();\n  const [plant, setPlant] = useState<Plant | null>(null);\n  const [currentTime, setCurrentTime] = useState(new Date());\n  const [isLoading, setIsLoading] = useState(true);\n  const [showProgressModal, setShowProgressModal] = useState(false);\n  const [pendingRewards, setPendingRewards] = useState(0);\n  const [isWatering, setIsWatering] = useState(false);\n  const [potColor, setPotColor] = useState('default');\n  const [showTip, setShowTip] = useState(true);\n  const [currentTip, setCurrentTip] = useState(0);\n  const [wateringError, setWateringError] = useState('');\n  const [showWateringError, setShowWateringError] = useState(false);\n  const [freeWaterCollected, setFreeWaterCollected] = useState(false);\n\n  // Animation refs\n  const plantAnimation = useRef(new Animated.Value(1)).current;\n  const waterAnimation = useRef(new Animated.Value(0)).current;\n  const waterOpacity = useRef(new Animated.Value(0)).current;\n\n  // Eliminados todos los sonidos.\n\n  // Tips for plant care\n  const plantTips = [\n    language === 'es'\n      ? \"Gana apuestas de temperatura para obtener más agua para tu planta.\"\n      : \"Win temperature bets to get more water for your plant.\",\n    language === 'es'\n      ? \"Las plantas evolucionan más rápido cuando las riegas regularmente.\"\n      : \"Plants evolve faster when you water them regularly.\",\n    language === 'es'\n      ? \"Cada tipo de planta tiene diferentes necesidades de agua.\"\n      : \"Each plant type has different water requirements.\",\n    language === 'es'\n      ? \"Recoge 1 unidad de agua gratis cada día para mantener tu planta viva.\"\n      : \"Collect 1 free water unit each day to keep your plant alive.\",\n    language === 'es'\n      ? \"Si no riegas tu planta durante 72 horas, morirá.\"\n      : \"If you don't water your plant for 72 hours, it will die.\",\n    language === 'es'\n      ? \"La salud de tu planta disminuye con el tiempo de inactividad.\"\n      : \"Your plant's health decreases with inactivity time.\"\n  ];\n\n  // Helper functions moved inside the component\n  const getHealthColor = (health: number): string => {\n    if (health > 70) return '#32CD32';\n    if (health > 40) return '#FFA500';\n    return '#FF6347';\n  };\n\n  const getNextThreshold = (plant: Plant): number => {\n    const { type, stage } = plant;\n    const plantConfigs: Record<string, any> = {\n      'Cactus': { Brote: 11, Joven: 26, Adulta: 41, Florecida: 60 },\n      'Suculenta': { Brote: 11, Joven: 26, Adulta: 41, Florecida: 60 },\n      'Aloe': { Brote: 11, Joven: 26, Adulta: 41, Florecida: 60 },\n      'Lavanda': { Brote: 11, Joven: 26, Adulta: 41, Florecida: 60 },\n      'Jade': { Brote: 11, Joven: 26, Adulta: 41, Florecida: 60 },\n      'Girasol': { Brote: 21, Joven: 51, Adulta: 81, Florecida: 120 },\n      'Rosa': { Brote: 21, Joven: 51, Adulta: 81, Florecida: 120 },\n      'Orquídea': { Brote: 21, Joven: 51, Adulta: 81, Florecida: 120 },\n      'Monstera': { Brote: 21, Joven: 51, Adulta: 81, Florecida: 120 },\n      'Hibisco': { Brote: 21, Joven: 51, Adulta: 81, Florecida: 120 },\n      'Bambú': { Brote: 31, Joven: 81, Adulta: 151, Florecida: 250 },\n      'Helecho': { Brote: 31, Joven: 81, Adulta: 151, Florecida: 250 }\n    };\n    if (stage === 'Brote') {\n      return plantConfigs[type].Brote;\n    } else if (stage === 'Joven') {\n      return plantConfigs[type].Joven;\n    } else if (stage === 'Adulta') {\n      return plantConfigs[type].Adulta;\n    } else {\n      return plantConfigs[type].Florecida;\n    }\n  };\n\n  const getNextPlantType = (currentType: string): string | null => {\n    const evolutionOrder = [\n      'Cactus', 'Suculenta', 'Aloe', 'Lavanda', 'Jade',\n      'Girasol', 'Rosa', 'Orquídea', 'Monstera', 'Hibisco',\n      'Bambú', 'Helecho'\n    ];\n    const currentIndex = evolutionOrder.indexOf(currentType);\n    if (currentIndex === -1 || currentIndex === evolutionOrder.length - 1) {\n      return null;\n    }\n    return evolutionOrder[currentIndex + 1];\n  };\n\n  const translateStage = (stage: string): string => {\n    const translations: Record<string, string> = {\n      'Brote': 'Sprout',\n      'Joven': 'Young',\n      'Adulta': 'Adult',\n      'Florecida': 'Flowering'\n    };\n    return translations[stage] || stage;\n  };\n\n  // Load plant data (sin sonidos)\n  useEffect(() => {\n    const loadPlant = async () => {\n      setIsLoading(true);\n      try {\n        // Track activity when loading plant\n        await trackActivity();\n        \n        let plantData = await getPlant();\n        if (!plantData) {\n          plantData = await initializePlant();\n        }\n        plantData = await updatePlantHealth() || plantData;\n        const rewards = await getPendingRewards();\n        setPendingRewards(rewards);\n        setPlant(plantData);\n      } catch (error) {\n        console.error('Error loading plant:', error);\n        Alert.alert(\n          language === 'es' ? 'Error' : 'Error',\n          language === 'es'\n            ? 'Hubo un problema al cargar tu planta. Por favor, inténtalo de nuevo.'\n            : 'There was a problem loading your plant. Please try again.'\n        );\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    loadPlant();\n    const timeInterval = setInterval(() => {\n      setCurrentTime(new Date());\n    }, 60000);\n    startPlantAnimation();\n    return () => {\n      clearInterval(timeInterval);\n    };\n  }, []);\n\n  // Start gentle swaying animation for plant\n  const startPlantAnimation = () => {\n    Animated.loop(\n      Animated.sequence([\n        Animated.timing(plantAnimation, {\n          toValue: 1.1,\n          duration: 2000,\n          useNativeDriver: true,\n        }),\n        Animated.timing(plantAnimation, {\n          toValue: 0.9,\n          duration: 2000,\n          useNativeDriver: true,\n        }),\n        Animated.timing(plantAnimation, {\n          toValue: 1,\n          duration: 2000,\n          useNativeDriver: true,\n        }),\n      ])\n    ).start();\n  };\n\n  // Handle watering animation (sin sonido)\n  const handleWater = async () => {\n    if (isWatering || !plant) return;\n    \n    // Track activity when watering plant\n    await trackActivity();\n    \n    // Check if user has enough water available\n    if (plant.waterAvailable < 1) {\n      setWateringError(language === 'es' \n        ? 'No tienes suficiente agua disponible. Gana apuestas o recoge agua gratis diaria.'\n        : 'You don\\'t have enough water available. Win bets or collect daily free water.');\n      setShowWateringError(true);\n      setTimeout(() => setShowWateringError(false), 3000);\n      return;\n    }\n    \n    setIsWatering(true);\n    Animated.sequence([\n      Animated.parallel([\n        Animated.timing(waterOpacity, {\n          toValue: 1,\n          duration: 300,\n          useNativeDriver: true,\n        }),\n        Animated.timing(waterAnimation, {\n          toValue: 1,\n          duration: 1500,\n          useNativeDriver: true,\n        }),\n      ]),\n      Animated.timing(waterOpacity, {\n        toValue: 0,\n        duration: 500,\n        useNativeDriver: true,\n      }),\n    ]).start(async () => {\n      waterAnimation.setValue(0);\n      const { plant: updatedPlant, success } = await waterPlant(1);\n      if (updatedPlant && success) {\n        setPlant(updatedPlant);\n      } else if (updatedPlant && !success) {\n        setWateringError(language === 'es' \n          ? 'No tienes suficiente agua disponible. Gana apuestas o recoge agua gratis diaria.'\n          : 'You don\\'t have enough water available. Win bets or collect daily free water.');\n        setShowWateringError(true);\n        setTimeout(() => setShowWateringError(false), 3000);\n      }\n      setIsWatering(false);\n    });\n  };\n\n  // Handle claiming rewards\n  const handleClaimRewards = async () => {\n    if (pendingRewards <= 0) return;\n    \n    // Track activity when claiming rewards\n    await trackActivity();\n    \n    try {\n      const updatedPlant = await claimPendingRewards();\n      if (updatedPlant) {\n        setPlant(updatedPlant);\n        setPendingRewards(0);\n      }\n    } catch (error) {\n      console.error('Error claiming rewards:', error);\n    }\n  };\n  \n  // Handle collecting daily free water\n  const handleCollectFreeWater = async () => {\n    // Track activity when collecting free water\n    await trackActivity();\n    \n    try {\n      const { plant: updatedPlant, collected } = await collectDailyFreeWater();\n      if (updatedPlant) {\n        setPlant(updatedPlant);\n        if (collected) {\n          setFreeWaterCollected(true);\n          setTimeout(() => setFreeWaterCollected(false), 3000);\n        } else {\n          const hoursLeft = getTimeUntilNextFreeWater(updatedPlant);\n          Alert.alert(\n            language === 'es' ? 'Agua Gratis No Disponible' : 'Free Water Not Available',\n            language === 'es'\n              ? `Ya has recogido tu agua gratis hoy. Vuelve en ${hoursLeft} horas.`\n              : `You've already collected your free water today. Come back in ${hoursLeft} hours.`\n          );\n        }\n      }\n    } catch (error) {\n      console.error('Error collecting free water:', error);\n    }\n  };\n\n  const formatTime = (date: Date): string => {\n    return date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n  };\n\n  const getBackgroundColors = (): string[] => {\n    const hour = currentTime.getHours();\n    if (hour >= 6 && hour < 10) {\n      return ['#FFB347', '#FFD700', '#87CEFA'];\n    } else if (hour >= 10 && hour < 17) {\n      return ['#87CEFA', '#4682B4', '#1E3A8A'];\n    } else if (hour >= 17 && hour < 20) {\n      return ['#FF7F50', '#FF6347', '#4B0082'];\n    } else {\n      return ['#191970', '#483D8B', '#000033'];\n    }\n  };\n\n  const getSoilColor = (): string => {\n    if (!plant) return '#8B4513';\n    return plant.health > 50 ? '#5C4033' : '#D2B48C';\n  };\n\n  // Emoticonos para la planta según su tipo y etapa\n  const getPlantEmoji = (plant: Plant): string => {\n    if (plant.stage === 'Brote') {\n      return '🌱';\n    }\n    const plantEmojis: Record<string, Record<string, string>> = {\n      'Cactus': {\n        'Joven': '🌵',\n        'Adulta': '🌵',\n        'Florecida': '🌵'\n      },\n      'Suculenta': {\n        'Joven': '🪴',\n        'Adulta': '🪴',\n        'Florecida': '🪴'\n      },\n      'Aloe': {\n        'Joven': '🌿',\n        'Adulta': '🌿',\n        'Florecida': '🌿'\n      },\n      'Lavanda': {\n        'Joven': '🌱',\n        'Adulta': '💐',\n        'Florecida': '💐'\n      },\n      'Jade': {\n        'Joven': '🌱',\n        'Adulta': '🌿',\n        'Florecida': '🌿'\n      },\n      'Girasol': {\n        'Joven': '🌱',\n        'Adulta': '🌻',\n        'Florecida': '🌻'\n      },\n      'Rosa': {\n        'Joven': '🌱',\n        'Adulta': '🌹',\n        'Florecida': '🌹'\n      },\n      'Orquídea': {\n        'Joven': '🌱',\n        'Adulta': '🌸',\n        'Florecida': '🌸'\n      },\n      'Monstera': {\n        'Joven': '🌱',\n        'Adulta': '🌿',\n        'Florecida': '🌿'\n      },\n      'Hibisco': {\n        'Joven': '🌱',\n        'Adulta': '🌺',\n        'Florecida': '🌺'\n      },\n      'Bambú': {\n        'Joven': '🌱',\n        'Adulta': '🎋',\n        'Florecida': '🎋'\n      },\n      'Helecho': {\n        'Joven': '🌱',\n        'Adulta': '🌿',\n        'Florecida': '🌿'\n      }\n    };\n    return plantEmojis[plant.type]?.[plant.stage] || '🌱';\n  };\n\n  const getWeatherEmoji = (): string => {\n    const hour = currentTime.getHours();\n    if (hour >= 6 && hour < 10) {\n      return '🌅';\n    } else if (hour >= 10 && hour < 17) {\n      return '☀️';\n    } else if (hour >= 17 && hour < 20) {\n      return '🌇';\n    } else {\n      return '🌙';\n    }\n  };\n\n  const getPlantStatusText = (): string => {\n    if (!plant) return '';\n    if (plant.health < 30) {\n      return language === 'es' ? '¡Necesita agua urgentemente!' : 'Needs water urgently!';\n    } else if (plant.health < 60) {\n      return language === 'es' ? 'Podría usar más agua' : 'Could use more water';\n    } else {\n      return language === 'es' ? 'Saludable y feliz' : 'Healthy and happy';\n    }\n  };\n\n  const changeTip = () => {\n    // Track activity when changing tip\n    trackActivity();\n    setCurrentTip((prev) => (prev + 1) % plantTips.length);\n  };\n\n  if (isLoading) {\n    return (\n      <GradientBackground colors={getBackgroundColors()}>\n        <View style={styles.loadingContainer}>\n          <ActivityIndicator size=\"large\" color=\"#FFFFFF\" />\n          <Text style={styles.loadingText}>\n            {language === 'es' ? 'Cargando tu planta...' : 'Loading your plant...'}\n          </Text>\n        </View>\n      </GradientBackground>\n    );\n  }\n\n  return (\n    <GradientBackground colors={getBackgroundColors()}>\n      <StatusBar barStyle=\"light-content\" />\n      <SafeAreaView style={styles.safeArea}>\n        <View style={styles.container}>\n          {/* Header */}\n          <View style={styles.header}>\n            <TouchableOpacity\n              style={styles.backButton}\n              onPress={() => {\n                trackActivity(); // Track activity when navigating back\n                navigation.goBack();\n              }}\n            >\n              <Feather name=\"arrow-left\" size={24} color=\"#FFFFFF\" />\n              <Text style={styles.backButtonText}>\n                {language === 'es' ? 'Volver' : 'Back'}\n              </Text>\n            </TouchableOpacity>\n            <View style={styles.clockContainer}>\n              <Text style={styles.clockText}>{getWeatherEmoji()} {formatTime(currentTime)}</Text>\n            </View>\n          </View>\n          \n          {/* Área de la planta - Solo un emoji animado */}\n          <View style={styles.plantContainer}>\n            <View style={[styles.soil, { backgroundColor: getSoilColor() }]} />\n            {plant && (\n              <View style={styles.plantWrapper}>\n                <Animated.Text \n                  style={[\n                    styles.plantEmoji,\n                    {\n                      transform: [\n                        { scale: plantAnimation },\n                        { translateY: plantAnimation.interpolate({\n                          inputRange: [0.9, 1, 1.1],\n                          outputRange: [5, 0, -5]\n                        }) }\n                      ]\n                    }\n                  ]}\n                >\n                  {getPlantEmoji(plant)}\n                </Animated.Text>\n              </View>\n            )}\n          </View>\n          \n          {/* Información de la planta */}\n          {plant && (\n            <View style={styles.infoContainer}>\n              <View style={styles.infoRow}>\n                <Text style={styles.plantName}>{plant.name}</Text>\n                <TouchableOpacity\n                  style={styles.editButton}\n                  onPress={async () => {\n                    // Track activity when editing plant name\n                    await trackActivity();\n                    \n                    const newName = prompt(\n                      language === 'es'\n                        ? 'Introduce un nuevo nombre para tu planta:'\n                        : 'Enter a new name for your plant:',\n                      plant.name\n                    );\n                    if (newName) {\n                      const updatedPlant = { ...plant, name: newName };\n                      setPlant(updatedPlant);\n                      savePlant(updatedPlant);\n                    }\n                  }}\n                >\n                  <Feather name=\"edit-2\" size={16} color=\"#FFFFFF\" />\n                </TouchableOpacity>\n              </View>\n              <Text style={styles.plantType}>\n                {plant.type} - {language === 'es' ? plant.stage : translateStage(plant.stage)}\n              </Text>\n              <Text style={styles.plantStatus}>{getPlantStatusText()}</Text>\n              <View style={styles.barContainer}>\n                <Text style={styles.barLabel}>\n                  {language === 'es' ? '❤️ Salud:' : '❤️ Health:'}\n                </Text>\n                <View style={styles.progressBarBackground}>\n                  <View\n                    style={[\n                      styles.progressBar,\n                      { width: `${plant.health}%`, backgroundColor: getHealthColor(plant.health) }\n                    ]}\n                  />\n                </View>\n                <Text style={styles.barValue}>{plant.health}%</Text>\n              </View>\n              <View style={styles.barContainer}>\n                <Text style={styles.barLabel}>\n                  {language === 'es' ? '💧 Agua:' : '💧 Water:'}\n                </Text>\n                <View style={styles.progressBarBackground}>\n                  <View\n                    style={[\n                      styles.progressBar,\n                      { width: `${getPlantProgressPercentage(plant)}%`, backgroundColor: '#ADD8E6' }\n                    ]}\n                  />\n                </View>\n                <Text style={styles.barValue}>\n                  {plant.waterAccumulated}/{getNextThreshold(plant)}\n                </Text>\n              </View>\n              <View style={styles.barContainer}>\n                <Text style={styles.barLabel}>\n                  {language === 'es' ? '🚿 Disponible:' : '🚿 Available:'}\n                </Text>\n                <View style={styles.progressBarBackground}>\n                  <View\n                    style={[\n                      styles.progressBar,\n                      { \n                        width: `${Math.min(100, (plant.waterAvailable / 20) * 100)}%`, \n                        backgroundColor: '#87CEEB' \n                      }\n                    ]}\n                  />\n                </View>\n                <Text style={styles.barValue}>\n                  {plant.waterAvailable}\n                </Text>\n              </View>\n              <Text style={styles.requirementText}>\n                {language === 'es'\n                  ? `📅 Necesidad diaria: ${plant.waterRequirement} unidades de agua`\n                  : `📅 Daily requirement: ${plant.waterRequirement} water units`}\n              </Text>\n              {pendingRewards > 0 && (\n                <TouchableOpacity\n                  style={styles.rewardsButton}\n                  onPress={handleClaimRewards}\n                >\n                  <Text style={styles.rewardsButtonText}>\n                    {language === 'es'\n                      ? `🎁 ¡Reclama ${pendingRewards} unidades de agua!`\n                      : `🎁 Claim ${pendingRewards} water units!`}\n                  </Text>\n                </TouchableOpacity>\n              )}\n            </View>\n          )}\n          \n          {/* Banner de consejo */}\n          <TouchableOpacity \n            style={styles.tipContainer}\n            onPress={changeTip}\n          >\n            <Text style={styles.tipIcon}>💡</Text>\n            <Text style={styles.tipText}>{plantTips[currentTip]}</Text>\n            <Text style={styles.tipChangeText}>\n              {language === 'es' ? 'Toca para cambiar' : 'Tap to change'}\n            </Text>\n          </TouchableOpacity>\n          \n          {/* Error message for watering */}\n          {showWateringError && (\n            <View style={styles.errorContainer}>\n              <Text style={styles.errorText}>{wateringError}</Text>\n            </View>\n          )}\n          \n          {/* Success message for free water collection */}\n          {freeWaterCollected && (\n            <View style={styles.successContainer}>\n              <Text style={styles.successText}>\n                {language === 'es'\n                  ? '¡Has recogido 1 unidad de agua gratis!'\n                  : 'You collected 1 free water unit!'}\n              </Text>\n            </View>\n          )}\n          \n          {/* Botones de acción */}\n          <View style={styles.buttonsContainer}>\n            <TouchableOpacity\n              style={styles.actionButton}\n              onPress={handleCollectFreeWater}\n            >\n              <Feather name=\"droplet\" size={24} color=\"#FFFFFF\" />\n              <Text style={styles.actionButtonText}>\n                {language === 'es' ? 'Agua Gratis' : 'Free Water'}\n              </Text>\n            </TouchableOpacity>\n            \n            <TouchableOpacity\n              style={[styles.actionButton, styles.waterButton]}\n              onPress={handleWater}\n              disabled={isWatering}\n            >\n              <Feather name=\"cloud-rain\" size={24} color=\"#FFFFFF\" />\n              <Text style={styles.actionButtonText}>\n                {language === 'es' ? 'Regar (1 💧)' : 'Water (1 💧)'}\n              </Text>\n            </TouchableOpacity>\n            \n            <TouchableOpacity\n              style={styles.actionButton}\n              onPress={() => {\n                trackActivity(); // Track activity when viewing progress\n                setShowProgressModal(true);\n              }}\n            >\n              <Feather name=\"bar-chart-2\" size={24} color=\"#FFFFFF\" />\n              <Text style={styles.actionButtonText}>\n                {language === 'es' ? 'Progreso' : 'Progress'}\n              </Text>\n            </TouchableOpacity>\n          </View>\n          \n          {/* Animación de agua */}\n          {isWatering && (\n            <Animated.View\n              style={[\n                styles.waterDrop,\n                {\n                  opacity: waterOpacity,\n                  transform: [\n                    {\n                      translateY: waterAnimation.interpolate({\n                        inputRange: [0, 1],\n                        outputRange: [0, 200]\n                      })\n                    }\n                  ]\n                }\n              ]}\n            >\n              <Text style={styles.waterDropText}>💧</Text>\n            </Animated.View>\n          )}\n          \n          {/* Modal de progreso */}\n          <Modal\n            visible={showProgressModal}\n            transparent={true}\n            animationType=\"fade\"\n            onRequestClose={() => setShowProgressModal(false)}\n          >\n            <View style={styles.modalOverlay}>\n              <View style={styles.modalContent}>\n                <View style={styles.modalHeader}>\n                  <Text style={styles.modalTitle}>\n                    {language === 'es' ? 'Progreso de la Planta' : 'Plant Progress'}\n                  </Text>\n                  <TouchableOpacity\n                    style={styles.closeButton}\n                    onPress={() => {\n                      trackActivity(); // Track activity when closing modal\n                      setShowProgressModal(false);\n                    }}\n                  >\n                    <Feather name=\"x\" size={24} color=\"#333333\" />\n                  </TouchableOpacity>\n                </View>\n                \n                <ScrollView style={styles.modalScrollView}>\n                  {plant && (\n                    <>\n                      <View style={styles.progressSection}>\n                        <Text style={styles.progressTitle}>\n                          {language === 'es' ? 'Etapa Actual' : 'Current Stage'}\n                        </Text>\n                        <View style={styles.stageContainer}>\n                          <Text style={styles.stageEmoji}>{getPlantEmoji(plant)}</Text>\n                          <Text style={styles.stageName}>\n                            {language === 'es' ? plant.stage : translateStage(plant.stage)}\n                          </Text>\n                        </View>\n                        <View style={styles.progressBarContainer}>\n                          <Text style={styles.progressLabel}>\n                            {language === 'es' ? 'Progreso de etapa:' : 'Stage progress:'}\n                          </Text>\n                          <View style={styles.modalProgressBar}>\n                            <View\n                              style={[\n                                styles.modalProgressFill,\n                                { width: `${getPlantProgressPercentage(plant)}%` }\n                              ]}\n                            />\n                          </View>\n                          <Text style={styles.progressValue}>\n                            {plant.waterAccumulated}/{getNextThreshold(plant)} 💧\n                          </Text>\n                        </View>\n                      </View>\n                      \n                      <View style={styles.progressSection}>\n                        <Text style={styles.progressTitle}>\n                          {language === 'es' ? 'Evolución' : 'Evolution'}\n                        </Text>\n                        <View style={styles.evolutionContainer}>\n                          <View style={styles.evolutionItem}>\n                            <Text style={styles.evolutionEmoji}>{getPlantEmoji(plant)}</Text>\n                            <Text style={styles.evolutionName}>{plant.type}</Text>\n                          </View>\n                          <Feather name=\"arrow-right\" size={24} color=\"#666666\" />\n                          <View style={styles.evolutionItem}>\n                            <Text style={styles.evolutionEmoji}>\n                              {getNextPlantType(plant.type) ? '❓' : '🏆'}\n                            </Text>\n                            <Text style={styles.evolutionName}>\n                              {getNextPlantType(plant.type) || \n                                (language === 'es' ? 'Planta Final' : 'Final Plant')}\n                            </Text>\n                          </View>\n                        </View>\n                        <View style={styles.progressBarContainer}>\n                          <Text style={styles.progressLabel}>\n                            {language === 'es' ? 'Progreso de evolución:' : 'Evolution progress:'}\n                          </Text>\n                          <View style={styles.modalProgressBar}>\n                            <View\n                              style={[\n                                styles.modalProgressFill,\n                                { width: `${getPlantEvolutionPercentage(plant)}%` }\n                              ]}\n                            />\n                          </View>\n                          <Text style={styles.progressValue}>\n                            {plant.waterAccumulated}/{plant.evolutionThreshold} 💧\n                          </Text>\n                        </View>\n                      </View>\n                      \n                      <View style={styles.progressSection}>\n                        <Text style={styles.progressTitle}>\n                          {language === 'es' ? 'Estadísticas' : 'Statistics'}\n                        </Text>\n                        <View style={styles.statsRow}>\n                          <View style={styles.statItem}>\n                            <Text style={styles.statValue}>{plant.waterRequirement}</Text>\n                            <Text style={styles.statLabel}>\n                              {language === 'es' ? 'Necesidad Diaria' : 'Daily Need'}\n                            </Text>\n                          </View>\n                          <View style={styles.statItem}>\n                            <Text style={styles.statValue}>{plant.waterAvailable}</Text>\n                            <Text style={styles.statLabel}>\n                              {language === 'es' ? 'Agua Disponible' : 'Available Water'}\n                            </Text>\n                          </View>\n                          <View style={styles.statItem}>\n                            <Text style={styles.statValue}>{plant.health}%</Text>\n                            <Text style={styles.statLabel}>\n                              {language === 'es' ? 'Salud' : 'Health'}\n                            </Text>\n                          </View>\n                        </View>\n                      </View>\n                      \n                      <View style={styles.progressSection}>\n                        <Text style={styles.progressTitle}>\n                          {language === 'es' ? 'Consejos de Cuidado' : 'Care Tips'}\n                        </Text>\n                        <View style={styles.tipsList}>\n                          <View style={styles.tipItem}>\n                            <Feather name=\"droplet\" size={18} color=\"#4682B4\" style={styles.tipIcon} />\n                            <Text style={styles.tipItemText}>\n                              {language === 'es'\n                                ? `Riega tu ${plant.type} regularmente para mantenerla saludable.`\n                                : `Water your ${plant.type} regularly to keep it healthy.`}\n                            </Text>\n                          </View>\n                          <View style={styles.tipItem}>\n                            <Feather name=\"sun\" size={18} color=\"#FFA500\" style={styles.tipIcon} />\n                            <Text style={styles.tipItemText}>\n                              {language === 'es'\n                                ? 'Gana apuestas para obtener más agua para tu planta.'\n                                : 'Win bets to get more water for your plant.'}\n                            </Text>\n                          </View>\n                          <View style={styles.tipItem}>\n                            <Feather name=\"clock\" size={18} color=\"#9370DB\" style={styles.tipIcon} />\n                            <Text style={styles.tipItemText}>\n                              {language === 'es'\n                                ? 'Recoge agua gratis cada 24 horas.'\n                                : 'Collect free water every 24 hours.'}\n                            </Text>\n                          </View>\n                          <View style={styles.tipItem}>\n                            <Feather name=\"alert-triangle\" size={18} color=\"#FF6347\" style={styles.tipIcon} />\n                            <Text style={styles.tipItemText}>\n                              {language === 'es'\n                                ? 'Tu planta morirá si no la riegas durante 72 horas.'\n                                : 'Your plant will die if you don\\'t water it for 72 hours.'}\n                            </Text>\n                          </View>\n                          <View style={styles.tipItem}>\n                            <Feather name=\"activity\" size={18} color=\"#32CD32\" style={styles.tipIcon} />\n                            <Text style={styles.tipItemText}>\n                              {language === 'es'\n                                ? 'La salud de tu planta disminuye con el tiempo de inactividad.'\n                                : 'Your plant\\'s health decreases with inactivity time.'}\n                            </Text>\n                          </View>\n                        </View>\n                      </View>\n                    </>\n                  )}\n                </ScrollView>\n              </View>\n            </View>\n          </Modal>\n        </View>\n      </SafeAreaView>\n    </GradientBackground>\n  );\n};\n\nconst styles = StyleSheet.create({\n  safeArea: {\n    flex: 1,\n  },\n  container: {\n    flex: 1,\n    padding: 16,\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  loadingText: {\n    color: '#FFFFFF',\n    fontSize: 18,\n    marginTop: 16,\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginTop: Platform.OS === 'ios' ? 0 : StatusBar.currentHeight,\n  },\n  backButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: 8,\n  },\n  backButtonText: {\n    color: '#FFFFFF',\n    marginLeft: 4,\n    fontSize: 16,\n  },\n  clockContainer: {\n    backgroundColor: 'rgba(0, 0, 0, 0.3)',\n    paddingHorizontal: 12,\n    paddingVertical: 6,\n    borderRadius: 16,\n  },\n  clockText: {\n    color: '#FFFFFF',\n    fontSize: 16,\n  },\n  plantContainer: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: height * 0.3,\n    marginVertical: 20,\n    position: 'relative',\n  },\n  soil: {\n    position: 'absolute',\n    bottom: 0,\n    width: '100%',\n    height: 40,\n    borderTopLeftRadius: 100,\n    borderTopRightRadius: 100,\n  },\n  plantWrapper: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    position: 'absolute',\n    bottom: 20,\n  },\n  plantEmoji: {\n    fontSize: 100,\n    textAlign: 'center',\n  },\n  infoContainer: {\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    borderRadius: 16,\n    padding: 16,\n    marginBottom: 16,\n  },\n  infoRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  plantName: {\n    color: '#FFFFFF',\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 4,\n  },\n  editButton: {\n    padding: 8,\n  },\n  plantType: {\n    color: '#FFFFFF',\n    fontSize: 18,\n    marginBottom: 8,\n  },\n  plantStatus: {\n    color: '#FFFFFF',\n    fontSize: 16,\n    marginBottom: 12,\n    fontStyle: 'italic',\n  },\n  barContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 8,\n  },\n  barLabel: {\n    color: '#FFFFFF',\n    width: 100,\n    fontSize: 16,\n  },\n  progressBarBackground: {\n    flex: 1,\n    height: 12,\n    backgroundColor: 'rgba(255, 255, 255, 0.3)',\n    borderRadius: 6,\n    overflow: 'hidden',\n  },\n  progressBar: {\n    height: '100%',\n    borderRadius: 6,\n  },\n  barValue: {\n    color: '#FFFFFF',\n    width: 60,\n    textAlign: 'right',\n    fontSize: 14,\n  },\n  requirementText: {\n    color: '#FFFFFF',\n    fontSize: 14,\n    marginTop: 8,\n  },\n  rewardsButton: {\n    backgroundColor: '#FFD700',\n    borderRadius: 8,\n    padding: 12,\n    alignItems: 'center',\n    marginTop: 12,\n  },\n  rewardsButtonText: {\n    color: '#333333',\n    fontWeight: 'bold',\n    fontSize: 16,\n  },\n  tipContainer: {\n    backgroundColor: 'rgba(255, 255, 255, 0.9)',\n    borderRadius: 12,\n    padding: 12,\n    marginBottom: 16,\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  tipIcon: {\n    fontSize: 24,\n    marginRight: 8,\n  },\n  tipText: {\n    flex: 1,\n    color: '#333333',\n    fontSize: 14,\n  },\n  tipChangeText: {\n    color: '#666666',\n    fontSize: 12,\n    fontStyle: 'italic',\n  },\n  errorContainer: {\n    backgroundColor: 'rgba(255, 0, 0, 0.8)',\n    borderRadius: 8,\n    padding: 12,\n    marginBottom: 16,\n  },\n  errorText: {\n    color: '#FFFFFF',\n    textAlign: 'center',\n  },\n  successContainer: {\n    backgroundColor: 'rgba(50, 205, 50, 0.8)',\n    borderRadius: 8,\n    padding: 12,\n    marginBottom: 16,\n  },\n  successText: {\n    color: '#FFFFFF',\n    textAlign: 'center',\n  },\n  buttonsContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginTop: 'auto',\n  },\n  actionButton: {\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    borderRadius: 12,\n    padding: 12,\n    alignItems: 'center',\n    flex: 1,\n    marginHorizontal: 4,\n  },\n  waterButton: {\n    backgroundColor: 'rgba(70, 130, 180, 0.8)',\n  },\n  actionButtonText: {\n    color: '#FFFFFF',\n    marginTop: 4,\n    fontSize: 14,\n  },\n  waterDrop: {\n    position: 'absolute',\n    top: height * 0.25,\n    alignSelf: 'center',\n  },\n  waterDropText: {\n    fontSize: 40,\n  },\n  modalOverlay: {\n    flex: 1,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 16,\n  },\n  modalContent: {\n    backgroundColor: '#FFFFFF',\n    borderRadius: 16,\n    width: '100%',\n    maxHeight: '80%',\n    padding: 16,\n  },\n  modalHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 16,\n  },\n  modalTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: '#333333',\n  },\n  closeButton: {\n    padding: 4,\n  },\n  modalScrollView: {\n    maxHeight: '90%',\n  },\n  progressSection: {\n    marginBottom: 24,\n  },\n  progressTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#333333',\n    marginBottom: 12,\n  },\n  stageContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 12,\n  },\n  stageEmoji: {\n    fontSize: 40,\n    marginRight: 12,\n  },\n  stageName: {\n    fontSize: 18,\n    color: '#333333',\n  },\n  progressBarContainer: {\n    marginTop: 8,\n  },\n  progressLabel: {\n    fontSize: 14,\n    color: '#666666',\n    marginBottom: 4,\n  },\n  modalProgressBar: {\n    height: 16,\n    backgroundColor: '#E0E0E0',\n    borderRadius: 8,\n    overflow: 'hidden',\n  },\n  modalProgressFill: {\n    height: '100%',\n    backgroundColor: '#4682B4',\n    borderRadius: 8,\n  },\n  progressValue: {\n    fontSize: 14,\n    color: '#666666',\n    marginTop: 4,\n    textAlign: 'right',\n  },\n  evolutionContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    marginBottom: 12,\n  },\n  evolutionItem: {\n    alignItems: 'center',\n    flex: 1,\n  },\n  evolutionEmoji: {\n    fontSize: 40,\n    marginBottom: 4,\n  },\n  evolutionName: {\n    fontSize: 16,\n    color: '#333333',\n    textAlign: 'center',\n  },\n  statsRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  statItem: {\n    alignItems: 'center',\n    flex: 1,\n  },\n  statValue: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#4682B4',\n  },\n  statLabel: {\n    fontSize: 14,\n    color: '#666666',\n    textAlign: 'center',\n  },\n  tipsList: {\n    marginTop: 8,\n  },\n  tipItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 12,\n  },\n  tipItemText: {\n    flex: 1,\n    fontSize: 14,\n    color: '#333333',\n    marginLeft: 8,\n  },\n});\n\nexport default MeteoPlantScreen;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,YAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,iBAAA;AAAA,OAAAC,KAAA;AAgB3D,SAASC,aAAa;AAGtB,SAASC,MAAM;AAEf,SACEC,QAAQ,EACRC,eAAe,EACfC,iBAAiB,EACjBC,UAAU,EACVC,0BAA0B,EAC1BC,2BAA2B,EAC3BC,iBAAiB,EACjBC,mBAAmB,EACnBC,SAAS,EACTC,qBAAqB,EACrBC,yBAAyB;AAE3B,OAAOC,kBAAkB;AACzB,SAASC,OAAO,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAG7C,MAAM;EAAEC,KAAK;EAAEC;AAAO,CAAC,GAAG5B,UAAU,CAAC6B,GAAG,CAAC,QAAQ,CAAC;AAElD,MAAMC,gBAA0B,GAAGA,CAAA,KAAM;EACvC,MAAMC,UAAU,GAAGvB,aAAa,CAAiC,CAAC;EAClE,MAAM;IAAEwB,QAAQ;IAAEC;EAAc,CAAC,GAAGxB,MAAM,CAAC,CAAC;EAC5C,MAAM,CAACyB,KAAK,EAAEC,QAAQ,CAAC,GAAG3C,QAAQ,CAAe,IAAI,CAAC;EACtD,MAAM,CAAC4C,WAAW,EAAEC,cAAc,CAAC,GAAG7C,QAAQ,CAAC,IAAI8C,IAAI,CAAC,CAAC,CAAC;EAC1D,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGhD,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACiD,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGlD,QAAQ,CAAC,KAAK,CAAC;EACjE,MAAM,CAACmD,cAAc,EAAEC,iBAAiB,CAAC,GAAGpD,QAAQ,CAAC,CAAC,CAAC;EACvD,MAAM,CAACqD,UAAU,EAAEC,aAAa,CAAC,GAAGtD,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACuD,QAAQ,EAAEC,WAAW,CAAC,GAAGxD,QAAQ,CAAC,SAAS,CAAC;EACnD,MAAM,CAACyD,OAAO,EAAEC,UAAU,CAAC,GAAG1D,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAAC2D,UAAU,EAAEC,aAAa,CAAC,GAAG5D,QAAQ,CAAC,CAAC,CAAC;EAC/C,MAAM,CAAC6D,aAAa,EAAEC,gBAAgB,CAAC,GAAG9D,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAAC+D,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGhE,QAAQ,CAAC,KAAK,CAAC;EACjE,MAAM,CAACiE,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGlE,QAAQ,CAAC,KAAK,CAAC;EAGnE,MAAMmE,cAAc,GAAGjE,MAAM,CAAC,IAAIK,QAAQ,CAAC6D,KAAK,CAAC,CAAC,CAAC,CAAC,CAACC,OAAO;EAC5D,MAAMC,cAAc,GAAGpE,MAAM,CAAC,IAAIK,QAAQ,CAAC6D,KAAK,CAAC,CAAC,CAAC,CAAC,CAACC,OAAO;EAC5D,MAAME,YAAY,GAAGrE,MAAM,CAAC,IAAIK,QAAQ,CAAC6D,KAAK,CAAC,CAAC,CAAC,CAAC,CAACC,OAAO;EAK1D,MAAMG,SAAS,GAAG,CAChBhC,QAAQ,KAAK,IAAI,GACb,oEAAoE,GACpE,wDAAwD,EAC5DA,QAAQ,KAAK,IAAI,GACb,oEAAoE,GACpE,qDAAqD,EACzDA,QAAQ,KAAK,IAAI,GACb,2DAA2D,GAC3D,mDAAmD,EACvDA,QAAQ,KAAK,IAAI,GACb,uEAAuE,GACvE,8DAA8D,EAClEA,QAAQ,KAAK,IAAI,GACb,kDAAkD,GAClD,0DAA0D,EAC9DA,QAAQ,KAAK,IAAI,GACb,+DAA+D,GAC/D,qDAAqD,CAC1D;EAGD,MAAMiC,cAAc,GAAIC,MAAc,IAAa;IACjD,IAAIA,MAAM,GAAG,EAAE,EAAE,OAAO,SAAS;IACjC,IAAIA,MAAM,GAAG,EAAE,EAAE,OAAO,SAAS;IACjC,OAAO,SAAS;EAClB,CAAC;EAED,MAAMC,gBAAgB,GAAIjC,KAAY,IAAa;IACjD,MAAM;MAAEkC,IAAI;MAAEC;IAAM,CAAC,GAAGnC,KAAK;IAC7B,MAAMoC,YAAiC,GAAG;MACxC,QAAQ,EAAE;QAAEC,KAAK,EAAE,EAAE;QAAEC,KAAK,EAAE,EAAE;QAAEC,MAAM,EAAE,EAAE;QAAEC,SAAS,EAAE;MAAG,CAAC;MAC7D,WAAW,EAAE;QAAEH,KAAK,EAAE,EAAE;QAAEC,KAAK,EAAE,EAAE;QAAEC,MAAM,EAAE,EAAE;QAAEC,SAAS,EAAE;MAAG,CAAC;MAChE,MAAM,EAAE;QAAEH,KAAK,EAAE,EAAE;QAAEC,KAAK,EAAE,EAAE;QAAEC,MAAM,EAAE,EAAE;QAAEC,SAAS,EAAE;MAAG,CAAC;MAC3D,SAAS,EAAE;QAAEH,KAAK,EAAE,EAAE;QAAEC,KAAK,EAAE,EAAE;QAAEC,MAAM,EAAE,EAAE;QAAEC,SAAS,EAAE;MAAG,CAAC;MAC9D,MAAM,EAAE;QAAEH,KAAK,EAAE,EAAE;QAAEC,KAAK,EAAE,EAAE;QAAEC,MAAM,EAAE,EAAE;QAAEC,SAAS,EAAE;MAAG,CAAC;MAC3D,SAAS,EAAE;QAAEH,KAAK,EAAE,EAAE;QAAEC,KAAK,EAAE,EAAE;QAAEC,MAAM,EAAE,EAAE;QAAEC,SAAS,EAAE;MAAI,CAAC;MAC/D,MAAM,EAAE;QAAEH,KAAK,EAAE,EAAE;QAAEC,KAAK,EAAE,EAAE;QAAEC,MAAM,EAAE,EAAE;QAAEC,SAAS,EAAE;MAAI,CAAC;MAC5D,UAAU,EAAE;QAAEH,KAAK,EAAE,EAAE;QAAEC,KAAK,EAAE,EAAE;QAAEC,MAAM,EAAE,EAAE;QAAEC,SAAS,EAAE;MAAI,CAAC;MAChE,UAAU,EAAE;QAAEH,KAAK,EAAE,EAAE;QAAEC,KAAK,EAAE,EAAE;QAAEC,MAAM,EAAE,EAAE;QAAEC,SAAS,EAAE;MAAI,CAAC;MAChE,SAAS,EAAE;QAAEH,KAAK,EAAE,EAAE;QAAEC,KAAK,EAAE,EAAE;QAAEC,MAAM,EAAE,EAAE;QAAEC,SAAS,EAAE;MAAI,CAAC;MAC/D,OAAO,EAAE;QAAEH,KAAK,EAAE,EAAE;QAAEC,KAAK,EAAE,EAAE;QAAEC,MAAM,EAAE,GAAG;QAAEC,SAAS,EAAE;MAAI,CAAC;MAC9D,SAAS,EAAE;QAAEH,KAAK,EAAE,EAAE;QAAEC,KAAK,EAAE,EAAE;QAAEC,MAAM,EAAE,GAAG;QAAEC,SAAS,EAAE;MAAI;IACjE,CAAC;IACD,IAAIL,KAAK,KAAK,OAAO,EAAE;MACrB,OAAOC,YAAY,CAACF,IAAI,CAAC,CAACG,KAAK;IACjC,CAAC,MAAM,IAAIF,KAAK,KAAK,OAAO,EAAE;MAC5B,OAAOC,YAAY,CAACF,IAAI,CAAC,CAACI,KAAK;IACjC,CAAC,MAAM,IAAIH,KAAK,KAAK,QAAQ,EAAE;MAC7B,OAAOC,YAAY,CAACF,IAAI,CAAC,CAACK,MAAM;IAClC,CAAC,MAAM;MACL,OAAOH,YAAY,CAACF,IAAI,CAAC,CAACM,SAAS;IACrC;EACF,CAAC;EAED,MAAMC,gBAAgB,GAAIC,WAAmB,IAAoB;IAC/D,MAAMC,cAAc,GAAG,CACrB,QAAQ,EAAE,WAAW,EAAE,MAAM,EAAE,SAAS,EAAE,MAAM,EAChD,SAAS,EAAE,MAAM,EAAE,UAAU,EAAE,UAAU,EAAE,SAAS,EACpD,OAAO,EAAE,SAAS,CACnB;IACD,MAAMC,YAAY,GAAGD,cAAc,CAACE,OAAO,CAACH,WAAW,CAAC;IACxD,IAAIE,YAAY,KAAK,CAAC,CAAC,IAAIA,YAAY,KAAKD,cAAc,CAACG,MAAM,GAAG,CAAC,EAAE;MACrE,OAAO,IAAI;IACb;IACA,OAAOH,cAAc,CAACC,YAAY,GAAG,CAAC,CAAC;EACzC,CAAC;EAED,MAAMG,cAAc,GAAIZ,KAAa,IAAa;IAChD,MAAMa,YAAoC,GAAG;MAC3C,OAAO,EAAE,QAAQ;MACjB,OAAO,EAAE,OAAO;MAChB,QAAQ,EAAE,OAAO;MACjB,WAAW,EAAE;IACf,CAAC;IACD,OAAOA,YAAY,CAACb,KAAK,CAAC,IAAIA,KAAK;EACrC,CAAC;EAGD5E,SAAS,CAAC,MAAM;IACd,MAAM0F,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B3C,YAAY,CAAC,IAAI,CAAC;MAClB,IAAI;QAEF,MAAMP,aAAa,CAAC,CAAC;QAErB,IAAImD,SAAS,GAAG,MAAM1E,QAAQ,CAAC,CAAC;QAChC,IAAI,CAAC0E,SAAS,EAAE;UACdA,SAAS,GAAG,MAAMzE,eAAe,CAAC,CAAC;QACrC;QACAyE,SAAS,GAAG,OAAMxE,iBAAiB,CAAC,CAAC,KAAIwE,SAAS;QAClD,MAAMC,OAAO,GAAG,MAAMrE,iBAAiB,CAAC,CAAC;QACzC4B,iBAAiB,CAACyC,OAAO,CAAC;QAC1BlD,QAAQ,CAACiD,SAAS,CAAC;MACrB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;QAC5C/E,KAAK,CAACiF,KAAK,CACTxD,QAAQ,KAAK,IAAI,GAAG,OAAO,GAAG,OAAO,EACrCA,QAAQ,KAAK,IAAI,GACb,sEAAsE,GACtE,2DACN,CAAC;MACH,CAAC,SAAS;QACRQ,YAAY,CAAC,KAAK,CAAC;MACrB;IACF,CAAC;IACD2C,SAAS,CAAC,CAAC;IACX,MAAMM,YAAY,GAAGC,WAAW,CAAC,MAAM;MACrCrD,cAAc,CAAC,IAAIC,IAAI,CAAC,CAAC,CAAC;IAC5B,CAAC,EAAE,KAAK,CAAC;IACTqD,mBAAmB,CAAC,CAAC;IACrB,OAAO,MAAM;MACXC,aAAa,CAACH,YAAY,CAAC;IAC7B,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAGN,MAAME,mBAAmB,GAAGA,CAAA,KAAM;IAChC5F,QAAQ,CAAC8F,IAAI,CACX9F,QAAQ,CAAC+F,QAAQ,CAAC,CAChB/F,QAAQ,CAACgG,MAAM,CAACpC,cAAc,EAAE;MAC9BqC,OAAO,EAAE,GAAG;MACZC,QAAQ,EAAE,IAAI;MACdC,eAAe,EAAE;IACnB,CAAC,CAAC,EACFnG,QAAQ,CAACgG,MAAM,CAACpC,cAAc,EAAE;MAC9BqC,OAAO,EAAE,GAAG;MACZC,QAAQ,EAAE,IAAI;MACdC,eAAe,EAAE;IACnB,CAAC,CAAC,EACFnG,QAAQ,CAACgG,MAAM,CAACpC,cAAc,EAAE;MAC9BqC,OAAO,EAAE,CAAC;MACVC,QAAQ,EAAE,IAAI;MACdC,eAAe,EAAE;IACnB,CAAC,CAAC,CACH,CACH,CAAC,CAACC,KAAK,CAAC,CAAC;EACX,CAAC;EAGD,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAIvD,UAAU,IAAI,CAACX,KAAK,EAAE;IAG1B,MAAMD,aAAa,CAAC,CAAC;IAGrB,IAAIC,KAAK,CAACmE,cAAc,GAAG,CAAC,EAAE;MAC5B/C,gBAAgB,CAACtB,QAAQ,KAAK,IAAI,GAC9B,kFAAkF,GAClF,+EAA+E,CAAC;MACpFwB,oBAAoB,CAAC,IAAI,CAAC;MAC1B8C,UAAU,CAAC,MAAM9C,oBAAoB,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC;MACnD;IACF;IAEAV,aAAa,CAAC,IAAI,CAAC;IACnB/C,QAAQ,CAAC+F,QAAQ,CAAC,CAChB/F,QAAQ,CAACwG,QAAQ,CAAC,CAChBxG,QAAQ,CAACgG,MAAM,CAAChC,YAAY,EAAE;MAC5BiC,OAAO,EAAE,CAAC;MACVC,QAAQ,EAAE,GAAG;MACbC,eAAe,EAAE;IACnB,CAAC,CAAC,EACFnG,QAAQ,CAACgG,MAAM,CAACjC,cAAc,EAAE;MAC9BkC,OAAO,EAAE,CAAC;MACVC,QAAQ,EAAE,IAAI;MACdC,eAAe,EAAE;IACnB,CAAC,CAAC,CACH,CAAC,EACFnG,QAAQ,CAACgG,MAAM,CAAChC,YAAY,EAAE;MAC5BiC,OAAO,EAAE,CAAC;MACVC,QAAQ,EAAE,GAAG;MACbC,eAAe,EAAE;IACnB,CAAC,CAAC,CACH,CAAC,CAACC,KAAK,CAAC,YAAY;MACnBrC,cAAc,CAAC0C,QAAQ,CAAC,CAAC,CAAC;MAC1B,MAAM;QAAEtE,KAAK,EAAEuE,YAAY;QAAEC;MAAQ,CAAC,GAAG,MAAM7F,UAAU,CAAC,CAAC,CAAC;MAC5D,IAAI4F,YAAY,IAAIC,OAAO,EAAE;QAC3BvE,QAAQ,CAACsE,YAAY,CAAC;MACxB,CAAC,MAAM,IAAIA,YAAY,IAAI,CAACC,OAAO,EAAE;QACnCpD,gBAAgB,CAACtB,QAAQ,KAAK,IAAI,GAC9B,kFAAkF,GAClF,+EAA+E,CAAC;QACpFwB,oBAAoB,CAAC,IAAI,CAAC;QAC1B8C,UAAU,CAAC,MAAM9C,oBAAoB,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC;MACrD;MACAV,aAAa,CAAC,KAAK,CAAC;IACtB,CAAC,CAAC;EACJ,CAAC;EAGD,MAAM6D,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACrC,IAAIhE,cAAc,IAAI,CAAC,EAAE;IAGzB,MAAMV,aAAa,CAAC,CAAC;IAErB,IAAI;MACF,MAAMwE,YAAY,GAAG,MAAMxF,mBAAmB,CAAC,CAAC;MAChD,IAAIwF,YAAY,EAAE;QAChBtE,QAAQ,CAACsE,YAAY,CAAC;QACtB7D,iBAAiB,CAAC,CAAC,CAAC;MACtB;IACF,CAAC,CAAC,OAAO0C,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACjD;EACF,CAAC;EAGD,MAAMsB,sBAAsB,GAAG,MAAAA,CAAA,KAAY;IAEzC,MAAM3E,aAAa,CAAC,CAAC;IAErB,IAAI;MACF,MAAM;QAAEC,KAAK,EAAEuE,YAAY;QAAEI;MAAU,CAAC,GAAG,MAAM1F,qBAAqB,CAAC,CAAC;MACxE,IAAIsF,YAAY,EAAE;QAChBtE,QAAQ,CAACsE,YAAY,CAAC;QACtB,IAAII,SAAS,EAAE;UACbnD,qBAAqB,CAAC,IAAI,CAAC;UAC3B4C,UAAU,CAAC,MAAM5C,qBAAqB,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC;QACtD,CAAC,MAAM;UACL,MAAMoD,SAAS,GAAG1F,yBAAyB,CAACqF,YAAY,CAAC;UACzDlG,KAAK,CAACiF,KAAK,CACTxD,QAAQ,KAAK,IAAI,GAAG,2BAA2B,GAAG,0BAA0B,EAC5EA,QAAQ,KAAK,IAAI,GACb,iDAAiD8E,SAAS,SAAS,GACnE,gEAAgEA,SAAS,SAC/E,CAAC;QACH;MACF;IACF,CAAC,CAAC,OAAOxB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACtD;EACF,CAAC;EAED,MAAMyB,UAAU,GAAIC,IAAU,IAAa;IACzC,OAAOA,IAAI,CAACC,kBAAkB,CAAC,EAAE,EAAE;MAAEC,IAAI,EAAE,SAAS;MAAEC,MAAM,EAAE;IAAU,CAAC,CAAC;EAC5E,CAAC;EAED,MAAMC,mBAAmB,GAAGA,CAAA,KAAgB;IAC1C,MAAMF,IAAI,GAAG9E,WAAW,CAACiF,QAAQ,CAAC,CAAC;IACnC,IAAIH,IAAI,IAAI,CAAC,IAAIA,IAAI,GAAG,EAAE,EAAE;MAC1B,OAAO,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;IAC1C,CAAC,MAAM,IAAIA,IAAI,IAAI,EAAE,IAAIA,IAAI,GAAG,EAAE,EAAE;MAClC,OAAO,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;IAC1C,CAAC,MAAM,IAAIA,IAAI,IAAI,EAAE,IAAIA,IAAI,GAAG,EAAE,EAAE;MAClC,OAAO,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;IAC1C,CAAC,MAAM;MACL,OAAO,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;IAC1C;EACF,CAAC;EAED,MAAMI,YAAY,GAAGA,CAAA,KAAc;IACjC,IAAI,CAACpF,KAAK,EAAE,OAAO,SAAS;IAC5B,OAAOA,KAAK,CAACgC,MAAM,GAAG,EAAE,GAAG,SAAS,GAAG,SAAS;EAClD,CAAC;EAGD,MAAMqD,aAAa,GAAIrF,KAAY,IAAa;IAC9C,IAAIA,KAAK,CAACmC,KAAK,KAAK,OAAO,EAAE;MAC3B,OAAO,IAAI;IACb;IACA,MAAMmD,WAAmD,GAAG;MAC1D,QAAQ,EAAE;QACR,OAAO,EAAE,IAAI;QACb,QAAQ,EAAE,IAAI;QACd,WAAW,EAAE;MACf,CAAC;MACD,WAAW,EAAE;QACX,OAAO,EAAE,IAAI;QACb,QAAQ,EAAE,IAAI;QACd,WAAW,EAAE;MACf,CAAC;MACD,MAAM,EAAE;QACN,OAAO,EAAE,IAAI;QACb,QAAQ,EAAE,IAAI;QACd,WAAW,EAAE;MACf,CAAC;MACD,SAAS,EAAE;QACT,OAAO,EAAE,IAAI;QACb,QAAQ,EAAE,IAAI;QACd,WAAW,EAAE;MACf,CAAC;MACD,MAAM,EAAE;QACN,OAAO,EAAE,IAAI;QACb,QAAQ,EAAE,IAAI;QACd,WAAW,EAAE;MACf,CAAC;MACD,SAAS,EAAE;QACT,OAAO,EAAE,IAAI;QACb,QAAQ,EAAE,IAAI;QACd,WAAW,EAAE;MACf,CAAC;MACD,MAAM,EAAE;QACN,OAAO,EAAE,IAAI;QACb,QAAQ,EAAE,IAAI;QACd,WAAW,EAAE;MACf,CAAC;MACD,UAAU,EAAE;QACV,OAAO,EAAE,IAAI;QACb,QAAQ,EAAE,IAAI;QACd,WAAW,EAAE;MACf,CAAC;MACD,UAAU,EAAE;QACV,OAAO,EAAE,IAAI;QACb,QAAQ,EAAE,IAAI;QACd,WAAW,EAAE;MACf,CAAC;MACD,SAAS,EAAE;QACT,OAAO,EAAE,IAAI;QACb,QAAQ,EAAE,IAAI;QACd,WAAW,EAAE;MACf,CAAC;MACD,OAAO,EAAE;QACP,OAAO,EAAE,IAAI;QACb,QAAQ,EAAE,IAAI;QACd,WAAW,EAAE;MACf,CAAC;MACD,SAAS,EAAE;QACT,OAAO,EAAE,IAAI;QACb,QAAQ,EAAE,IAAI;QACd,WAAW,EAAE;MACf;IACF,CAAC;IACD,OAAOA,WAAW,CAACtF,KAAK,CAACkC,IAAI,CAAC,GAAGlC,KAAK,CAACmC,KAAK,CAAC,IAAI,IAAI;EACvD,CAAC;EAED,MAAMoD,eAAe,GAAGA,CAAA,KAAc;IACpC,MAAMP,IAAI,GAAG9E,WAAW,CAACiF,QAAQ,CAAC,CAAC;IACnC,IAAIH,IAAI,IAAI,CAAC,IAAIA,IAAI,GAAG,EAAE,EAAE;MAC1B,OAAO,IAAI;IACb,CAAC,MAAM,IAAIA,IAAI,IAAI,EAAE,IAAIA,IAAI,GAAG,EAAE,EAAE;MAClC,OAAO,IAAI;IACb,CAAC,MAAM,IAAIA,IAAI,IAAI,EAAE,IAAIA,IAAI,GAAG,EAAE,EAAE;MAClC,OAAO,IAAI;IACb,CAAC,MAAM;MACL,OAAO,IAAI;IACb;EACF,CAAC;EAED,MAAMQ,kBAAkB,GAAGA,CAAA,KAAc;IACvC,IAAI,CAACxF,KAAK,EAAE,OAAO,EAAE;IACrB,IAAIA,KAAK,CAACgC,MAAM,GAAG,EAAE,EAAE;MACrB,OAAOlC,QAAQ,KAAK,IAAI,GAAG,8BAA8B,GAAG,uBAAuB;IACrF,CAAC,MAAM,IAAIE,KAAK,CAACgC,MAAM,GAAG,EAAE,EAAE;MAC5B,OAAOlC,QAAQ,KAAK,IAAI,GAAG,sBAAsB,GAAG,sBAAsB;IAC5E,CAAC,MAAM;MACL,OAAOA,QAAQ,KAAK,IAAI,GAAG,mBAAmB,GAAG,mBAAmB;IACtE;EACF,CAAC;EAED,MAAM2F,SAAS,GAAGA,CAAA,KAAM;IAEtB1F,aAAa,CAAC,CAAC;IACfmB,aAAa,CAAEwE,IAAI,IAAK,CAACA,IAAI,GAAG,CAAC,IAAI5D,SAAS,CAACgB,MAAM,CAAC;EACxD,CAAC;EAED,IAAIzC,SAAS,EAAE;IACb,OACEf,OAAA,CAACH,kBAAkB;MAACwG,MAAM,EAAET,mBAAmB,CAAC,CAAE;MAAAU,QAAA,EAChDtG,OAAA,CAAC5B,IAAI;QAACmI,KAAK,EAAEC,MAAM,CAACC,gBAAiB;QAAAH,QAAA,GACnCtG,OAAA,CAAClB,iBAAiB;UAAC4H,IAAI,EAAC,OAAO;UAACC,KAAK,EAAC;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,EAClD/G,OAAA,CAAC3B,IAAI;UAACkI,KAAK,EAAEC,MAAM,CAACQ,WAAY;UAAAV,QAAA,EAC7B9F,QAAQ,KAAK,IAAI,GAAG,uBAAuB,GAAG;QAAuB;UAAAoG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACW,CAAC;EAEzB;EAEA,OACE/G,OAAA,CAACH,kBAAkB;IAACwG,MAAM,EAAET,mBAAmB,CAAC,CAAE;IAAAU,QAAA,GAChDtG,OAAA,CAACnB,SAAS;MAACoI,QAAQ,EAAC;IAAe;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACtC/G,OAAA,CAACrB,YAAY;MAAC4H,KAAK,EAAEC,MAAM,CAACU,QAAS;MAAAZ,QAAA,EACnCtG,OAAA,CAAC5B,IAAI;QAACmI,KAAK,EAAEC,MAAM,CAACW,SAAU;QAAAb,QAAA,GAE5BtG,OAAA,CAAC5B,IAAI;UAACmI,KAAK,EAAEC,MAAM,CAACY,MAAO;UAAAd,QAAA,GACzBtG,OAAA,CAAC1B,gBAAgB;YACfiI,KAAK,EAAEC,MAAM,CAACa,UAAW;YACzBC,OAAO,EAAEA,CAAA,KAAM;cACb7G,aAAa,CAAC,CAAC;cACfF,UAAU,CAACgH,MAAM,CAAC,CAAC;YACrB,CAAE;YAAAjB,QAAA,GAEFtG,OAAA,CAACF,OAAO;cAAC0H,IAAI,EAAC,YAAY;cAACd,IAAI,EAAE,EAAG;cAACC,KAAK,EAAC;YAAS;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,EACvD/G,OAAA,CAAC3B,IAAI;cAACkI,KAAK,EAAEC,MAAM,CAACiB,cAAe;cAAAnB,QAAA,EAChC9F,QAAQ,KAAK,IAAI,GAAG,QAAQ,GAAG;YAAM;cAAAoG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACS,CAAC,EACnB/G,OAAA,CAAC5B,IAAI;YAACmI,KAAK,EAAEC,MAAM,CAACkB,cAAe;YAAApB,QAAA,EACjCtG,OAAA,CAAC3B,IAAI;cAACkI,KAAK,EAAEC,MAAM,CAACmB,SAAU;cAAArB,QAAA,GAAEL,eAAe,CAAC,CAAC,EAAC,GAAC,EAACV,UAAU,CAAC3E,WAAW,CAAC;YAAA;cAAAgG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/E,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,EAGP/G,OAAA,CAAC5B,IAAI;UAACmI,KAAK,EAAEC,MAAM,CAACoB,cAAe;UAAAtB,QAAA,GACjCtG,OAAA,CAAC5B,IAAI;YAACmI,KAAK,EAAE,CAACC,MAAM,CAACqB,IAAI,EAAE;cAAEC,eAAe,EAAEhC,YAAY,CAAC;YAAE,CAAC;UAAE;YAAAc,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,EAClErG,KAAK,IACJV,OAAA,CAAC5B,IAAI;YAACmI,KAAK,EAAEC,MAAM,CAACuB,YAAa;YAAAzB,QAAA,EAC/BtG,OAAA,CAACzB,QAAQ,CAACF,IAAI;cACZkI,KAAK,EAAE,CACLC,MAAM,CAACwB,UAAU,EACjB;gBACEC,SAAS,EAAE,CACT;kBAAEC,KAAK,EAAE/F;gBAAe,CAAC,EACzB;kBAAEgG,UAAU,EAAEhG,cAAc,CAACiG,WAAW,CAAC;oBACvCC,UAAU,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,GAAG,CAAC;oBACzBC,WAAW,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;kBACxB,CAAC;gBAAE,CAAC;cAER,CAAC,CACD;cAAAhC,QAAA,EAEDP,aAAa,CAACrF,KAAK;YAAC;cAAAkG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACR;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACZ,CACP;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG,CAAC,EAGNrG,KAAK,IACJV,OAAA,CAAC5B,IAAI;UAACmI,KAAK,EAAEC,MAAM,CAAC+B,aAAc;UAAAjC,QAAA,GAChCtG,OAAA,CAAC5B,IAAI;YAACmI,KAAK,EAAEC,MAAM,CAACgC,OAAQ;YAAAlC,QAAA,GAC1BtG,OAAA,CAAC3B,IAAI;cAACkI,KAAK,EAAEC,MAAM,CAACiC,SAAU;cAAAnC,QAAA,EAAE5F,KAAK,CAAC8G;YAAI;cAAAZ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,EAClD/G,OAAA,CAAC1B,gBAAgB;cACfiI,KAAK,EAAEC,MAAM,CAACkC,UAAW;cACzBpB,OAAO,EAAE,MAAAA,CAAA,KAAY;gBAEnB,MAAM7G,aAAa,CAAC,CAAC;gBAErB,MAAMkI,OAAO,GAAGC,MAAM,CACpBpI,QAAQ,KAAK,IAAI,GACb,2CAA2C,GAC3C,kCAAkC,EACtCE,KAAK,CAAC8G,IACR,CAAC;gBACD,IAAImB,OAAO,EAAE;kBACX,MAAM1D,YAAY,GAAA4D,MAAA,CAAAC,MAAA,KAAQpI,KAAK;oBAAE8G,IAAI,EAAEmB;kBAAO,EAAE;kBAChDhI,QAAQ,CAACsE,YAAY,CAAC;kBACtBvF,SAAS,CAACuF,YAAY,CAAC;gBACzB;cACF,CAAE;cAAAqB,QAAA,EAEFtG,OAAA,CAACF,OAAO;gBAAC0H,IAAI,EAAC,QAAQ;gBAACd,IAAI,EAAE,EAAG;gBAACC,KAAK,EAAC;cAAS;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACnC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACf,CAAC,EACP/G,OAAA,CAAC3B,IAAI;YAACkI,KAAK,EAAEC,MAAM,CAACuC,SAAU;YAAAzC,QAAA,GAC3B5F,KAAK,CAACkC,IAAI,EAAC,KAAG,EAACpC,QAAQ,KAAK,IAAI,GAAGE,KAAK,CAACmC,KAAK,GAAGY,cAAc,CAAC/C,KAAK,CAACmC,KAAK,CAAC;UAAA;YAAA+D,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzE,CAAC,EACP/G,OAAA,CAAC3B,IAAI;YAACkI,KAAK,EAAEC,MAAM,CAACwC,WAAY;YAAA1C,QAAA,EAAEJ,kBAAkB,CAAC;UAAC;YAAAU,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,EAC9D/G,OAAA,CAAC5B,IAAI;YAACmI,KAAK,EAAEC,MAAM,CAACyC,YAAa;YAAA3C,QAAA,GAC/BtG,OAAA,CAAC3B,IAAI;cAACkI,KAAK,EAAEC,MAAM,CAAC0C,QAAS;cAAA5C,QAAA,EAC1B9F,QAAQ,KAAK,IAAI,GAAG,WAAW,GAAG;YAAY;cAAAoG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC3C,CAAC,EACP/G,OAAA,CAAC5B,IAAI;cAACmI,KAAK,EAAEC,MAAM,CAAC2C,qBAAsB;cAAA7C,QAAA,EACxCtG,OAAA,CAAC5B,IAAI;gBACHmI,KAAK,EAAE,CACLC,MAAM,CAAC4C,WAAW,EAClB;kBAAEjJ,KAAK,EAAE,GAAGO,KAAK,CAACgC,MAAM,GAAG;kBAAEoF,eAAe,EAAErF,cAAc,CAAC/B,KAAK,CAACgC,MAAM;gBAAE,CAAC;cAC5E;gBAAAkE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE,CAAC,EACP/G,OAAA,CAAC3B,IAAI;cAACkI,KAAK,EAAEC,MAAM,CAAC6C,QAAS;cAAA/C,QAAA,GAAE5F,KAAK,CAACgC,MAAM,EAAC,GAAC;YAAA;cAAAkE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChD,CAAC,EACP/G,OAAA,CAAC5B,IAAI;YAACmI,KAAK,EAAEC,MAAM,CAACyC,YAAa;YAAA3C,QAAA,GAC/BtG,OAAA,CAAC3B,IAAI;cAACkI,KAAK,EAAEC,MAAM,CAAC0C,QAAS;cAAA5C,QAAA,EAC1B9F,QAAQ,KAAK,IAAI,GAAG,UAAU,GAAG;YAAW;cAAAoG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACzC,CAAC,EACP/G,OAAA,CAAC5B,IAAI;cAACmI,KAAK,EAAEC,MAAM,CAAC2C,qBAAsB;cAAA7C,QAAA,EACxCtG,OAAA,CAAC5B,IAAI;gBACHmI,KAAK,EAAE,CACLC,MAAM,CAAC4C,WAAW,EAClB;kBAAEjJ,KAAK,EAAE,GAAGb,0BAA0B,CAACoB,KAAK,CAAC,GAAG;kBAAEoH,eAAe,EAAE;gBAAU,CAAC;cAC9E;gBAAAlB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE,CAAC,EACP/G,OAAA,CAAC3B,IAAI;cAACkI,KAAK,EAAEC,MAAM,CAAC6C,QAAS;cAAA/C,QAAA,GAC1B5F,KAAK,CAAC4I,gBAAgB,EAAC,GAAC,EAAC3G,gBAAgB,CAACjC,KAAK,CAAC;YAAA;cAAAkG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC7C,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,EACP/G,OAAA,CAAC5B,IAAI;YAACmI,KAAK,EAAEC,MAAM,CAACyC,YAAa;YAAA3C,QAAA,GAC/BtG,OAAA,CAAC3B,IAAI;cAACkI,KAAK,EAAEC,MAAM,CAAC0C,QAAS;cAAA5C,QAAA,EAC1B9F,QAAQ,KAAK,IAAI,GAAG,gBAAgB,GAAG;YAAe;cAAAoG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACnD,CAAC,EACP/G,OAAA,CAAC5B,IAAI;cAACmI,KAAK,EAAEC,MAAM,CAAC2C,qBAAsB;cAAA7C,QAAA,EACxCtG,OAAA,CAAC5B,IAAI;gBACHmI,KAAK,EAAE,CACLC,MAAM,CAAC4C,WAAW,EAClB;kBACEjJ,KAAK,EAAE,GAAGoJ,IAAI,CAACC,GAAG,CAAC,GAAG,EAAG9I,KAAK,CAACmE,cAAc,GAAG,EAAE,GAAI,GAAG,CAAC,GAAG;kBAC7DiD,eAAe,EAAE;gBACnB,CAAC;cACD;gBAAAlB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE,CAAC,EACP/G,OAAA,CAAC3B,IAAI;cAACkI,KAAK,EAAEC,MAAM,CAAC6C,QAAS;cAAA/C,QAAA,EAC1B5F,KAAK,CAACmE;YAAc;cAAA+B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACjB,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,EACP/G,OAAA,CAAC3B,IAAI;YAACkI,KAAK,EAAEC,MAAM,CAACiD,eAAgB;YAAAnD,QAAA,EACjC9F,QAAQ,KAAK,IAAI,GACd,wBAAwBE,KAAK,CAACgJ,gBAAgB,mBAAmB,GACjE,yBAAyBhJ,KAAK,CAACgJ,gBAAgB;UAAc;YAAA9C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7D,CAAC,EACN5F,cAAc,GAAG,CAAC,IACjBnB,OAAA,CAAC1B,gBAAgB;YACfiI,KAAK,EAAEC,MAAM,CAACmD,aAAc;YAC5BrC,OAAO,EAAEnC,kBAAmB;YAAAmB,QAAA,EAE5BtG,OAAA,CAAC3B,IAAI;cAACkI,KAAK,EAAEC,MAAM,CAACoD,iBAAkB;cAAAtD,QAAA,EACnC9F,QAAQ,KAAK,IAAI,GACd,eAAeW,cAAc,oBAAoB,GACjD,YAAYA,cAAc;YAAe;cAAAyF,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACzC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACS,CACnB;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG,CACP,EAGD/G,OAAA,CAAC1B,gBAAgB;UACfiI,KAAK,EAAEC,MAAM,CAACqD,YAAa;UAC3BvC,OAAO,EAAEnB,SAAU;UAAAG,QAAA,GAEnBtG,OAAA,CAAC3B,IAAI;YAACkI,KAAK,EAAEC,MAAM,CAACsD,OAAQ;YAAAxD,QAAA,EAAC;UAAE;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,EACtC/G,OAAA,CAAC3B,IAAI;YAACkI,KAAK,EAAEC,MAAM,CAACuD,OAAQ;YAAAzD,QAAA,EAAE9D,SAAS,CAACb,UAAU;UAAC;YAAAiF,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,EAC3D/G,OAAA,CAAC3B,IAAI;YAACkI,KAAK,EAAEC,MAAM,CAACwD,aAAc;YAAA1D,QAAA,EAC/B9F,QAAQ,KAAK,IAAI,GAAG,mBAAmB,GAAG;UAAe;YAAAoG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtD,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACS,CAAC,EAGlBhF,iBAAiB,IAChB/B,OAAA,CAAC5B,IAAI;UAACmI,KAAK,EAAEC,MAAM,CAACyD,cAAe;UAAA3D,QAAA,EACjCtG,OAAA,CAAC3B,IAAI;YAACkI,KAAK,EAAEC,MAAM,CAAC0D,SAAU;YAAA5D,QAAA,EAAEzE;UAAa;YAAA+E,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjD,CACP,EAGA9E,kBAAkB,IACjBjC,OAAA,CAAC5B,IAAI;UAACmI,KAAK,EAAEC,MAAM,CAAC2D,gBAAiB;UAAA7D,QAAA,EACnCtG,OAAA,CAAC3B,IAAI;YAACkI,KAAK,EAAEC,MAAM,CAAC4D,WAAY;YAAA9D,QAAA,EAC7B9F,QAAQ,KAAK,IAAI,GACd,wCAAwC,GACxC;UAAkC;YAAAoG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CACP,EAGD/G,OAAA,CAAC5B,IAAI;UAACmI,KAAK,EAAEC,MAAM,CAAC6D,gBAAiB;UAAA/D,QAAA,GACnCtG,OAAA,CAAC1B,gBAAgB;YACfiI,KAAK,EAAEC,MAAM,CAAC8D,YAAa;YAC3BhD,OAAO,EAAElC,sBAAuB;YAAAkB,QAAA,GAEhCtG,OAAA,CAACF,OAAO;cAAC0H,IAAI,EAAC,SAAS;cAACd,IAAI,EAAE,EAAG;cAACC,KAAK,EAAC;YAAS;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,EACpD/G,OAAA,CAAC3B,IAAI;cAACkI,KAAK,EAAEC,MAAM,CAAC+D,gBAAiB;cAAAjE,QAAA,EAClC9F,QAAQ,KAAK,IAAI,GAAG,aAAa,GAAG;YAAY;cAAAoG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC7C,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACS,CAAC,EAEnB/G,OAAA,CAAC1B,gBAAgB;YACfiI,KAAK,EAAE,CAACC,MAAM,CAAC8D,YAAY,EAAE9D,MAAM,CAACgE,WAAW,CAAE;YACjDlD,OAAO,EAAE1C,WAAY;YACrB6F,QAAQ,EAAEpJ,UAAW;YAAAiF,QAAA,GAErBtG,OAAA,CAACF,OAAO;cAAC0H,IAAI,EAAC,YAAY;cAACd,IAAI,EAAE,EAAG;cAACC,KAAK,EAAC;YAAS;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,EACvD/G,OAAA,CAAC3B,IAAI;cAACkI,KAAK,EAAEC,MAAM,CAAC+D,gBAAiB;cAAAjE,QAAA,EAClC9F,QAAQ,KAAK,IAAI,GAAG,cAAc,GAAG;YAAc;cAAAoG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAChD,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACS,CAAC,EAEnB/G,OAAA,CAAC1B,gBAAgB;YACfiI,KAAK,EAAEC,MAAM,CAAC8D,YAAa;YAC3BhD,OAAO,EAAEA,CAAA,KAAM;cACb7G,aAAa,CAAC,CAAC;cACfS,oBAAoB,CAAC,IAAI,CAAC;YAC5B,CAAE;YAAAoF,QAAA,GAEFtG,OAAA,CAACF,OAAO;cAAC0H,IAAI,EAAC,aAAa;cAACd,IAAI,EAAE,EAAG;cAACC,KAAK,EAAC;YAAS;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,EACxD/G,OAAA,CAAC3B,IAAI;cAACkI,KAAK,EAAEC,MAAM,CAAC+D,gBAAiB;cAAAjE,QAAA,EAClC9F,QAAQ,KAAK,IAAI,GAAG,UAAU,GAAG;YAAU;cAAAoG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACxC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACS,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACf,CAAC,EAGN1F,UAAU,IACTrB,OAAA,CAACzB,QAAQ,CAACH,IAAI;UACZmI,KAAK,EAAE,CACLC,MAAM,CAACkE,SAAS,EAChB;YACEC,OAAO,EAAEpI,YAAY;YACrB0F,SAAS,EAAE,CACT;cACEE,UAAU,EAAE7F,cAAc,CAAC8F,WAAW,CAAC;gBACrCC,UAAU,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;gBAClBC,WAAW,EAAE,CAAC,CAAC,EAAE,GAAG;cACtB,CAAC;YACH,CAAC;UAEL,CAAC,CACD;UAAAhC,QAAA,EAEFtG,OAAA,CAAC3B,IAAI;YAACkI,KAAK,EAAEC,MAAM,CAACoE,aAAc;YAAAtE,QAAA,EAAC;UAAE;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/B,CAChB,EAGD/G,OAAA,CAACvB,KAAK;UACJoM,OAAO,EAAE5J,iBAAkB;UAC3B6J,WAAW,EAAE,IAAK;UAClBC,aAAa,EAAC,MAAM;UACpBC,cAAc,EAAEA,CAAA,KAAM9J,oBAAoB,CAAC,KAAK,CAAE;UAAAoF,QAAA,EAElDtG,OAAA,CAAC5B,IAAI;YAACmI,KAAK,EAAEC,MAAM,CAACyE,YAAa;YAAA3E,QAAA,EAC/BtG,OAAA,CAAC5B,IAAI;cAACmI,KAAK,EAAEC,MAAM,CAAC0E,YAAa;cAAA5E,QAAA,GAC/BtG,OAAA,CAAC5B,IAAI;gBAACmI,KAAK,EAAEC,MAAM,CAAC2E,WAAY;gBAAA7E,QAAA,GAC9BtG,OAAA,CAAC3B,IAAI;kBAACkI,KAAK,EAAEC,MAAM,CAAC4E,UAAW;kBAAA9E,QAAA,EAC5B9F,QAAQ,KAAK,IAAI,GAAG,uBAAuB,GAAG;gBAAgB;kBAAAoG,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC3D,CAAC,EACP/G,OAAA,CAAC1B,gBAAgB;kBACfiI,KAAK,EAAEC,MAAM,CAAC6E,WAAY;kBAC1B/D,OAAO,EAAEA,CAAA,KAAM;oBACb7G,aAAa,CAAC,CAAC;oBACfS,oBAAoB,CAAC,KAAK,CAAC;kBAC7B,CAAE;kBAAAoF,QAAA,EAEFtG,OAAA,CAACF,OAAO;oBAAC0H,IAAI,EAAC,GAAG;oBAACd,IAAI,EAAE,EAAG;oBAACC,KAAK,EAAC;kBAAS;oBAAAC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAE;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC9B,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACf,CAAC,EAEP/G,OAAA,CAACtB,UAAU;gBAAC6H,KAAK,EAAEC,MAAM,CAAC8E,eAAgB;gBAAAhF,QAAA,EACvC5F,KAAK,IACJV,OAAA,CAAAE,SAAA;kBAAAoG,QAAA,GACEtG,OAAA,CAAC5B,IAAI;oBAACmI,KAAK,EAAEC,MAAM,CAAC+E,eAAgB;oBAAAjF,QAAA,GAClCtG,OAAA,CAAC3B,IAAI;sBAACkI,KAAK,EAAEC,MAAM,CAACgF,aAAc;sBAAAlF,QAAA,EAC/B9F,QAAQ,KAAK,IAAI,GAAG,cAAc,GAAG;oBAAe;sBAAAoG,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACjD,CAAC,EACP/G,OAAA,CAAC5B,IAAI;sBAACmI,KAAK,EAAEC,MAAM,CAACiF,cAAe;sBAAAnF,QAAA,GACjCtG,OAAA,CAAC3B,IAAI;wBAACkI,KAAK,EAAEC,MAAM,CAACkF,UAAW;wBAAApF,QAAA,EAAEP,aAAa,CAACrF,KAAK;sBAAC;wBAAAkG,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAO,CAAC,EAC7D/G,OAAA,CAAC3B,IAAI;wBAACkI,KAAK,EAAEC,MAAM,CAACmF,SAAU;wBAAArF,QAAA,EAC3B9F,QAAQ,KAAK,IAAI,GAAGE,KAAK,CAACmC,KAAK,GAAGY,cAAc,CAAC/C,KAAK,CAACmC,KAAK;sBAAC;wBAAA+D,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAC1D,CAAC;oBAAA;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACH,CAAC,EACP/G,OAAA,CAAC5B,IAAI;sBAACmI,KAAK,EAAEC,MAAM,CAACoF,oBAAqB;sBAAAtF,QAAA,GACvCtG,OAAA,CAAC3B,IAAI;wBAACkI,KAAK,EAAEC,MAAM,CAACqF,aAAc;wBAAAvF,QAAA,EAC/B9F,QAAQ,KAAK,IAAI,GAAG,oBAAoB,GAAG;sBAAiB;wBAAAoG,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OACzD,CAAC,EACP/G,OAAA,CAAC5B,IAAI;wBAACmI,KAAK,EAAEC,MAAM,CAACsF,gBAAiB;wBAAAxF,QAAA,EACnCtG,OAAA,CAAC5B,IAAI;0BACHmI,KAAK,EAAE,CACLC,MAAM,CAACuF,iBAAiB,EACxB;4BAAE5L,KAAK,EAAE,GAAGb,0BAA0B,CAACoB,KAAK,CAAC;0BAAI,CAAC;wBAClD;0BAAAkG,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OACH;sBAAC;wBAAAH,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OACE,CAAC,EACP/G,OAAA,CAAC3B,IAAI;wBAACkI,KAAK,EAAEC,MAAM,CAACwF,aAAc;wBAAA1F,QAAA,GAC/B5F,KAAK,CAAC4I,gBAAgB,EAAC,GAAC,EAAC3G,gBAAgB,CAACjC,KAAK,CAAC,EAAC,eACpD;sBAAA;wBAAAkG,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAM,CAAC;oBAAA;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACH,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACH,CAAC,EAEP/G,OAAA,CAAC5B,IAAI;oBAACmI,KAAK,EAAEC,MAAM,CAAC+E,eAAgB;oBAAAjF,QAAA,GAClCtG,OAAA,CAAC3B,IAAI;sBAACkI,KAAK,EAAEC,MAAM,CAACgF,aAAc;sBAAAlF,QAAA,EAC/B9F,QAAQ,KAAK,IAAI,GAAG,WAAW,GAAG;oBAAW;sBAAAoG,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAC1C,CAAC,EACP/G,OAAA,CAAC5B,IAAI;sBAACmI,KAAK,EAAEC,MAAM,CAACyF,kBAAmB;sBAAA3F,QAAA,GACrCtG,OAAA,CAAC5B,IAAI;wBAACmI,KAAK,EAAEC,MAAM,CAAC0F,aAAc;wBAAA5F,QAAA,GAChCtG,OAAA,CAAC3B,IAAI;0BAACkI,KAAK,EAAEC,MAAM,CAAC2F,cAAe;0BAAA7F,QAAA,EAAEP,aAAa,CAACrF,KAAK;wBAAC;0BAAAkG,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OAAO,CAAC,EACjE/G,OAAA,CAAC3B,IAAI;0BAACkI,KAAK,EAAEC,MAAM,CAAC4F,aAAc;0BAAA9F,QAAA,EAAE5F,KAAK,CAACkC;wBAAI;0BAAAgE,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OAAO,CAAC;sBAAA;wBAAAH,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAClD,CAAC,EACP/G,OAAA,CAACF,OAAO;wBAAC0H,IAAI,EAAC,aAAa;wBAACd,IAAI,EAAE,EAAG;wBAACC,KAAK,EAAC;sBAAS;wBAAAC,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAE,CAAC,EACxD/G,OAAA,CAAC5B,IAAI;wBAACmI,KAAK,EAAEC,MAAM,CAAC0F,aAAc;wBAAA5F,QAAA,GAChCtG,OAAA,CAAC3B,IAAI;0BAACkI,KAAK,EAAEC,MAAM,CAAC2F,cAAe;0BAAA7F,QAAA,EAChCnD,gBAAgB,CAACzC,KAAK,CAACkC,IAAI,CAAC,GAAG,GAAG,GAAG;wBAAI;0BAAAgE,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OACtC,CAAC,EACP/G,OAAA,CAAC3B,IAAI;0BAACkI,KAAK,EAAEC,MAAM,CAAC4F,aAAc;0BAAA9F,QAAA,EAC/BnD,gBAAgB,CAACzC,KAAK,CAACkC,IAAI,CAAC,KAC1BpC,QAAQ,KAAK,IAAI,GAAG,cAAc,GAAG,aAAa;wBAAC;0BAAAoG,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OAClD,CAAC;sBAAA;wBAAAH,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OACH,CAAC;oBAAA;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACH,CAAC,EACP/G,OAAA,CAAC5B,IAAI;sBAACmI,KAAK,EAAEC,MAAM,CAACoF,oBAAqB;sBAAAtF,QAAA,GACvCtG,OAAA,CAAC3B,IAAI;wBAACkI,KAAK,EAAEC,MAAM,CAACqF,aAAc;wBAAAvF,QAAA,EAC/B9F,QAAQ,KAAK,IAAI,GAAG,wBAAwB,GAAG;sBAAqB;wBAAAoG,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OACjE,CAAC,EACP/G,OAAA,CAAC5B,IAAI;wBAACmI,KAAK,EAAEC,MAAM,CAACsF,gBAAiB;wBAAAxF,QAAA,EACnCtG,OAAA,CAAC5B,IAAI;0BACHmI,KAAK,EAAE,CACLC,MAAM,CAACuF,iBAAiB,EACxB;4BAAE5L,KAAK,EAAE,GAAGZ,2BAA2B,CAACmB,KAAK,CAAC;0BAAI,CAAC;wBACnD;0BAAAkG,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OACH;sBAAC;wBAAAH,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OACE,CAAC,EACP/G,OAAA,CAAC3B,IAAI;wBAACkI,KAAK,EAAEC,MAAM,CAACwF,aAAc;wBAAA1F,QAAA,GAC/B5F,KAAK,CAAC4I,gBAAgB,EAAC,GAAC,EAAC5I,KAAK,CAAC2L,kBAAkB,EAAC,eACrD;sBAAA;wBAAAzF,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAM,CAAC;oBAAA;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACH,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACH,CAAC,EAEP/G,OAAA,CAAC5B,IAAI;oBAACmI,KAAK,EAAEC,MAAM,CAAC+E,eAAgB;oBAAAjF,QAAA,GAClCtG,OAAA,CAAC3B,IAAI;sBAACkI,KAAK,EAAEC,MAAM,CAACgF,aAAc;sBAAAlF,QAAA,EAC/B9F,QAAQ,KAAK,IAAI,GAAG,cAAc,GAAG;oBAAY;sBAAAoG,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAC9C,CAAC,EACP/G,OAAA,CAAC5B,IAAI;sBAACmI,KAAK,EAAEC,MAAM,CAAC8F,QAAS;sBAAAhG,QAAA,GAC3BtG,OAAA,CAAC5B,IAAI;wBAACmI,KAAK,EAAEC,MAAM,CAAC+F,QAAS;wBAAAjG,QAAA,GAC3BtG,OAAA,CAAC3B,IAAI;0BAACkI,KAAK,EAAEC,MAAM,CAACgG,SAAU;0BAAAlG,QAAA,EAAE5F,KAAK,CAACgJ;wBAAgB;0BAAA9C,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OAAO,CAAC,EAC9D/G,OAAA,CAAC3B,IAAI;0BAACkI,KAAK,EAAEC,MAAM,CAACiG,SAAU;0BAAAnG,QAAA,EAC3B9F,QAAQ,KAAK,IAAI,GAAG,kBAAkB,GAAG;wBAAY;0BAAAoG,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OAClD,CAAC;sBAAA;wBAAAH,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OACH,CAAC,EACP/G,OAAA,CAAC5B,IAAI;wBAACmI,KAAK,EAAEC,MAAM,CAAC+F,QAAS;wBAAAjG,QAAA,GAC3BtG,OAAA,CAAC3B,IAAI;0BAACkI,KAAK,EAAEC,MAAM,CAACgG,SAAU;0BAAAlG,QAAA,EAAE5F,KAAK,CAACmE;wBAAc;0BAAA+B,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OAAO,CAAC,EAC5D/G,OAAA,CAAC3B,IAAI;0BAACkI,KAAK,EAAEC,MAAM,CAACiG,SAAU;0BAAAnG,QAAA,EAC3B9F,QAAQ,KAAK,IAAI,GAAG,iBAAiB,GAAG;wBAAiB;0BAAAoG,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OACtD,CAAC;sBAAA;wBAAAH,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OACH,CAAC,EACP/G,OAAA,CAAC5B,IAAI;wBAACmI,KAAK,EAAEC,MAAM,CAAC+F,QAAS;wBAAAjG,QAAA,GAC3BtG,OAAA,CAAC3B,IAAI;0BAACkI,KAAK,EAAEC,MAAM,CAACgG,SAAU;0BAAAlG,QAAA,GAAE5F,KAAK,CAACgC,MAAM,EAAC,GAAC;wBAAA;0BAAAkE,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OAAM,CAAC,EACrD/G,OAAA,CAAC3B,IAAI;0BAACkI,KAAK,EAAEC,MAAM,CAACiG,SAAU;0BAAAnG,QAAA,EAC3B9F,QAAQ,KAAK,IAAI,GAAG,OAAO,GAAG;wBAAQ;0BAAAoG,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OACnC,CAAC;sBAAA;wBAAAH,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OACH,CAAC;oBAAA;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACH,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACH,CAAC,EAEP/G,OAAA,CAAC5B,IAAI;oBAACmI,KAAK,EAAEC,MAAM,CAAC+E,eAAgB;oBAAAjF,QAAA,GAClCtG,OAAA,CAAC3B,IAAI;sBAACkI,KAAK,EAAEC,MAAM,CAACgF,aAAc;sBAAAlF,QAAA,EAC/B9F,QAAQ,KAAK,IAAI,GAAG,qBAAqB,GAAG;oBAAW;sBAAAoG,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACpD,CAAC,EACP/G,OAAA,CAAC5B,IAAI;sBAACmI,KAAK,EAAEC,MAAM,CAACkG,QAAS;sBAAApG,QAAA,GAC3BtG,OAAA,CAAC5B,IAAI;wBAACmI,KAAK,EAAEC,MAAM,CAACmG,OAAQ;wBAAArG,QAAA,GAC1BtG,OAAA,CAACF,OAAO;0BAAC0H,IAAI,EAAC,SAAS;0BAACd,IAAI,EAAE,EAAG;0BAACC,KAAK,EAAC,SAAS;0BAACJ,KAAK,EAAEC,MAAM,CAACsD;wBAAQ;0BAAAlD,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OAAE,CAAC,EAC3E/G,OAAA,CAAC3B,IAAI;0BAACkI,KAAK,EAAEC,MAAM,CAACoG,WAAY;0BAAAtG,QAAA,EAC7B9F,QAAQ,KAAK,IAAI,GACd,YAAYE,KAAK,CAACkC,IAAI,0CAA0C,GAChE,cAAclC,KAAK,CAACkC,IAAI;wBAAgC;0BAAAgE,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OACxD,CAAC;sBAAA;wBAAAH,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OACH,CAAC,EACP/G,OAAA,CAAC5B,IAAI;wBAACmI,KAAK,EAAEC,MAAM,CAACmG,OAAQ;wBAAArG,QAAA,GAC1BtG,OAAA,CAACF,OAAO;0BAAC0H,IAAI,EAAC,KAAK;0BAACd,IAAI,EAAE,EAAG;0BAACC,KAAK,EAAC,SAAS;0BAACJ,KAAK,EAAEC,MAAM,CAACsD;wBAAQ;0BAAAlD,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OAAE,CAAC,EACvE/G,OAAA,CAAC3B,IAAI;0BAACkI,KAAK,EAAEC,MAAM,CAACoG,WAAY;0BAAAtG,QAAA,EAC7B9F,QAAQ,KAAK,IAAI,GACd,qDAAqD,GACrD;wBAA4C;0BAAAoG,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OAC5C,CAAC;sBAAA;wBAAAH,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OACH,CAAC,EACP/G,OAAA,CAAC5B,IAAI;wBAACmI,KAAK,EAAEC,MAAM,CAACmG,OAAQ;wBAAArG,QAAA,GAC1BtG,OAAA,CAACF,OAAO;0BAAC0H,IAAI,EAAC,OAAO;0BAACd,IAAI,EAAE,EAAG;0BAACC,KAAK,EAAC,SAAS;0BAACJ,KAAK,EAAEC,MAAM,CAACsD;wBAAQ;0BAAAlD,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OAAE,CAAC,EACzE/G,OAAA,CAAC3B,IAAI;0BAACkI,KAAK,EAAEC,MAAM,CAACoG,WAAY;0BAAAtG,QAAA,EAC7B9F,QAAQ,KAAK,IAAI,GACd,mCAAmC,GACnC;wBAAoC;0BAAAoG,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OACpC,CAAC;sBAAA;wBAAAH,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OACH,CAAC,EACP/G,OAAA,CAAC5B,IAAI;wBAACmI,KAAK,EAAEC,MAAM,CAACmG,OAAQ;wBAAArG,QAAA,GAC1BtG,OAAA,CAACF,OAAO;0BAAC0H,IAAI,EAAC,gBAAgB;0BAACd,IAAI,EAAE,EAAG;0BAACC,KAAK,EAAC,SAAS;0BAACJ,KAAK,EAAEC,MAAM,CAACsD;wBAAQ;0BAAAlD,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OAAE,CAAC,EAClF/G,OAAA,CAAC3B,IAAI;0BAACkI,KAAK,EAAEC,MAAM,CAACoG,WAAY;0BAAAtG,QAAA,EAC7B9F,QAAQ,KAAK,IAAI,GACd,oDAAoD,GACpD;wBAA0D;0BAAAoG,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OAC1D,CAAC;sBAAA;wBAAAH,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OACH,CAAC,EACP/G,OAAA,CAAC5B,IAAI;wBAACmI,KAAK,EAAEC,MAAM,CAACmG,OAAQ;wBAAArG,QAAA,GAC1BtG,OAAA,CAACF,OAAO;0BAAC0H,IAAI,EAAC,UAAU;0BAACd,IAAI,EAAE,EAAG;0BAACC,KAAK,EAAC,SAAS;0BAACJ,KAAK,EAAEC,MAAM,CAACsD;wBAAQ;0BAAAlD,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OAAE,CAAC,EAC5E/G,OAAA,CAAC3B,IAAI;0BAACkI,KAAK,EAAEC,MAAM,CAACoG,WAAY;0BAAAtG,QAAA,EAC7B9F,QAAQ,KAAK,IAAI,GACd,+DAA+D,GAC/D;wBAAsD;0BAAAoG,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OACtD,CAAC;sBAAA;wBAAAH,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OACH,CAAC;oBAAA;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACH,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACH,CAAC;gBAAA,eACP;cACH;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACS,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACT;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEzB,CAAC;AAED,MAAMP,MAAM,GAAGrI,UAAU,CAAC0O,MAAM,CAAC;EAC/B3F,QAAQ,EAAE;IACR4F,IAAI,EAAE;EACR,CAAC;EACD3F,SAAS,EAAE;IACT2F,IAAI,EAAE,CAAC;IACPC,OAAO,EAAE;EACX,CAAC;EACDtG,gBAAgB,EAAE;IAChBqG,IAAI,EAAE,CAAC;IACPE,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE;EACd,CAAC;EACDjG,WAAW,EAAE;IACXL,KAAK,EAAE,SAAS;IAChBuG,QAAQ,EAAE,EAAE;IACZC,SAAS,EAAE;EACb,CAAC;EACD/F,MAAM,EAAE;IACNgG,aAAa,EAAE,KAAK;IACpBJ,cAAc,EAAE,eAAe;IAC/BC,UAAU,EAAE,QAAQ;IACpBE,SAAS,EAAEvO,QAAQ,CAACyO,EAAE,KAAK,KAAK,GAAG,CAAC,GAAGxO,SAAS,CAACyO;EACnD,CAAC;EACDjG,UAAU,EAAE;IACV+F,aAAa,EAAE,KAAK;IACpBH,UAAU,EAAE,QAAQ;IACpBF,OAAO,EAAE;EACX,CAAC;EACDtF,cAAc,EAAE;IACdd,KAAK,EAAE,SAAS;IAChB4G,UAAU,EAAE,CAAC;IACbL,QAAQ,EAAE;EACZ,CAAC;EACDxF,cAAc,EAAE;IACdI,eAAe,EAAE,oBAAoB;IACrC0F,iBAAiB,EAAE,EAAE;IACrBC,eAAe,EAAE,CAAC;IAClBC,YAAY,EAAE;EAChB,CAAC;EACD/F,SAAS,EAAE;IACThB,KAAK,EAAE,SAAS;IAChBuG,QAAQ,EAAE;EACZ,CAAC;EACDtF,cAAc,EAAE;IACdqF,UAAU,EAAE,QAAQ;IACpBD,cAAc,EAAE,QAAQ;IACxB5M,MAAM,EAAEA,MAAM,GAAG,GAAG;IACpBuN,cAAc,EAAE,EAAE;IAClBC,QAAQ,EAAE;EACZ,CAAC;EACD/F,IAAI,EAAE;IACJ+F,QAAQ,EAAE,UAAU;IACpBC,MAAM,EAAE,CAAC;IACT1N,KAAK,EAAE,MAAM;IACbC,MAAM,EAAE,EAAE;IACV0N,mBAAmB,EAAE,GAAG;IACxBC,oBAAoB,EAAE;EACxB,CAAC;EACDhG,YAAY,EAAE;IACZkF,UAAU,EAAE,QAAQ;IACpBD,cAAc,EAAE,QAAQ;IACxBY,QAAQ,EAAE,UAAU;IACpBC,MAAM,EAAE;EACV,CAAC;EACD7F,UAAU,EAAE;IACVkF,QAAQ,EAAE,GAAG;IACbc,SAAS,EAAE;EACb,CAAC;EACDzF,aAAa,EAAE;IACbT,eAAe,EAAE,oBAAoB;IACrC4F,YAAY,EAAE,EAAE;IAChBX,OAAO,EAAE,EAAE;IACXkB,YAAY,EAAE;EAChB,CAAC;EACDzF,OAAO,EAAE;IACP4E,aAAa,EAAE,KAAK;IACpBJ,cAAc,EAAE,eAAe;IAC/BC,UAAU,EAAE;EACd,CAAC;EACDxE,SAAS,EAAE;IACT9B,KAAK,EAAE,SAAS;IAChBuG,QAAQ,EAAE,EAAE;IACZgB,UAAU,EAAE,MAAM;IAClBD,YAAY,EAAE;EAChB,CAAC;EACDvF,UAAU,EAAE;IACVqE,OAAO,EAAE;EACX,CAAC;EACDhE,SAAS,EAAE;IACTpC,KAAK,EAAE,SAAS;IAChBuG,QAAQ,EAAE,EAAE;IACZe,YAAY,EAAE;EAChB,CAAC;EACDjF,WAAW,EAAE;IACXrC,KAAK,EAAE,SAAS;IAChBuG,QAAQ,EAAE,EAAE;IACZe,YAAY,EAAE,EAAE;IAChBE,SAAS,EAAE;EACb,CAAC;EACDlF,YAAY,EAAE;IACZmE,aAAa,EAAE,KAAK;IACpBH,UAAU,EAAE,QAAQ;IACpBgB,YAAY,EAAE;EAChB,CAAC;EACD/E,QAAQ,EAAE;IACRvC,KAAK,EAAE,SAAS;IAChBxG,KAAK,EAAE,GAAG;IACV+M,QAAQ,EAAE;EACZ,CAAC;EACD/D,qBAAqB,EAAE;IACrB2D,IAAI,EAAE,CAAC;IACP1M,MAAM,EAAE,EAAE;IACV0H,eAAe,EAAE,0BAA0B;IAC3C4F,YAAY,EAAE,CAAC;IACfU,QAAQ,EAAE;EACZ,CAAC;EACDhF,WAAW,EAAE;IACXhJ,MAAM,EAAE,MAAM;IACdsN,YAAY,EAAE;EAChB,CAAC;EACDrE,QAAQ,EAAE;IACR1C,KAAK,EAAE,SAAS;IAChBxG,KAAK,EAAE,EAAE;IACT6N,SAAS,EAAE,OAAO;IAClBd,QAAQ,EAAE;EACZ,CAAC;EACDzD,eAAe,EAAE;IACf9C,KAAK,EAAE,SAAS;IAChBuG,QAAQ,EAAE,EAAE;IACZC,SAAS,EAAE;EACb,CAAC;EACDxD,aAAa,EAAE;IACb7B,eAAe,EAAE,SAAS;IAC1B4F,YAAY,EAAE,CAAC;IACfX,OAAO,EAAE,EAAE;IACXE,UAAU,EAAE,QAAQ;IACpBE,SAAS,EAAE;EACb,CAAC;EACDvD,iBAAiB,EAAE;IACjBjD,KAAK,EAAE,SAAS;IAChBuH,UAAU,EAAE,MAAM;IAClBhB,QAAQ,EAAE;EACZ,CAAC;EACDrD,YAAY,EAAE;IACZ/B,eAAe,EAAE,0BAA0B;IAC3C4F,YAAY,EAAE,EAAE;IAChBX,OAAO,EAAE,EAAE;IACXkB,YAAY,EAAE,EAAE;IAChBb,aAAa,EAAE,KAAK;IACpBH,UAAU,EAAE;EACd,CAAC;EACDnD,OAAO,EAAE;IACPoD,QAAQ,EAAE,EAAE;IACZmB,WAAW,EAAE;EACf,CAAC;EACDtE,OAAO,EAAE;IACP+C,IAAI,EAAE,CAAC;IACPnG,KAAK,EAAE,SAAS;IAChBuG,QAAQ,EAAE;EACZ,CAAC;EACDlD,aAAa,EAAE;IACbrD,KAAK,EAAE,SAAS;IAChBuG,QAAQ,EAAE,EAAE;IACZiB,SAAS,EAAE;EACb,CAAC;EACDlE,cAAc,EAAE;IACdnC,eAAe,EAAE,sBAAsB;IACvC4F,YAAY,EAAE,CAAC;IACfX,OAAO,EAAE,EAAE;IACXkB,YAAY,EAAE;EAChB,CAAC;EACD/D,SAAS,EAAE;IACTvD,KAAK,EAAE,SAAS;IAChBqH,SAAS,EAAE;EACb,CAAC;EACD7D,gBAAgB,EAAE;IAChBrC,eAAe,EAAE,wBAAwB;IACzC4F,YAAY,EAAE,CAAC;IACfX,OAAO,EAAE,EAAE;IACXkB,YAAY,EAAE;EAChB,CAAC;EACD7D,WAAW,EAAE;IACXzD,KAAK,EAAE,SAAS;IAChBqH,SAAS,EAAE;EACb,CAAC;EACD3D,gBAAgB,EAAE;IAChB+C,aAAa,EAAE,KAAK;IACpBJ,cAAc,EAAE,eAAe;IAC/BG,SAAS,EAAE;EACb,CAAC;EACD7C,YAAY,EAAE;IACZxC,eAAe,EAAE,oBAAoB;IACrC4F,YAAY,EAAE,EAAE;IAChBX,OAAO,EAAE,EAAE;IACXE,UAAU,EAAE,QAAQ;IACpBH,IAAI,EAAE,CAAC;IACPwB,gBAAgB,EAAE;EACpB,CAAC;EACD9D,WAAW,EAAE;IACX1C,eAAe,EAAE;EACnB,CAAC;EACDyC,gBAAgB,EAAE;IAChB5D,KAAK,EAAE,SAAS;IAChBwG,SAAS,EAAE,CAAC;IACZD,QAAQ,EAAE;EACZ,CAAC;EACDxC,SAAS,EAAE;IACTkD,QAAQ,EAAE,UAAU;IACpBW,GAAG,EAAEnO,MAAM,GAAG,IAAI;IAClBoO,SAAS,EAAE;EACb,CAAC;EACD5D,aAAa,EAAE;IACbsC,QAAQ,EAAE;EACZ,CAAC;EACDjC,YAAY,EAAE;IACZ6B,IAAI,EAAE,CAAC;IACPhF,eAAe,EAAE,oBAAoB;IACrCkF,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,QAAQ;IACpBF,OAAO,EAAE;EACX,CAAC;EACD7B,YAAY,EAAE;IACZpD,eAAe,EAAE,SAAS;IAC1B4F,YAAY,EAAE,EAAE;IAChBvN,KAAK,EAAE,MAAM;IACbsO,SAAS,EAAE,KAAK;IAChB1B,OAAO,EAAE;EACX,CAAC;EACD5B,WAAW,EAAE;IACXiC,aAAa,EAAE,KAAK;IACpBJ,cAAc,EAAE,eAAe;IAC/BC,UAAU,EAAE,QAAQ;IACpBgB,YAAY,EAAE;EAChB,CAAC;EACD7C,UAAU,EAAE;IACV8B,QAAQ,EAAE,EAAE;IACZgB,UAAU,EAAE,MAAM;IAClBvH,KAAK,EAAE;EACT,CAAC;EACD0E,WAAW,EAAE;IACX0B,OAAO,EAAE;EACX,CAAC;EACDzB,eAAe,EAAE;IACfmD,SAAS,EAAE;EACb,CAAC;EACDlD,eAAe,EAAE;IACf0C,YAAY,EAAE;EAChB,CAAC;EACDzC,aAAa,EAAE;IACb0B,QAAQ,EAAE,EAAE;IACZgB,UAAU,EAAE,MAAM;IAClBvH,KAAK,EAAE,SAAS;IAChBsH,YAAY,EAAE;EAChB,CAAC;EACDxC,cAAc,EAAE;IACd2B,aAAa,EAAE,KAAK;IACpBH,UAAU,EAAE,QAAQ;IACpBgB,YAAY,EAAE;EAChB,CAAC;EACDvC,UAAU,EAAE;IACVwB,QAAQ,EAAE,EAAE;IACZmB,WAAW,EAAE;EACf,CAAC;EACD1C,SAAS,EAAE;IACTuB,QAAQ,EAAE,EAAE;IACZvG,KAAK,EAAE;EACT,CAAC;EACDiF,oBAAoB,EAAE;IACpBuB,SAAS,EAAE;EACb,CAAC;EACDtB,aAAa,EAAE;IACbqB,QAAQ,EAAE,EAAE;IACZvG,KAAK,EAAE,SAAS;IAChBsH,YAAY,EAAE;EAChB,CAAC;EACDnC,gBAAgB,EAAE;IAChB1L,MAAM,EAAE,EAAE;IACV0H,eAAe,EAAE,SAAS;IAC1B4F,YAAY,EAAE,CAAC;IACfU,QAAQ,EAAE;EACZ,CAAC;EACDrC,iBAAiB,EAAE;IACjB3L,MAAM,EAAE,MAAM;IACd0H,eAAe,EAAE,SAAS;IAC1B4F,YAAY,EAAE;EAChB,CAAC;EACD1B,aAAa,EAAE;IACbkB,QAAQ,EAAE,EAAE;IACZvG,KAAK,EAAE,SAAS;IAChBwG,SAAS,EAAE,CAAC;IACZa,SAAS,EAAE;EACb,CAAC;EACD/B,kBAAkB,EAAE;IAClBmB,aAAa,EAAE,KAAK;IACpBH,UAAU,EAAE,QAAQ;IACpBD,cAAc,EAAE,eAAe;IAC/BiB,YAAY,EAAE;EAChB,CAAC;EACD/B,aAAa,EAAE;IACbe,UAAU,EAAE,QAAQ;IACpBH,IAAI,EAAE;EACR,CAAC;EACDX,cAAc,EAAE;IACde,QAAQ,EAAE,EAAE;IACZe,YAAY,EAAE;EAChB,CAAC;EACD7B,aAAa,EAAE;IACbc,QAAQ,EAAE,EAAE;IACZvG,KAAK,EAAE,SAAS;IAChBqH,SAAS,EAAE;EACb,CAAC;EACD1B,QAAQ,EAAE;IACRc,aAAa,EAAE,KAAK;IACpBJ,cAAc,EAAE;EAClB,CAAC;EACDT,QAAQ,EAAE;IACRU,UAAU,EAAE,QAAQ;IACpBH,IAAI,EAAE;EACR,CAAC;EACDN,SAAS,EAAE;IACTU,QAAQ,EAAE,EAAE;IACZgB,UAAU,EAAE,MAAM;IAClBvH,KAAK,EAAE;EACT,CAAC;EACD8F,SAAS,EAAE;IACTS,QAAQ,EAAE,EAAE;IACZvG,KAAK,EAAE,SAAS;IAChBqH,SAAS,EAAE;EACb,CAAC;EACDtB,QAAQ,EAAE;IACRS,SAAS,EAAE;EACb,CAAC;EACDR,OAAO,EAAE;IACPS,aAAa,EAAE,KAAK;IACpBH,UAAU,EAAE,QAAQ;IACpBgB,YAAY,EAAE;EAChB,CAAC;EACDrB,WAAW,EAAE;IACXE,IAAI,EAAE,CAAC;IACPI,QAAQ,EAAE,EAAE;IACZvG,KAAK,EAAE,SAAS;IAChB4G,UAAU,EAAE;EACd;AACF,CAAC,CAAC;AAEF,eAAejN,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}