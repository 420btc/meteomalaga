{"ast":null,"code":"import Platform from \"react-native-web/dist/exports/Platform\";\nexport const isWeb = () => {\n  return Platform.OS === 'web';\n};\nexport const isMobile = () => {\n  return Platform.OS === 'ios' || Platform.OS === 'android';\n};\nexport const isAndroid = () => {\n  return Platform.OS === 'android';\n};\nexport const isIOS = () => {\n  return Platform.OS === 'ios';\n};\nexport const getPlatformStyles = (webStyles, mobileStyles, androidStyles, iosStyles) => {\n  if (isWeb() && webStyles) {\n    return webStyles;\n  }\n  if (isAndroid() && androidStyles) {\n    return androidStyles;\n  }\n  if (isIOS() && iosStyles) {\n    return iosStyles;\n  }\n  if (isMobile() && mobileStyles) {\n    return mobileStyles;\n  }\n  return undefined;\n};\nexport const runPlatformCode = (webCallback, mobileCallback, androidCallback, iosCallback) => {\n  if (isWeb() && webCallback) {\n    webCallback();\n    return;\n  }\n  if (isAndroid() && androidCallback) {\n    androidCallback();\n    return;\n  }\n  if (isIOS() && iosCallback) {\n    iosCallback();\n    return;\n  }\n  if (isMobile() && mobileCallback) {\n    mobileCallback();\n    return;\n  }\n};","map":{"version":3,"names":["isWeb","Platform","OS","isMobile","isAndroid","isIOS","getPlatformStyles","webStyles","mobileStyles","androidStyles","iosStyles","undefined","runPlatformCode","webCallback","mobileCallback","androidCallback","iosCallback"],"sources":["/Users/atemjohnatem/Downloads/meteo-malaga/src/utils/platformUtils.ts"],"sourcesContent":["import { Platform } from 'react-native';\n\n/**\n * Utility functions for platform-specific code\n */\n\n/**\n * Check if the app is running on a web platform\n */\nexport const isWeb = (): boolean => {\n  return Platform.OS === 'web';\n};\n\n/**\n * Check if the app is running on a mobile platform (iOS or Android)\n */\nexport const isMobile = (): boolean => {\n  return Platform.OS === 'ios' || Platform.OS === 'android';\n};\n\n/**\n * Check if the app is running on Android\n */\nexport const isAndroid = (): boolean => {\n  return Platform.OS === 'android';\n};\n\n/**\n * Check if the app is running on iOS\n */\nexport const isIOS = (): boolean => {\n  return Platform.OS === 'ios';\n};\n\n/**\n * Get platform-specific styles\n * @param webStyles Styles for web platform\n * @param mobileStyles Styles for mobile platforms\n * @param androidStyles Styles specific to Android\n * @param iosStyles Styles specific to iOS\n */\nexport const getPlatformStyles = <T>(\n  webStyles?: T,\n  mobileStyles?: T,\n  androidStyles?: T,\n  iosStyles?: T\n): T | undefined => {\n  if (isWeb() && webStyles) {\n    return webStyles;\n  }\n  \n  if (isAndroid() && androidStyles) {\n    return androidStyles;\n  }\n  \n  if (isIOS() && iosStyles) {\n    return iosStyles;\n  }\n  \n  if (isMobile() && mobileStyles) {\n    return mobileStyles;\n  }\n  \n  return undefined;\n};\n\n/**\n * Execute platform-specific code\n * @param webCallback Function to execute on web\n * @param mobileCallback Function to execute on mobile\n * @param androidCallback Function to execute on Android\n * @param iosCallback Function to execute on iOS\n */\nexport const runPlatformCode = (\n  webCallback?: () => void,\n  mobileCallback?: () => void,\n  androidCallback?: () => void,\n  iosCallback?: () => void\n): void => {\n  if (isWeb() && webCallback) {\n    webCallback();\n    return;\n  }\n  \n  if (isAndroid() && androidCallback) {\n    androidCallback();\n    return;\n  }\n  \n  if (isIOS() && iosCallback) {\n    iosCallback();\n    return;\n  }\n  \n  if (isMobile() && mobileCallback) {\n    mobileCallback();\n    return;\n  }\n};\n"],"mappings":";AASA,OAAO,MAAMA,KAAK,GAAGA,CAAA,KAAe;EAClC,OAAOC,QAAQ,CAACC,EAAE,KAAK,KAAK;AAC9B,CAAC;AAKD,OAAO,MAAMC,QAAQ,GAAGA,CAAA,KAAe;EACrC,OAAOF,QAAQ,CAACC,EAAE,KAAK,KAAK,IAAID,QAAQ,CAACC,EAAE,KAAK,SAAS;AAC3D,CAAC;AAKD,OAAO,MAAME,SAAS,GAAGA,CAAA,KAAe;EACtC,OAAOH,QAAQ,CAACC,EAAE,KAAK,SAAS;AAClC,CAAC;AAKD,OAAO,MAAMG,KAAK,GAAGA,CAAA,KAAe;EAClC,OAAOJ,QAAQ,CAACC,EAAE,KAAK,KAAK;AAC9B,CAAC;AASD,OAAO,MAAMI,iBAAiB,GAAGA,CAC/BC,SAAa,EACbC,YAAgB,EAChBC,aAAiB,EACjBC,SAAa,KACK;EAClB,IAAIV,KAAK,CAAC,CAAC,IAAIO,SAAS,EAAE;IACxB,OAAOA,SAAS;EAClB;EAEA,IAAIH,SAAS,CAAC,CAAC,IAAIK,aAAa,EAAE;IAChC,OAAOA,aAAa;EACtB;EAEA,IAAIJ,KAAK,CAAC,CAAC,IAAIK,SAAS,EAAE;IACxB,OAAOA,SAAS;EAClB;EAEA,IAAIP,QAAQ,CAAC,CAAC,IAAIK,YAAY,EAAE;IAC9B,OAAOA,YAAY;EACrB;EAEA,OAAOG,SAAS;AAClB,CAAC;AASD,OAAO,MAAMC,eAAe,GAAGA,CAC7BC,WAAwB,EACxBC,cAA2B,EAC3BC,eAA4B,EAC5BC,WAAwB,KACf;EACT,IAAIhB,KAAK,CAAC,CAAC,IAAIa,WAAW,EAAE;IAC1BA,WAAW,CAAC,CAAC;IACb;EACF;EAEA,IAAIT,SAAS,CAAC,CAAC,IAAIW,eAAe,EAAE;IAClCA,eAAe,CAAC,CAAC;IACjB;EACF;EAEA,IAAIV,KAAK,CAAC,CAAC,IAAIW,WAAW,EAAE;IAC1BA,WAAW,CAAC,CAAC;IACb;EACF;EAEA,IAAIb,QAAQ,CAAC,CAAC,IAAIW,cAAc,EAAE;IAChCA,cAAc,CAAC,CAAC;IAChB;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}