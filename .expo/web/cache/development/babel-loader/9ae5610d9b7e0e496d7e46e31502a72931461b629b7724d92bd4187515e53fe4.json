{"ast":null,"code":"const SUMMER_MONTHS = [6, 7, 8, 9];\nconst WINTER_MONTHS = [12, 1, 2];\nconst SPRING_MONTHS = [3, 4, 5];\nconst AUTUMN_MONTHS = [10, 11];\nexport const isSummerMonth = () => {\n  const currentMonth = new Date().getMonth() + 1;\n  return SUMMER_MONTHS.includes(currentMonth);\n};\nexport const isWinterMonth = () => {\n  const currentMonth = new Date().getMonth() + 1;\n  return WINTER_MONTHS.includes(currentMonth);\n};\nexport const isSpringMonth = () => {\n  const currentMonth = new Date().getMonth() + 1;\n  return SPRING_MONTHS.includes(currentMonth);\n};\nexport const isAutumnMonth = () => {\n  const currentMonth = new Date().getMonth() + 1;\n  return AUTUMN_MONTHS.includes(currentMonth);\n};\nexport const applySeasonalAdjustment = (odds, betType, value) => {\n  if (isSummerMonth()) {\n    if (betType === 'rain' && value > 0) {\n      return value <= 1 ? odds * 1.5 : odds * 1.8;\n    }\n    if (betType === 'rain_yes') {\n      return odds * 1.8;\n    }\n    if (betType === 'rain_no') {\n      return odds * 0.8;\n    }\n    if (betType === 'wind' && value > 20) {\n      return odds * 1.3;\n    }\n    if (betType === 'temperature' && value > 30) {\n      return odds * 0.8;\n    }\n  }\n  if (isWinterMonth()) {\n    if (betType === 'rain' && value > 0) {\n      return value <= 3 ? odds * 0.7 : odds * 0.8;\n    }\n    if (betType === 'rain_yes') {\n      return odds * 0.7;\n    }\n    if (betType === 'rain_no') {\n      return odds * 1.2;\n    }\n    if (betType === 'wind' && value > 30) {\n      return odds * 0.8;\n    }\n    if (betType === 'temperature' && value < 14) {\n      return odds * 1.2;\n    }\n  }\n  if (isAutumnMonth()) {\n    if (betType === 'rain' && value > 0) {\n      return value <= 5 ? odds * 0.6 : odds * 0.7;\n    }\n    if (betType === 'rain_yes') {\n      return odds * 0.6;\n    }\n    if (betType === 'rain_no') {\n      return odds * 1.4;\n    }\n    if (betType === 'wind' && value > 25) {\n      return odds * 0.9;\n    }\n  }\n  if (isSpringMonth()) {\n    if (betType === 'rain' && value > 0) {\n      return value <= 3 ? odds * 0.9 : odds;\n    }\n    if (betType === 'rain_yes') {\n      return odds * 0.9;\n    }\n    if (betType === 'rain_no') {\n      return odds * 1.1;\n    }\n    if (betType === 'wind' && value > 25) {\n      return odds * 0.9;\n    }\n  }\n  return odds;\n};\nexport const getRainOdds = mm => {\n  let baseOdds;\n  if (mm === 0 || mm < 0.01) {\n    baseOdds = 1.15;\n  } else if (mm <= 1) {\n    baseOdds = 3.5;\n  } else if (mm <= 3) {\n    baseOdds = 5.0;\n  } else if (mm <= 5) {\n    baseOdds = 8.0;\n  } else if (mm <= 10) {\n    baseOdds = 15.0;\n  } else if (mm <= 15) {\n    baseOdds = 25.0;\n  } else if (mm <= 20) {\n    baseOdds = 40.0;\n  } else if (mm <= 30) {\n    baseOdds = 60.0;\n  } else if (mm <= 40) {\n    baseOdds = 100.0;\n  } else if (mm <= 50) {\n    baseOdds = 150.0;\n  } else if (mm <= 75) {\n    baseOdds = 250.0;\n  } else if (mm <= 100) {\n    baseOdds = 500.0;\n  } else {\n    baseOdds = 1000.0;\n  }\n  return applySeasonalAdjustment(baseOdds, 'rain', mm);\n};\nexport const getRainYesOdds = () => {\n  const baseOdds = 4.0;\n  return applySeasonalAdjustment(baseOdds, 'rain_yes', 1);\n};\nexport const getRainNoOdds = () => {\n  const baseOdds = 1.15;\n  return applySeasonalAdjustment(baseOdds, 'rain_no', 0);\n};\nexport const getTemperatureOdds = temp => {\n  let baseOdds;\n  if (isSummerMonth()) {\n    if (temp < 20) {\n      baseOdds = 8.0;\n    } else if (temp <= 25) {\n      baseOdds = 3.0;\n    } else if (temp <= 30) {\n      baseOdds = 1.5;\n    } else if (temp <= 35) {\n      baseOdds = 2.0;\n    } else if (temp <= 40) {\n      baseOdds = 5.0;\n    } else {\n      baseOdds = 15.0;\n    }\n  } else if (isWinterMonth()) {\n    if (temp < 8) {\n      baseOdds = 10.0;\n    } else if (temp <= 12) {\n      baseOdds = 3.0;\n    } else if (temp <= 16) {\n      baseOdds = 1.8;\n    } else if (temp <= 20) {\n      baseOdds = 2.5;\n    } else if (temp <= 25) {\n      baseOdds = 6.0;\n    } else {\n      baseOdds = 15.0;\n    }\n  } else if (isSpringMonth()) {\n    if (temp < 12) {\n      baseOdds = 6.0;\n    } else if (temp <= 16) {\n      baseOdds = 2.5;\n    } else if (temp <= 20) {\n      baseOdds = 1.8;\n    } else if (temp <= 25) {\n      baseOdds = 2.0;\n    } else if (temp <= 30) {\n      baseOdds = 4.0;\n    } else {\n      baseOdds = 10.0;\n    }\n  } else {\n    if (temp < 12) {\n      baseOdds = 7.0;\n    } else if (temp <= 16) {\n      baseOdds = 3.0;\n    } else if (temp <= 20) {\n      baseOdds = 1.7;\n    } else if (temp <= 25) {\n      baseOdds = 2.2;\n    } else if (temp <= 30) {\n      baseOdds = 5.0;\n    } else {\n      baseOdds = 12.0;\n    }\n  }\n  return applySeasonalAdjustment(baseOdds, 'temperature', temp);\n};\nexport const getWindOdds = speed => {\n  let baseOdds;\n  if (speed <= 5) {\n    baseOdds = 2.5;\n  } else if (speed <= 10) {\n    baseOdds = 1.8;\n  } else if (speed <= 15) {\n    baseOdds = 2.0;\n  } else if (speed <= 20) {\n    baseOdds = 2.5;\n  } else if (speed <= 25) {\n    baseOdds = 3.5;\n  } else if (speed <= 30) {\n    baseOdds = 5.0;\n  } else if (speed <= 40) {\n    baseOdds = 8.0;\n  } else if (speed <= 50) {\n    baseOdds = 15.0;\n  } else if (speed <= 60) {\n    baseOdds = 30.0;\n  } else if (speed <= 75) {\n    baseOdds = 60.0;\n  } else if (speed <= 90) {\n    baseOdds = 120.0;\n  } else {\n    baseOdds = 250.0;\n  }\n  return applySeasonalAdjustment(baseOdds, 'wind', speed);\n};\nexport const getCurrentSeason = () => {\n  if (isSummerMonth()) {\n    return \"Verano\";\n  } else if (isWinterMonth()) {\n    return \"Invierno\";\n  } else if (isSpringMonth()) {\n    return \"Primavera\";\n  } else {\n    return \"Otoño\";\n  }\n};\nexport const getSeasonalBettingDescription = () => {\n  const season = getCurrentSeason();\n  if (season === \"Verano\") {\n    return \"Verano en Málaga: Cuotas muy altas para lluvia, altas para viento fuerte, bajas para temperaturas elevadas.\";\n  } else if (season === \"Invierno\") {\n    return \"Invierno en Málaga: Cuotas más bajas para lluvia, moderadas para viento, altas para temperaturas bajas.\";\n  } else if (season === \"Primavera\") {\n    return \"Primavera en Málaga: Cuotas moderadas para lluvia, ligeramente reducidas para viento, equilibradas para temperatura.\";\n  } else {\n    return \"Otoño en Málaga: Cuotas muy bajas para lluvia (temporada de lluvias), moderadas para viento y temperatura.\";\n  }\n};","map":{"version":3,"names":["SUMMER_MONTHS","WINTER_MONTHS","SPRING_MONTHS","AUTUMN_MONTHS","isSummerMonth","currentMonth","Date","getMonth","includes","isWinterMonth","isSpringMonth","isAutumnMonth","applySeasonalAdjustment","odds","betType","value","getRainOdds","mm","baseOdds","getRainYesOdds","getRainNoOdds","getTemperatureOdds","temp","getWindOdds","speed","getCurrentSeason","getSeasonalBettingDescription","season"],"sources":["/Users/atemjohnatem/Downloads/meteo-malaga/src/services/oddsService.ts"],"sourcesContent":["import { isWithinBettingWindowSync } from './weatherService';\n\n// Constants for seasonal adjustments\nconst SUMMER_MONTHS = [6, 7, 8, 9]; // June to September\nconst WINTER_MONTHS = [12, 1, 2]; // December to February\nconst SPRING_MONTHS = [3, 4, 5]; // March to May\nconst AUTUMN_MONTHS = [10, 11]; // October to November\n\n/**\n * Determines if the current month is in summer\n */\nexport const isSummerMonth = (): boolean => {\n  const currentMonth = new Date().getMonth() + 1; // JavaScript months are 0-indexed\n  return SUMMER_MONTHS.includes(currentMonth);\n};\n\n/**\n * Determines if the current month is in winter\n */\nexport const isWinterMonth = (): boolean => {\n  const currentMonth = new Date().getMonth() + 1;\n  return WINTER_MONTHS.includes(currentMonth);\n};\n\n/**\n * Determines if the current month is in spring\n */\nexport const isSpringMonth = (): boolean => {\n  const currentMonth = new Date().getMonth() + 1;\n  return SPRING_MONTHS.includes(currentMonth);\n};\n\n/**\n * Determines if the current month is in autumn\n */\nexport const isAutumnMonth = (): boolean => {\n  const currentMonth = new Date().getMonth() + 1;\n  return AUTUMN_MONTHS.includes(currentMonth);\n};\n\n/**\n * Applies seasonal adjustments to odds based on the current month\n * @param odds Base odds value\n * @param betType Type of bet (rain, temperature, wind)\n * @param value The value being bet on\n */\nexport const applySeasonalAdjustment = (odds: number, betType: string, value: number): number => {\n  // Summer adjustments - Málaga is very dry in summer\n  if (isSummerMonth()) {\n    if (betType === 'rain' && value > 0) {\n      // Much higher odds for any rain in summer (very rare)\n      return value <= 1 ? odds * 1.5 : odds * 1.8; \n    }\n    if (betType === 'rain_yes') {\n      // Much higher odds for \"will rain\" in summer\n      return odds * 1.8;\n    }\n    if (betType === 'rain_no') {\n      // Lower odds for \"won't rain\" in summer (very likely)\n      return odds * 0.8;\n    }\n    if (betType === 'wind' && value > 20) {\n      // Higher odds for strong winds in summer\n      return odds * 1.3;\n    }\n    if (betType === 'temperature' && value > 30) {\n      return odds * 0.8; // Lower odds for high temperatures in summer (more common)\n    }\n  }\n  \n  // Winter adjustments - More rain in winter in Málaga\n  if (isWinterMonth()) {\n    if (betType === 'rain' && value > 0) {\n      // Lower odds for rain in winter (more common)\n      return value <= 3 ? odds * 0.7 : odds * 0.8;\n    }\n    if (betType === 'rain_yes') {\n      // Lower odds for \"will rain\" in winter (more common)\n      return odds * 0.7;\n    }\n    if (betType === 'rain_no') {\n      // Higher odds for \"won't rain\" in winter (less likely than summer)\n      return odds * 1.2;\n    }\n    if (betType === 'wind' && value > 30) {\n      // Lower odds for strong winds in winter (more common)\n      return odds * 0.8;\n    }\n    if (betType === 'temperature' && value < 14) {\n      return odds * 1.2; // Higher odds for low temperatures in winter\n    }\n  }\n  \n  // Autumn adjustments - Rainy season in Málaga\n  if (isAutumnMonth()) {\n    if (betType === 'rain' && value > 0) {\n      // Much lower odds for rain in autumn (very common)\n      return value <= 5 ? odds * 0.6 : odds * 0.7;\n    }\n    if (betType === 'rain_yes') {\n      // Much lower odds for \"will rain\" in autumn (very common)\n      return odds * 0.6;\n    }\n    if (betType === 'rain_no') {\n      // Higher odds for \"won't rain\" in autumn (less likely)\n      return odds * 1.4;\n    }\n    if (betType === 'wind' && value > 25) {\n      // Lower odds for strong winds in autumn\n      return odds * 0.9;\n    }\n  }\n  \n  // Spring adjustments\n  if (isSpringMonth()) {\n    if (betType === 'rain' && value > 0) {\n      // Moderate adjustment for spring rain\n      return value <= 3 ? odds * 0.9 : odds;\n    }\n    if (betType === 'rain_yes') {\n      // Moderate adjustment for \"will rain\" in spring\n      return odds * 0.9;\n    }\n    if (betType === 'rain_no') {\n      // Slight adjustment for \"won't rain\" in spring\n      return odds * 1.1;\n    }\n    if (betType === 'wind' && value > 25) {\n      // Spring can be windy in Málaga\n      return odds * 0.9;\n    }\n  }\n  \n  return odds; // No adjustment for other conditions\n};\n\n/**\n * Calculates odds for rain bets based on realistic probabilities for Málaga\n * @param mm Rain amount in millimeters\n */\nexport const getRainOdds = (mm: number): number => {\n  let baseOdds: number;\n  \n  // Rain odds based on Málaga's climate data\n  if (mm === 0 || mm < 0.01) {\n    baseOdds = 1.15; // Very high probability of no rain in Málaga (87% chance)\n  } else if (mm <= 1) {\n    baseOdds = 3.5; // Light rain is uncommon\n  } else if (mm <= 3) {\n    baseOdds = 5.0; // Moderate rain is rare\n  } else if (mm <= 5) {\n    baseOdds = 8.0; // Significant rain is very rare\n  } else if (mm <= 10) {\n    baseOdds = 15.0; // Heavy rain is extremely rare\n  } else if (mm <= 15) {\n    baseOdds = 25.0; // Very heavy rain is exceptionally rare\n  } else if (mm <= 20) {\n    baseOdds = 40.0; // Almost never happens\n  } else if (mm <= 30) {\n    baseOdds = 60.0; // Extremely unlikely\n  } else if (mm <= 40) {\n    baseOdds = 100.0; // Almost impossible\n  } else if (mm <= 50) {\n    baseOdds = 150.0; // Practically impossible\n  } else if (mm <= 75) {\n    baseOdds = 250.0; // Historical record territory\n  } else if (mm <= 100) {\n    baseOdds = 500.0; // Beyond historical records\n  } else {\n    baseOdds = 1000.0; // Catastrophic flooding level\n  }\n  \n  // Apply seasonal adjustments\n  return applySeasonalAdjustment(baseOdds, 'rain', mm);\n};\n\n/**\n * Gets odds for \"will rain\" bets based on Málaga's climate\n */\nexport const getRainYesOdds = (): number => {\n  // Base odds for \"will rain\" - Málaga has rain on ~13% of days annually\n  const baseOdds = 4.0; // Approximately 1/0.25 = 4.0\n  \n  // Apply seasonal adjustments\n  return applySeasonalAdjustment(baseOdds, 'rain_yes', 1);\n};\n\n/**\n * Gets odds for \"won't rain\" bets based on Málaga's climate\n */\nexport const getRainNoOdds = (): number => {\n  // Base odds for \"won't rain\" - Málaga has no rain on ~87% of days annually\n  const baseOdds = 1.15; // Approximately 1/0.87 = 1.15\n  \n  // Apply seasonal adjustments\n  return applySeasonalAdjustment(baseOdds, 'rain_no', 0);\n};\n\n/**\n * Calculates odds for temperature bets based on realistic probabilities and season\n * @param temp Temperature in Celsius\n */\nexport const getTemperatureOdds = (temp: number): number => {\n  let baseOdds: number;\n  \n  // Different odds based on season\n  if (isSummerMonth()) {\n    // Summer temperature odds for Málaga\n    if (temp < 20) {\n      baseOdds = 8.0; // Very unlikely to be below 20°C in summer\n    } else if (temp <= 25) {\n      baseOdds = 3.0; // Uncommon but possible\n    } else if (temp <= 30) {\n      baseOdds = 1.5; // Very common in summer\n    } else if (temp <= 35) {\n      baseOdds = 2.0; // Common but not everyday\n    } else if (temp <= 40) {\n      baseOdds = 5.0; // Uncommon heat waves\n    } else {\n      baseOdds = 15.0; // Extreme heat, very rare\n    }\n  } else if (isWinterMonth()) {\n    // Winter temperature odds for Málaga\n    if (temp < 8) {\n      baseOdds = 10.0; // Very rare to be this cold\n    } else if (temp <= 12) {\n      baseOdds = 3.0; // Cold but possible\n    } else if (temp <= 16) {\n      baseOdds = 1.8; // Common winter temperature\n    } else if (temp <= 20) {\n      baseOdds = 2.5; // Mild winter day\n    } else if (temp <= 25) {\n      baseOdds = 6.0; // Unusually warm\n    } else {\n      baseOdds = 15.0; // Extremely warm for winter\n    }\n  } else if (isSpringMonth()) {\n    // Spring temperature odds\n    if (temp < 12) {\n      baseOdds = 6.0; // Unusually cold\n    } else if (temp <= 16) {\n      baseOdds = 2.5; // Cool spring day\n    } else if (temp <= 20) {\n      baseOdds = 1.8; // Common spring temperature\n    } else if (temp <= 25) {\n      baseOdds = 2.0; // Warm spring day\n    } else if (temp <= 30) {\n      baseOdds = 4.0; // Very warm for spring\n    } else {\n      baseOdds = 10.0; // Extremely hot for spring\n    }\n  } else {\n    // Autumn temperature odds\n    if (temp < 12) {\n      baseOdds = 7.0; // Unusually cold\n    } else if (temp <= 16) {\n      baseOdds = 3.0; // Cool autumn day\n    } else if (temp <= 20) {\n      baseOdds = 1.7; // Common autumn temperature\n    } else if (temp <= 25) {\n      baseOdds = 2.2; // Warm autumn day\n    } else if (temp <= 30) {\n      baseOdds = 5.0; // Very warm for autumn\n    } else {\n      baseOdds = 12.0; // Extremely hot for autumn\n    }\n  }\n  \n  // Apply seasonal adjustments\n  return applySeasonalAdjustment(baseOdds, 'temperature', temp);\n};\n\n/**\n * Calculates odds for wind speed bets based on realistic probabilities for Málaga\n * @param speed Wind speed in km/h\n */\nexport const getWindOdds = (speed: number): number => {\n  let baseOdds: number;\n  \n  // Wind odds based on Málaga's climate data\n  if (speed <= 5) {\n    baseOdds = 2.5; // Very light wind is common but not constant\n  } else if (speed <= 10) {\n    baseOdds = 1.8; // Light breeze is common in Málaga\n  } else if (speed <= 15) {\n    baseOdds = 2.0; // Gentle breeze is common\n  } else if (speed <= 20) {\n    baseOdds = 2.5; // Moderate breeze is fairly common\n  } else if (speed <= 25) {\n    baseOdds = 3.5; // Fresh breeze is less common\n  } else if (speed <= 30) {\n    baseOdds = 5.0; // Strong breeze is uncommon\n  } else if (speed <= 40) {\n    baseOdds = 8.0; // Near gale is rare\n  } else if (speed <= 50) {\n    baseOdds = 15.0; // Gale is very rare\n  } else if (speed <= 60) {\n    baseOdds = 30.0; // Strong gale is extremely rare\n  } else if (speed <= 75) {\n    baseOdds = 60.0; // Storm is exceptionally rare\n  } else if (speed <= 90) {\n    baseOdds = 120.0; // Violent storm almost never happens\n  } else {\n    baseOdds = 250.0; // Hurricane force is practically impossible in Málaga\n  }\n  \n  // Apply seasonal adjustments\n  return applySeasonalAdjustment(baseOdds, 'wind', speed);\n};\n\n/**\n * Gets the current season name for display purposes\n */\nexport const getCurrentSeason = (): string => {\n  if (isSummerMonth()) {\n    return \"Verano\";\n  } else if (isWinterMonth()) {\n    return \"Invierno\";\n  } else if (isSpringMonth()) {\n    return \"Primavera\";\n  } else {\n    return \"Otoño\";\n  }\n};\n\n/**\n * Gets a description of the current betting conditions based on season\n */\nexport const getSeasonalBettingDescription = (): string => {\n  const season = getCurrentSeason();\n  \n  if (season === \"Verano\") {\n    return \"Verano en Málaga: Cuotas muy altas para lluvia, altas para viento fuerte, bajas para temperaturas elevadas.\";\n  } else if (season === \"Invierno\") {\n    return \"Invierno en Málaga: Cuotas más bajas para lluvia, moderadas para viento, altas para temperaturas bajas.\";\n  } else if (season === \"Primavera\") {\n    return \"Primavera en Málaga: Cuotas moderadas para lluvia, ligeramente reducidas para viento, equilibradas para temperatura.\";\n  } else {\n    return \"Otoño en Málaga: Cuotas muy bajas para lluvia (temporada de lluvias), moderadas para viento y temperatura.\";\n  }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}